##############################
# Block and Tabs definitions #
##############################

[blocks]
_name = "Blocks"
_description = "Block types for web UI"

# Single-particle

[blocks.spr_import_raw]
name = "SPA import raw"
description = "Data Import for SPA"
tabs = [ "data", "gain", "scope", "slurm", "micromon" ]

[blocks.spr_import]
name = "SPA import"
description = "CLI Import for SPA"
tabs = [ "data", "movie", "ctf", "detect", "detect_nn2d", "slurm" ]

[blocks.spr_import_star]
name = "SPA Star Import"
description = "Star data import for SPA"
tabs = [ "import", "data", "gain", "scope", "slurm" ]

[blocks.spr_session]
name = "SPA Session Import"
description = "Session import for SPA"
tabs = [ "movie", "ctf", "detect", "detect_nn2d", "slurm" ]

[blocks.spr_pre_process]
name = "SPA pre-processing (legacy)"
description = "Frame alignment, CTF, and particle picking"
tabs = [ "movie", "ctf", "detect", "detect_nn2d", "detect_topaz2d", "slurm" ]
forwarded_tabs = [ "data", "scope", "gain" ]

[blocks.spr_pure_preprocess]
name = "SPA pre-processing"
description = "Frame alignment, CTF, and particle picking"
tabs = [ "movie", "ctf", "slurm" ]
forwarded_tabs = [ "data", "scope", "gain" ]

[blocks.spr_coarse_refine]
name = "SPA Coarse Refinement"
description = "3D refinement and classification"
tabs = [ "particle", "extract", "refine", "csp", "reconstruct", "class", "slurm" ]

[blocks.spr_fine_refine]
name = "SPA Fine Refinement"
description = "3D refinement"
tabs = [ "extract", "refine", "reconstruct", "class", "slurm" ]

[blocks.spr_drgn]
name = "Heterogeneity analysis"
description = "cryoDRGN"
tabs = [ "heterogeneity", "slurm" ]

[blocks.spr_flexible_refine]
name = "SPA Frame Refinement"
description = "Per-particle movie frame refinement"
tabs = [ "refine", "csp", "reconstruct", "slurm" ]

[blocks.spr_denoise]
name = "SPA Denoising"
description = "Denoising"
tabs = [ "denoise2d", "slurm", "micromon" ] # TODO

[blocks.spr_picking]
name = "SPA Particle-picking"
description = "Particle picking"
tabs = [ "detect", "detect_nn2d", "detect_topaz2d", "slurm" ] # TODO

[blocks.spr_map_clean]
name = "Particle Filtering"
description = "Filter particles based on scores or by class"
tabs = [ "clean", "refine", "slurm" ]
forwarded_tabs = [ "particle", "extract", "csp", "reconstruct" ]

# Tomography 

[blocks.tomo_import_raw]
name = "TOMO import"
description = "Data Import for TOMO"
tabs = [ "data", "gain", "scope", "slurm", "micromon" ]

[blocks.tomo_import]
name = "TOMO import"
description = "CLI Import for TOMO"
tabs = [ "data", "movie", "ctf", "tomo_ali", "tomo_rec", "tomo_vir", "tomo_spk", "detect_nn3d", "tomo_ext", "slurm" ]

[blocks.tomo_import_pure]
name = "TOMO import"
description = "CLI Import for TOMO"
tabs = [ "data", "movie", "ctf", "tomo_ali", "tomo_rec", "slurm" ]

[blocks.tomo_import_star]
name = "TOMO Star Import"
description = "Star data import for TOMO"
tabs = [ "import", "data", "gain", "scope", "tomo_rec", "slurm" ]

[blocks.tomo_session]
name = "TOMO Session Import"
description = "Star data import for TOMO"
tabs = [ "movie", "ctf", "tomo_ali", "tomo_rec", "tomo_vir", "tomo_spk", "detect_nn3d", "tomo_ext", "slurm" ]

[blocks.tomo_pre_process]
name = "TOMO Pre-processing (legacy)"
description = "Frame/tilt-series alignment, CTF, and particle picking"
tabs = [ "movie", "ctf", "tomo_ali", "tomo_rec", "tomo_vir", "tomo_spk", "detect_nn3d", "tomo_ext", "slurm" ]
forwarded_tabs = [ "data", "scope", "gain" ]

[blocks.tomo_pure_preprocess]
name = "TOMO Pre-processing"
description = "Alignment, reconstruction, and CTF"
tabs = [ "movie", "ctf", "tomo_ali", "tomo_rec", "slurm" ]
forwarded_tabs = [ "data", "scope" ]

[blocks.tomo_segment_open]
name = "TOMO Segmentation (open)"
description = "Segment membranes (membrain-seg)"
tabs = [ "tomo_mem", "slurm" ]
forwarded_tabs = [ "data", "scope" ]

[blocks.tomo_segment_close]
name = "TOMO Segmentation (close)"
description = "Segment virions or vesicles"
tabs = [ "tomo_sphere", "slurm" ]
forwarded_tabs = [ "data", "scope" ]

[blocks.tomo_picking]
name = "TOMO Particle-picking"
description = "Size-based, import, manual and virions"
tabs = [ "tomo_pick", "tomo_ext", "slurm" ]
forwarded_tabs = [ "data", "scope", "movie" ]

[blocks.tomo_par_open]
name = "TOMO Particle-picking"
description = "Particle picking on open surfaces"
tabs = [ "tomo_srf", "tomo_ext", "slurm" ]
forwarded_tabs = [ "data", "scope", "movie" ]

[blocks.tomo_par_close]
name = "TOMO Particle-picking"
description = "Uniform sampling or TM on virion surfaces"
tabs = [ "tomo_srf", "tomo_ext", "slurm" ]
forwarded_tabs = [ "data", "scope", "movie" ]

[blocks.tomo_initial_refine]
name = "TOMO Initial Refinement"
description = "Ab-initio refinement and reconstruction"
tabs = [ "particle", "extract", "metric", "csp_tomo_init", "reconstruct", "slurm" ]

[blocks.tomo_reference_refine]
name = "TOMO Initial Refinement"
description = "Align particles to an external reference"
tabs = [ "particle", "extract", "metric", "csp_tomo_reference", "reconstruct", "slurm" ]

[blocks.tomo_initial_reconstruct]
name = "TOMO Initial Refinement"
description = "Reconstruct using exisiting/no alignments"
tabs = [ "particle", "extract", "csp_tomo_free", "reconstruct", "slurm" ]

[blocks.tomo_new_coarse_refine]
name = "TOMO Coarse Refinement"
description = "Constrained 3D refinement"
tabs = [ "particle", "extract", "metric", "csp_tomo_coarse", "reconstruct", "slurm" ]

[blocks.tomo_new_coarse_classification]
name = "TOMO Coarse Refinement"
description = "Constrained 3D classification"
tabs = [ "particle", "extract", "metric", "csp_tomo_classification", "reconstruct", "slurm" ]

[blocks.tomo_coarse_refine]
name = "TOMO Coarse Refinement (legacy)"
description = "3D refinement and classification (legacy)"
tabs = [ "particle", "extract", "refine", "csp", "reconstruct", "class", "slurm" ]

[blocks.tomo_drgn_vae]
name = "tomoDRGN VAE"
description = "tomoDRGN (train-vae)"
tabs = [ "tomodrgn_vae_train", "tomodrgn_vae_convergence", "slurm" ]

[blocks.tomo_drgn_analyze]
name = "tomoDRGN analyze"
description = "tomoDRGN (analyze)"
tabs = [ "tomodrgn_analyze", "slurm" ]

[blocks.tomo_drgn_analyze_vols]
name = "tomoDRGN analyze volumes"
description = "tomoDRGN (analyze volumes)"
tabs = [ "tomodrgn_eval_vol", "tomodrgn_analyze_volumes", "slurm" ]

[blocks.tomo_drgn_filter]
name = "tomoDRGN filtering"
description = "tomoDRGN (filter_star)"
tabs = [ "tomodrgn_filter_star", "slurm" ]

[blocks.tomo_milo_train]
name = "MiLoPYP training"
description = "Train MiLoPYP model for pattern mining"
tabs = [ "detect_milo", "slurm" ]
forwarded_tabs = [] # TODO ?

[blocks.tomo_milo_eval]
name = "MiLoPYP evaluation"
description = "Evaluate MiLoPYP (trained model required)"
tabs = [ "detect_milo", "slurm" ]
forwarded_tabs = [] # TODO ?

[blocks.tomo_particles_train]
name = "TOMO Particles Training"
description = "Train NN model for particle picking"
tabs = [ "detect_nn3d", "slurm" ] # TODO ?
forwarded_tabs = [] # TODO ?

[blocks.tomo_particles_eval]
name = "TOMO Particles Evaluation"
description = "NN-based picking (trained model required)"
tabs = [ "detect_nn3d", "tomo_ext", "slurm" ]
forwarded_tabs = [] # TODO ?

[blocks.tomo_clean]
name = "TOMO Particle Cleaning"
description = "Clean/filter particles"
tabs = [ "clean", "slurm" ]

[blocks.tomo_mask]
name = "TOMO Mask Generation"
description = "Generate shape masks"
tabs = [ "mask", "slurm" ]

[blocks.tomo_denoise_train]
name = "TOMO Denoising (training)"
description = "Train ML model for denoising"
tabs = [ "tomo_denoise", "slurm", "micromon" ]

[blocks.tomo_denoise_eval]
name = "TOMO Denoising (eval)"
description = "Evaluate ML model for denoising"
tabs = [ "tomo_denoise", "slurm", "micromon" ]

[blocks.tomo_flexible_refine]
name = "TOMO Frame Refinement"
description = "Refine tilt-movie frames per-particle"
tabs = [ "metric", "csp_tomo_movie", "reconstruct", "slurm" ]

[blocks.tomo_flexible_refine_after]
name = "TOMO Frame Refinement"
description = "Additional refinement after movie alignment"
tabs = [ "metric", "csp_tomo_movie_after", "reconstruct", "slurm" ]

[blocks.tomo_map_clean]
name = "Particle Filtering"
description = "Filter particles by score, distance, or class"
tabs = [ "clean", "slurm" ]
forwarded_tabs = [ "particle", "extract", "csp", "reconstruct" ]

# common blocks

[blocks.spr_tomo_map_mask]
name = "Mask Creation"
description = "Create shape masks"
tabs = [ "mask", "slurm" ]

[blocks.spr_tomo_map_clean]
name = "Particle Filtering"
description = "Select particles by score, distance, or class"
tabs = [ "clean", "particle", "extract", "refine", "csp", "reconstruct", "slurm" ]

[blocks.spr_tomo_post_process]
name = "Post-processing"
description = "Map sharpening and FSC curves"
tabs = [ "sharpen", "slurm" ]

# streamPYP

[blocks.stream_spr]
name= "Single-particle Streaming"
description = "Data streaming mode for single-particle sessions"
tabs = [ "data", "gain", "scope", "stream", "movie", "ctf", "detect", "detect_nn2d", "class2d", "slurm" ]

[blocks.stream_tomo]
name= "Tomography Streaming"
description = "Data streaming mode for tomography sessions"
tabs = [ "data", "gain", "scope", "stream", "movie", "ctf", "tomo_ali", "tomo_rec", "tomo_vir", "tomo_spk", "detect_nn3d", "tomo_ext", "slurm" ]

########
# Tabs #
########

[tabs]
_name = "Parameter groups to use as tabs in web UI and for PYP CLI parameter definition"
_description = "Data analysis parameters grouped according to their function"
_help = "PYP - Cryo-EM/ET image analysis"

# 3D reconstruction parameters

[tabs.micromon]
_name = "Micromon options"
_description = "Micromon options without real use for now"
_hidden = [ "spr_import_raw", "spr_denoise", "tomo_denoise" ]

[tabs.micromon.block]
name = "Apply symmetry"
description = "Apply symmetry during reconstruction"
type = "str"
default = ""
hidden = true

# Miroscope parameters

[tabs.scope]
_name = "Microscope parameters"
_description = "Parameters of microscope used to acquire the data"

[tabs.scope.pixel]
name = "Pixel size (A)"
description = "Pixel size of the detector"
type = "float"
required = true

[tabs.scope.voltage]
name = "Acceleration voltage (kV)"
description = "Voltage used for imaging"
type = "float"
required = true

[tabs.scope.mag]
name = "Magnification"
description = "Magnification used for imaging (deprecated)"
type = "int"
default = 10000
hidden = true

[tabs.scope.cs]
name = "Spherical aberration"
description = "Spherical aberration of the microscope (Cs)"
type = "float"
default = 2.7
advanced = true

[tabs.scope.wgh]
name = "Amplitude contrast"
description = "Amplitude contrast of the microscope"
type = "float"
default = 0.07
advanced = true

[tabs.scope.init_dose]
name = "Initial dose (e^-/A^2)"
description = "Amount of pre-exposure before stack is acquired"
type = "float"
default = 0.0
advanced = true

[tabs.scope.dose_rate]
name = "Dose rate (e^-/A^2)"
description = "Number of electrons per unit area used during imaging"
type = "float"
default = 1.0
advanced = true

[tabs.scope.mag_major]
name = "Magnification along major axis"
description = "Magnification along major axis"
type = "float"
default = 1.0
advanced = true

[tabs.scope.mag_minor]
name = "Magnification along minor axis"
description = "Magnification along minor axis"
type = "float"
default = 1.0
advanced = true

[tabs.scope.distort_ang]
name = "Distortion angle"
description = "Angle of the major axis relative to the image x-axis in degrees"
type = "float"
default = 0.0
advanced = true

[tabs.scope.beam_tilt_x]
name = "Beam tilt in X"
description = "Beam tilt in X (mRad)"
type = "float"
default = 0.0
hidden = true

[tabs.scope.beam_tilt_y]
name = "Beam tilt in Y"
description = "Beam tilt in Y (mRad)"
type = "float"
default = 0.0
hidden = true

[tabs.scope.image_shift_x]
name = "Image shift in X"
description = "Image shift in X (mRad)"
type = "float"
default = 0.0
hidden = true

[tabs.scope.image_shift_y]
name = "Image shift in Y"
description = "Image shift in Y (mRad)"
type = "float"
default = 0.0
hidden = true

[tabs.scope.tilt_axis]
name = "Tilt-axis angle (degrees)"
description = "Approximate orientation of tilt-axis with respect to the x-axis (counterclockwise positive). Use 90.0 if tilt-series are already aligned"
type = "float"
default = 0.0
hidden = [ "spr_import_raw", "spr_import_star", "stream_spr" ]

# Data parameters

[tabs.data]
_name = "Raw data"
_description = "Sample"
_hidden = [ "spr_flexible_refine", "tomo_flexible_refine" ]

[tabs.data.set]
name = "data_set"
description = "Name of project"
type = "str"
hidden = true

[tabs.data.path]
name = "Location"
description = "Location of files containing the raw data"
type = "path"
path = { type="files", glob=true }
required = true
hidden = ["spr_import", "tomo_import", "tomo_import_pure"]

[tabs.data.path_mdoc]
name = "Location of mdoc files"
description = "Location of mdoc files containing the metadata"
type = "path"
path = { type="files", glob=true }
hidden = ["spr_import", "tomo_import", "tomo_import_pure", "spr_import_raw", "spr_import_star", "tomo_import_star" ]

[tabs.data.parent]
name = "Path to existing CLI project"
description = "Path to existing CLI project"
type = "path"
path = { type="folders" }
hidden = ["spr_import_star", "tomo_import_star", "spr_import_raw", "tomo_import_raw", "stream_spr", "stream_tomo" ]

[tabs.data.import]
name = "Import data"
description = "Import data from existing pyp session"
type = "bool"
default = false
hidden = true

[tabs.data.retrieve]
name = "Use metadata"
description = "Retrieve existing metadata (if available)"
type = "bool"
default = false
hidden = ["spr_import_raw", "spr_import_star", "tomo_import_raw", "tomo_import_star", "stream_tomo", "stream_spr"]

[tabs.data.mode]
name = "data_mode"
description = "Type of data"
type = "enum"
enum = { spr="Single-Particle", tomo="Tomography" }
required = true
hidden = true

[tabs.data.bin]
name = "Binning"
description = "Factor to downsample data before processing"
type = "int"
default = 1
hidden = true

[tabs.data.invert] 
name = "Invert contrast"
description = "Invert image contrast"
type = "bool"
default = false
hidden = [ "spr_import", "tomo_import", "tomo_import_pure"]
advanced = true

[tabs.data.auto]
name = "data_auto"
description = "Enable automated data streaming"
type = "bool"
default = false
hidden = true

# Gain-Reference Parameters

[tabs.gain]
_name = "Gain reference"
_description = "Gain reference parameters"

[tabs.gain.reference]
name = "Location"
description = "Path to gain reference"
type = "path"
path = { type="files" }

[tabs.gain.rotation]
name = "Clockwise rotation (multiple of 90 degrees)"
description = "Rotate gain reference by this angle to match the orientation of the data"
type = "int"
default = 0

[tabs.gain.fliph]
name = "Flip horizontally"
description = "Flip gain reference along the horizontal dimension"
type = "bool"
default = false

[tabs.gain.flipv]
name = "Flip vertically"
description = "Flip gain reference along the vertical dimension"
type = "bool"
default = false

[tabs.gain.remove_hot_pixels]
name = "Remove hot pixels"
description = "Remove high intensity pixels before doing gain correction"
type = "bool"
default = false
advanced = true

# Movie parameters

[tabs.movie]
_name = "Frame alignment"
_description = "Movie frame parameters"

[tabs.movie.no_frames]
name = "Single-file tilt-series"
description = "Select this option if all tilts are in a single file"
type = "bool"
default = false
hidden = ["spr_pre_process", "spr_pure_preprocess", "spr_import_star", "spr_import", "stream_spr" ]

[tabs.movie.pattern]
name = "Frame pattern"
description = "Pattern to describe frame data (tilt-series name, acquisition order, and tilt-angle)"
type = "str"
default = "TILTSERIES_SCANORD_ANGLE.tif"
hidden = ["spr_pre_process", "spr_pure_preprocess", "spr_import_star", "spr_import", "stream_spr" ]
condition = { arg="no_frames", value="false" }

[tabs.movie.mdoc]
name = "Read metadata from mdoc files"
description = "Extract parameters from mdoc files (tilt angles, tilt axis rotation angles and scan order) if available"
type = "bool"
default = false
hidden = ["spr_pre_process", "spr_pure_preprocess", "spr_import_star", "spr_import", "stream_spr" ]
condition = { arg="no_frames", value="false" }

[tabs.movie.depth]
name = "Save frame averages in 16-bits"
description = "Files saved in this format will require 50 percent less storage"
type = "bool"
default = true
condition = { arg="no_frames", value="false" }

[tabs.movie.force]
name = "Force recalculation"
description = "Force recalculation of movie frame alignment"
type = "bool"
default = true
hidden = true

[tabs.movie.ali]
name = "Alignment method"
description = "Method used for frame alignment"
type = "enum"
enum = { unblur="unblur", motioncor="motioncor3 (GPU required)", skip="no alignment" }
default = "unblur"
hidden = ["spr_import_star","tomo_import_star"]

[tabs.movie.eer_reduce]
name = "EER SR reduction factor"
description = "Amount of super-resolution information to retain (1=none, 2=2x, 4=4x)"
type = "int"
default = 1
condition = { arg="ali", value=[ "unblur", "motioncor", "skip" ] }
hidden = ["spr_import_star","tomo_import_star"]

[tabs.movie.eer_frames]
name = "EER frames to average"
description = "Successive frames to average when reading EER files"
type = "int"
default = 1
condition = { arg="ali", value=[ "unblur", "motioncor" ] }
hidden = ["spr_import_star","tomo_import_star"]

[tabs.movie.first]
name = "First frame"
description = "Discard frames lower than this value (0=do not discard early frames)"
type = "int"
default = 0
condition = { arg="ali", value=[ "unblur", "motioncor", "skip" ] }
hidden = ["spr_import_star","tomo_import_star"]

[tabs.movie.last]
name = "Last frame"
description = "Discard frames higher than this value (-1=do not discard late frames)"
type = "int"
default = -1
condition = { arg="ali", value=[ "unblur", "motioncor", "skip" ] }
hidden = ["spr_import_star","tomo_import_star"]

[tabs.movie.group]
name = "Frame grouping"
description = "Number of frames to average together (1=no averaging). Use odd values when using unblur"
type = "int"
default = 1
condition = { arg="ali", value=[ "unblur", "motioncor" ] }
hidden = ["spr_import_star","tomo_import_star"]

[tabs.movie.iters]
name = "Iterations"
description = "Number of iterations used during frame alignment (if applicable)"
type = "int"
default = 5
hidden = true

[tabs.movie.pbc]
#XD: is there a full name for this?
name = "PBC factor"
description = "PBC parameter for frame weighting"
type = "float"
default = 0.5
hidden = true

[tabs.movie.boff]
#XD: is there a full name for this?
name = "BOFF factor"
description = "BOFF for frame weighting"
type = "float"
default = 0.5
hidden = true

[tabs.movie.weights]
name = "Exposure weighting"
description = "Produce exposure-weighted frame averages"
type = "bool"
default = false
condition = { arg="ali", value=[ "unblur", "motioncor" ] }
hidden = ["spr_import_star","spr_import","tomo_import_star","tomo_import", "tomo_import_pure","stream_tomo"]

[tabs.movie.magcorr]
name = "Correct anisotropic magnification"
description = "Correct anisotropic magnification by stretching image along the major axis"
type = "bool"
default = false
condition = { arg="ali", value=[ "unblur", "motioncor" ] }
hidden = ["spr_import_star","spr_import","tomo_import_star","tomo_import", "tomo_import_pure","stream_tomo"]

[tabs.movie.force_integer]
name = "Force integer shifts"
description = "Force integer shifts to preserve high-resolution information"
type = "bool"
default = false
condition = { arg="ali", value=[ "unblur", "motioncor" ] }
hidden = ["spr_import_star","tomo_import_star"]

[tabs.movie.bin]
name = "Binning"
description = "Binning factor to use during frame alignment"
type = "int"
default = 2
condition = { arg="ali", value="unblur" }
hidden = ["spr_import_star","tomo_import_star"]

[tabs.movie.bfactor]
name = "B-factor for alignment"
description = "B-factor to use during frame alignment (use larger values for noisier data)"
type = "float"
condition = { arg="ali", value="unblur" }
default = 1500
hidden = ["spr_import_star","tomo_import_star"]

[tabs.movie.motioncor_bin]
name = "Image binning"
description = "Binning factor in Fourier space (use values >= 1)"
type = "float"
condition = { arg="ali", value="motioncor" }
default = 1.0
hidden = ["spr_import_star","tomo_import_star"]

[tabs.movie.motioncor_bfactor_global]
name = "Global B-factor"
description = "Global B-factor to use during frame alignment (use larger values for noisier data)"
type = "float"
condition = { arg="ali", value="motioncor" }
default = 500.0
hidden = ["spr_import_star","tomo_import_star"]

[tabs.movie.motioncor_bfactor_local]
name = "Local B-factor"
description = "Local B-factor to use during frame alignment (use larger values for noisier data)"
type = "float"
condition = { arg="ali", value="motioncor" }
default = 150.0
hidden = ["spr_import_star","tomo_import_star"]

[tabs.movie.motioncor_tol]
name = "Shifts tolerance"
description = "Tolerance for shifts during iterative alignment"
type = "float"
default = 0.1
condition = { arg="ali", value="motioncor" }
hidden = ["spr_import_star","tomo_import_star"]

[tabs.movie.motioncor_iter]
name = "Maximum iterations"
description = "Maximum number of iterations during iterative alignment"
type = "int"
default = 7
condition = { arg="ali", value="motioncor" }
hidden = ["spr_import_star","tomo_import_star"]

[tabs.movie.motioncor_phase_only]
name = "Use phase only"
description = "Use phase only during cross-correlation"
type = "bool"
default = true
condition = { arg="ali", value="motioncor" }
hidden = ["spr_import_star","tomo_import_star"]

[tabs.movie.motioncor_corr_interp]
name = "Interpolation compensation"
description = "Use interpolation compensation during alignment"
type = "bool"
default = false
condition = { arg="ali", value="motioncor" }
hidden = ["spr_import_star","tomo_import_star"]

[tabs.movie.motioncor_in_frame_motion]
name = "In frame motion"
description = "Take into account motion-induced blurring of each frame"
type = "bool"
default = false
condition = { arg="ali", value="motioncor" }
hidden = ["spr_import_star","tomo_import_star"]

[tabs.movie.motioncor_patch_x]
name = "Number of patches in X axis"
description = "Number of patches in X axis used for frame alignment"
type = "int"
default = 1
condition = { arg="ali", value="motioncor" }
hidden = ["spr_import_star","tomo_import_star"]

[tabs.movie.motioncor_patch_y]
name = "Number of patches in Y axis"
description = "Number of patches in Y axis used for frame alignment"
type = "int"
default = 1
condition = { arg="ali", value="motioncor" }
hidden = ["spr_import_star","tomo_import_star"]

[tabs.movie.motioncor_patch_overlap]
name = "Overlap between patches"
description = "Percent overlap between adjacent patches"
type = "int"
default = 50
condition = { arg="ali", value="motioncor" }
hidden = ["spr_import_star","tomo_import_star"]

[tabs.movie.motioncor_frameref]
name = "Frame used for reference"
description = "The frame used for reference during alignment (1 means the first frame; 0 means the center)"
type = "int"
default = 0
condition = { arg="ali", value="motioncor" }
hidden = ["spr_import_star","tomo_import_star"]

[tabs.movie.motioncor_sumrange_min]
name = "Minimum dose"
description = "Frames between minimum and maximum dose in e-/A^2 are used for averaging. Using [min=0, max=0] generates dose-weighted averages using all the frames"
type = "float"
default = 3.0
condition = { arg="ali", value="motioncor" }
hidden = ["spr_import_star","tomo_import_star"]

[tabs.movie.motioncor_sumrange_max]
name = "Maximum dose"
description = "Frames between minimum and maximum dose in e-/A^2 are used for averaging. Using [min=0, max=0] generates dose-weighted averages using all the frames"
type = "float"
default = 25.0
condition = { arg="ali", value="motioncor" }
hidden = ["spr_import_star","tomo_import_star"]

# Contrast transfer function parameters

[tabs.ctf]
_name = "CTF determination"
_description = "Settings for contrast transfer function (CTF)"

[tabs.ctf.force]
name = "Force recalculation"
description = "Force recalculation of CTF parameters"
type = "bool"
default = true
hidden = true

[tabs.ctf.method]
name = "CTF estimation method"
description = "Which CTF estimation method to use"
type = "enum"
enum = { ctffind4="ctffind4", ctffind5="ctffind5" }
default = "ctffind4"
hidden = true

[tabs.ctf.min_res]
name = "Min resolution (A)"
description = "Minimum resolution used for CTF estimation"
type = "float"
default = 50.0

[tabs.ctf.max_res]
name = "Max resolution (A)"
description = "Maximum resolution used for CTF estimation"
type = "float"
default = 3.5

[tabs.ctf.min_def]
name = "Min defocus (A)"
description = "Minimum allowable defocus"
type = "float"
default = 3500.0

[tabs.ctf.max_def]
name = "Max defocus (A)"
description = "Maximum allowable defocus"
type = "float"
default = 50000.0

[tabs.ctf.use_phs]
name = "Estimate phase shift"
description = "Estimate phase shift"
type = "bool"
default = false
hidden = true

[tabs.ctf.tile]
name = "Tile size"
description = "Tile size used for periodogram averaging"
type = "int"
default = 512

[tabs.ctf.fstep]
name = "Defocus step size (A)"
description = "Step size used during defocus search"
type = "float"
default = 250.0

[tabs.ctf.use_ast]
name = "Estimate astigmatism"
description = "Estimate astigmatism angle"
type = "bool"
default = true

[tabs.ctf.dast]
name = "Astigmatism step size (A)"
description = "Step size used during astigmatism search"
type = "float"
condition = { arg="use_ast", value="true" }
default = 2500.0

[tabs.ctf.use_lcl]
name = "Estimate local CTF"
description = "Use local defocus estimation"
type = "bool"
default = false
hidden = true

[tabs.ctf.handedness_mintilt]
name = "Min tilt to detect tilt handedness"
description = "Tilt angles with absolute values lower than this number will not be used for handedness estimation"
type = "float"
default = 10.0
hidden = [ "stream_spr", "spr_pre_process", "spr_pure_preprocess" ]

[tabs.ctf.handedness_maxtilt]
name = "Max tilt to detect tilt handedness"
description = "Tilt angles with absolute values higher than this number will not be used for handedness estimation"
type = "float"
default = 50.0
hidden = [ "stream_spr", "spr_pre_process", "spr_pure_preprocess" ]

[tabs.ctf.phase_shift]
name = "Find phase shift"
description = "Find additional phase shift"
type = "bool"
default = false
condition={ arg="method", value="ctffind5" }

[tabs.ctf.min_rad]
name = "Min phase shift (rad)"
description = "Minimum phase shift"
type = "float"
default = 0.0
condition={ arg="phase_shift", value="true" }

[tabs.ctf.max_rad]
name = "Max phase shift (rad)"
description = "Maximum phase shift"
type = "float"
default = 0.0
condition={ arg="phase_shift", value="true" }

[tabs.ctf.ps_step]
name = "Search step"
description = "Phase shift search step"
type = "float"
default = 0.0
condition={ arg="phase_shift", value="true" }

[tabs.ctf.determine_tilt]
name = "Detect tilt axis and angle"
description = "Image tilt axis and tilt angle estimation"
type = "bool"
default = false
condition={ arg="method", value="ctffind5" }

[tabs.ctf.tilt_axis_known]
name = "Tilt axis is known"
description = "Estimate CTF with known tilt axis"
type = "bool"
default = false
condition={ arg="method", value="ctffind5" }

[tabs.ctf.tilt_axis]
name = "Known tilt axis angle"
description = "Tilt axis used for CTF estimation, angle from X-axis, counterclockwise as positive. (The angle that actually used for tomogram reconstruction)"
type = "float"
default = 0.0
condition={ arg="tilt_axis_known", value="true" }

[tabs.ctf.determine_thickness]
name = "Detect sample thickness"
description = "Sample thickness estimation"
type = "bool"
default = false
condition={ arg="method", value="ctffind5" }

[tabs.ctf.known_ast]
name = "Known astigmatism"
description = "Astigmatism values (Angstrom)"
type = "float"
default = 0.0
condition={ arg="method", value="ctffind5" }

[tabs.ctf.known_ast_angle]
name = "Known astigmatism angle"
description = "Astigmatism angle values (degrees)"
type = "float"
default = 0.0
condition={ arg="known_ast", value="true" }

[tabs.denoise2d]
_name = "Micrograph denoising"
_description = "Parameters to denoise micrographs"

[tabs.denoise2d.method]
name = "Method"
description = "Denoise tomograms with selected method"
type = "enum"
enum = {none="none", topaz="topaz"}
default = "none"

[tabs.denoise2d.topaz_model]
name = "Pre-trained model"
description = "Pre-trained model to use for denoising"
type = "enum"
enum = { unet-3d-10a="unet-3d-10a", unet-3d="unet-3d", unet-3d-20a="unet-3d-20a" }
default = "unet-3d-10a"
condition = { arg="method", value="topaz" }

# Particle detection parameters

[tabs.detect]
_name = "Particle detection"
_description = "Settings for particle detection"

[tabs.detect.rad]
name = "Particle radius (A)"
description = "Radius to use for picking"
type = "float"

[tabs.detect.force]
name = "Force particle detection"
description = "Force particle detection"
type = "bool"
default = false
hidden = true

[tabs.detect.method]
name = "Method"
description = "Strategy to use for particle detection"
type = "enum"
enum = { none="none", auto="auto", all="all", manual="manual (list of positions required)", import="import (path to particle coordinates required)", pyp-train="pyp-train (list of positions required)", pyp-eval="pyp-eval (trained model required)", topaz-train="topaz-train (list of positions required)", topaz-eval="topaz-eval (trained model required)" }
default = "none"

[tabs.detect.files]
name = "Import particle coordinates (*.box, *.spk)"
description = "Location of files containing particle coordinates to import"
type = "path"
path = { type="folders" }
hidden = ["stream_spa", "stream_tomo", "stream_spr"]
condition = { arg="method", value="import" }

[tabs.detect.ref]
name = "Template for reference-based picking (*.mrc)"
description = "Path to 3D template"
type = "path"
path = { type="files" }
input = { type="initialModel" }
hidden = [ "stream_tomo", "stream_spr", "spr_pre_process", "spr_picking" ]

[tabs.detect.dist]
name = "Min distance (pixels)"
description = "Minimum distance between detected particles (smaller values produce more particles)"
type = "int"
default = 20
condition = { arg="method", value=["auto", "all"] }

[tabs.detect.thre]
name = "Min correlation"
description = "Minimum correlation value used for detection (larger values produce fewer particles)"
type = "float"
default = 0.2
condition = { arg="method", value="auto" }

[tabs.detect.ignore_contamination]
name = "Skip contamination detection"
description = "Skip generation of binary contamination mask"
type = "bool"
default = false
condition = { arg="method", value=["auto", "all"] }

[tabs.detect.offset]
name = "Height offset for 3D picking (binned voxels)"
description = "Offset particle positions above membrane by this amount. Useful when the segmentation is not located at the base of the particles"
type = "int"
default = 0
hidden = [ "spr_pre_process", "spr_picking", "stream_spr" ]

[tabs.detect.rand]
name = "Randomize in-plane particle rotation"
description = "Randomize particle orientations around surface normal to reduce missing wegde effects"
type = "bool"
default = true
hidden = [ "spr_pre_process", "spr_picking", "stream_spr" ]

[tabs.detect_nn2d]
_name = "Training/Evaluation (pyp)"
_description = "Settings for particle detection using neural networks"

[tabs.detect_nn2d.ref]
name = "Trained model (*.training)"
description = "Path to trained model"
type = "path"
path = { type="files" }
input = { type="trainedModel2D" }

[tabs.detect_nn2d.bin]
name = "Image downsampling factor"
description = "Downsample images by this factor for training and evaluation"
type = "int"
default = 8

[tabs.detect_nn2d.num_particles]
name = "Expected number of particles per micrograph"
description = "Expected number of particles per micrograph (>0). Either this parameter or pi must be set"
type = "int"
default = 300

[tabs.detect_nn2d.iterations]
name = "Iterations"
description = "Number of iterations to use for NN training" 
type = "int"
default = 120000
hidden = ["tomo_pre_process", "stream_spr"]

[tabs.detect_nn2d.alpha]
name = "Alpha"
description = "Weighting coefficient to use for loss function" 
type = "float"
default = 0.95
hidden = ["tomo_pre_process", "stream_spr"]

[tabs.detect_nn2d.batch_size]
name = "Batch size"
description = "Number of training samples to use before the model parameters are updated" 
type = "int"
default = 32
hidden = ["tomo_pre_process", "stream_spr"]

[tabs.detect_nn2d.tau]
name = "Percentage of positives"
description = "Value for positive unlabeled learning (Tau)" 
type = "float"
default = 0.08
hidden = ["tomo_pre_process", "stream_spr"]

[tabs.detect_nn2d.patch_size]
name = "Patch size"
description = "Patch size to use during training"
type = "int"
default = 64
hidden = ["tomo_pre_process", "stream_spr"]

[tabs.detect_nn2d.thresh]
name = "Threshold for soft/hard positives"
description = "Threshold for soft/hard positives"
type = "float"
default = 0

[tabs.detect_nn2d.algorithm]
name = "Training algorithm"
description = "Algorithm used for training" 
type = "str"
default = "ssdn"
hidden = ["tomo_pre_process", "stream_spr"]
advanced = true

[tabs.detect_nn2d.noise_value]
name = "Noise estimation"
description = "Whether the noise value should be estimated" 
type = "str"
default = "var"
hidden = ["tomo_pre_process", "stream_spr"]
advanced = true

[tabs.detect_nn2d.num]
name = "Evaluation samples"
description = "Number of eval samples during training" 
type = "int"
default = 1
hidden = ["tomo_pre_process", "stream_spr"]
advanced = true

[tabs.detect_nn2d.noise_style]
name = "Noise model"
description = "Noise model using a string configuration in the format: {noise_type}{args} where {args} are the arguments passed to the noise function"
type = "str"
default = "gaussian"
hidden = ["tomo_pre_process", "stream_spr"]
advanced = true

[tabs.detect_nn2d.bb]
name = "Double b"
description = "Parameter used during training"
type = "int"
default = 28
hidden = ["tomo_pre_process", "stream_spr"]
advanced = true

[tabs.detect_nn2d.debug]
name = "Debug mode"
description = "Save intermediate results to output folder"
type = "bool"
default = false
advanced = true

[tabs.detect_topaz2d]
_name = "Training/Evaluation (topaz)"
_description = "Settings for particle detection using Topaz"

[tabs.detect_topaz2d.ref]
name = "Trained model (*.training)"
description = "Path to trained model"
type = "path"
path = { type="files" }
input = { type="trainedModel2D" }

[tabs.detect_topaz2d.pretrained]
name = "Use pretrained initialization"
description = "Initialize parameters using a pretrained model"
type = "bool"
default = false

[tabs.detect_topaz2d.pretrained_model]
name = "Pre-train model (Topaz extract)"
description = "Pre-trained model to use for particle picking"
type = "enum"
enum = { none="none", resnet8_u32="resnet8_u32", resnet8_u64="resnet8_u64", resnet16_u32="resnet16_u32", resnet16_u64="resnet16_u64" }
default = "resnet16_u64"

[tabs.detect_topaz2d.num_particles]
name = "Expected number of particles per micrograph"
description = "Expected number of particles per micrograph (>0). Either this parameter or pi must be set"
type = "int"
default = 300

[tabs.detect_topaz2d.epochs]
name = "Number of epochs for training"
description = "Maximum number of training epochs"
type = "int"
default = 10

[tabs.detect_topaz2d.bin]
name = "Image downsampling factor"
description = "Downsample images by this factor for training and evaluation"
type = "int"
default = 8

[tabs.detect_topaz2d.train_rad]
name = "Training radius in pixels"
description = "Pixel radius around particle centers to consider positive"
type = "int"
default = 3

[tabs.detect_topaz2d.extract_rad]
name = "Radius of extracted regions"
description = "Radius of regions to extract (increase if particles are double-picked, decrease if particles are missed)"
type = "int"
default = 10

[tabs.detect_topaz2d.train_method]
name = "Loss function"
description = "Objective function to use for learning the region classifier"
type = "enum"
enum = { PN="PN", GE-KL="GE-KL", GE-binomial="GE-binomial", PU="PU" }
default = "GE-binomial"
advanced = true

[tabs.detect_topaz2d.train_slack]
name = "Slack"
description = "Weight on GE penalty (default: 10 for GE-KL, 1 for GE-binomial)"
type = "float"
default = -1
advanced = true

[tabs.detect_topaz2d.train_autoencoder]
name = "Autoencoder weight"
description = "Option to augment method with autoencoder. Weight on reconstruction error"
type = "float"
default = 0
advanced = true

[tabs.detect_topaz2d.train_reg]
name = "Regularization"
description = "L2 regularizer on the model parameters"
type = "float"
default = 0
advanced = true

[tabs.detect_topaz2d.train_learn_rate]
name = "Learning rate"
description = "Learning rate for the optimizer"
type = "float"
default = 0.0002
advanced = true

[tabs.detect_topaz2d.train_batchsize]
name = "Minibatch size"
description = "Number of data points per minibatch"
type = "int"
default = 256
advanced = true

[tabs.detect_topaz2d.train_batchbalance]
name = "Minibatch balance"
description = "Fraction of minibatch that is positive data points"
type = "float"
default = 0.0625
advanced = true

[tabs.detect_topaz2d.train_epochsize]
name = "Epoch size"
description = "Number of parameter updates per epoch"
type = "int"
default = 1000
advanced = true

[tabs.detect_topaz2d.model]
name = "Model architecture"
description = "Model type to fit"
type = "enum"
enum = { resnet8="resnet8" }
default = "resnet8"
advanced = true

[tabs.detect_topaz2d.units]
name = "Number of units in base layer"
description = "Number of units model parameter"
type = "int"
default = 32
advanced = true

[tabs.detect_topaz2d.dropout]
name = "Dropout rate"
description = "Dropout rate model parameter"
type = "float"
default = 0.0
advanced = true

[tabs.detect_topaz2d.bn]
name = "Batch normalization"
description = "Use batch norm in the model"
type = "bool"
default = true
advanced = true

[tabs.detect_topaz2d.pooling]
name = "Pooling method"
description = "Pooling method to use"
type = "enum"
enum = { none="none" }
default = "none"
advanced = true

[tabs.detect_topaz2d.unit_scale]
name = "Unit scaling"
description = "Scale the number of units up by this factor every pool/stride layer"
type = "int"
default = 2
advanced = true

[tabs.detect_topaz2d.network_unit_scale]
name = "Encode network unit scaling"
description = "Scaled number of units per layer in generative model, only used if autoencoder > 0"
type = "int"
default = 32
advanced = true

[tabs.detect_topaz2d.extract_thres]
name = "Extraction threshold"
description = "Log-likelihood score threshold at which to terminate region extraction (-6 is p>=0.0025)"
type = "float"
default = 0
advanced = true

[tabs.detect_topaz2d.extract_assign_rad]
name = "Max assignment radius"
description = "Maximum distance between prediction and labeled target allowed for considering them a match"
type = "int"
default = 10
advanced = true

[tabs.detect_topaz2d.extract_min_rad]
name = "Min extraction radius"
description = "Minimum radius for region extraction when tuning radius parameter"
type = "int"
default = 5
advanced = true

[tabs.detect_topaz2d.extract_max_rad]
name = "Max extraction radius"
description = "Maximum radius for region extraction when tuning radius parameters"
type = "int"
default = 100
advanced = true

[tabs.detect_topaz2d.extract_step_rad]
name = "Step radius"
description = "Grid size when searching for optimal radius parameter"
type = "int"
default = 5
advanced = true

[tabs.detect_topaz2d.debug]
name = "Debug mode"
description = "Save file with output coordinates to train/ folder"
type = "bool"
default = false
advanced = true

[tabs.detect_nn3d]
_name = "Training/Evaluation"
_description = "Settings for particle detection using neural networks"

[tabs.detect_nn3d.ref]
name = "Trained model (*.pth)"
description = "Path to trained model"
type = "path"
path = { type="files" }
input = { type="trainedModel3D" }
hidden = [ "tomo_import", "tomo_particles_train" ]

[tabs.detect_nn3d.milo_import]
name = "Coordinates for training"
description = "Select source for particle coorinates for training"
type = "enum"
enum = { none="particles from upstream block", phoenix="parquet file from MiLoPYP", classes="class labels from MiLoPYP" }
default = "none"
hidden = [ "tomo_import", "tomo_import_pure", "tomo_pre_process", "tomo_particles_eval", "stream_tomo" ]

[tabs.detect_nn3d.milo_parquet]
name = "Parquet file"
description = "Path to parquet file produced by Phoenix"
type = "path"
path = { type="files" }
input = { type="parquetfile" }
condition = { arg="milo_import", value="phoenix" }
hidden = [ "tomo_import", "tomo_import_pure", "tomo_particles_eval" ]

[tabs.detect_nn3d.milo_classes]
name = "Class IDs"
description = "Comma separated list of classes to be selected for training"
type = "str"
default = ""
condition = { arg="milo_import", value="classes" }
hidden = [ "tomo_import", "tomo_import_pure", "tomo_particles_eval" ]

[tabs.detect_nn3d.rad]
name = "Particle radius (A)"
description = "Radius assigned to output particles"
type = "float"
default = 0
hidden = [ "tomo_particles_train", "tomo_pre_process" ]

[tabs.detect_nn3d.down_ratio]
name = "Additional binning for training"
description = "Bin data by this factor before training"
type = "int"
default = 2
hidden = [ "tomo_particles_eval", "stream_tomo" ]

[tabs.detect_nn3d.compress]
name = "Additional binning in Z"
description = "Average consecutive slices in Z to reduce missing wedge effects (use same value for training/evaluation)"
type = "bool"
default = true

[tabs.detect_nn3d.num_epochs]
name = "Epochs"
description = "Number of passes through the entire dataset"
type = "int"
default = 10
hidden = ["spr_pre_process", "stream_spr", "stream_tomo", "tomo_particles_eval" ]

[tabs.detect_nn3d.bbox]
name = "Bounding box (binned voxels)"
description = "Box size for particles, used to generate Guassian kernel during training"
type = "int"
default = 16
hidden = ["spr_pre_process", "stream_spr", "stream_tomo", "tomo_particles_eval" ]

[tabs.detect_nn3d.thresh]
name = "Threshold for soft/hard positives"
description = "Higher values give fewer particles, lower values give more particles"
type = "float"
default = 0.85
hidden = ["stream_spr", "stream_tomo", "tomo_particles_train"]

[tabs.detect_nn3d.cr_weight]
name = "Contrastive regularization"
description = "Weight for contrastive regularization term"
type = "float"
default = 0.1
hidden = ["stream_spr", "stream_tomo", "tomo_particles_eval" ]

[tabs.detect_nn3d.max_objects]
name = "Max number of particles"
description = "Expected number of particles per tomogram"
type = "int"
default = 1200
hidden = ["stream_spr", "stream_tomo" ]

[tabs.detect_nn3d.lr]
name = "Learning rate"
description = "Smaller values for slower and stable training. Larger values for faster and potentially unstable training"
type = "float"
default = 0.0005
hidden = ["stream_spr", "stream_tomo", "tomo_particles_eval"]

[tabs.detect_nn3d.val_interval]
name = "Validation interval (epochs)"
description = "Run validation every this number of epochs"
type = "int"
default = 5
hidden = ["stream_spr", "stream_tomo", "tomo_particles_eval"]

[tabs.detect_nn3d.temp]
name = "inforNCE temperature"
description = "Tune the concentration of samples in feature space. Lower values create more uniform distributions"
type = "float"
default = 0.07
hidden = ["stream_spr", "stream_tomo", "tomo_particles_eval"]

[tabs.detect_nn3d.tau]
name = "Class prior probability"
description = "Proportion of positive to negative examples"
type = "float"
default = 0.01
hidden = ["stream_spr", "stream_tomo", "tomo_particles_eval"]

[tabs.detect_nn3d.fiber_mode]
name = "Fiber mode"
description = "Detect particles along fibers or filaments"
type = "bool"
default = false
hidden = ["stream_tomo", "tomo_pre_process", "tomo_particles_train"]

[tabs.detect_nn3d.distance_cutoff]
name = "Distance cutoff"
description = "Maximum distance between points used to form a graph"
type = "float"
default = 15.0
condition = { arg="fiber_mode", value="true" }
hidden = ["stream_tomo", "tomo_pre_process", "tomo_particles_train"]

[tabs.detect_nn3d.r2_cutoff]
name = "Fit curve residual"
description = "Max residual for fitted curve, omit if above the residual/bad fitting"
type = "float"
default = 30.0
condition = { arg="fiber_mode", value="true" }
hidden = ["stream_tomo", "tomo_pre_process", "tomo_particles_train"]

[tabs.detect_nn3d.curvature_cutoff]
name = "Max curvature"
description = "Max curvature for fitted curve, for microtubules the curvature should be small"
type = "float"
default = 0.003
condition = { arg="fiber_mode", value="true" }
hidden = ["stream_tomo", "tomo_pre_process", "tomo_particles_train"]

[tabs.detect_nn3d.curvature_sampling]
name = "Spacing (binned voxels)"
description = "Distance between sampled points along each fiber"
type = "int"
default = 2
condition = { arg="fiber_mode", value="true" }
hidden = ["stream_tomo", "tomo_pre_process", "tomo_particles_train"]

[tabs.detect_nn3d.with_score]
name = "Save scores"
description = "Add score column to output text files"
type = "bool"
default = false
advanced = true
hidden = ["stream_tomo", "tomo_particles_train"]

[tabs.detect_nn3d.debug]
name = "Debug mode"
description = "Save diagnostic results to train/ folder"
type = "bool"
default = false
hidden = ["tomo_particles_eval", "stream_tomo"]

#feature detect with milo
[tabs.detect_milo]
_name = "Pattern mining"
_description = "Settings for tomogram content exploration using MiLo"

[tabs.detect_milo.model]
name = "Trained model (*.pth)"
description = "Path to trained model"
type = "path"
path = { type="files" }
input = { type="trainedModel3D" }
hidden = [ "tomo_milo_train" ]

[tabs.detect_milo.mode]
name = "Input type"
description = "Use particle projections (2D) or subvolumes (3D)"
type = "enum"
enum = { 2d3d="2D + 3D", 3d="3D only" }
default = "2d3d"

[tabs.detect_milo.lightweight]
name = "Use lighweight model"
description = "Requires less GPU memory"
type = "bool"
default = false
hidden = true

[tabs.detect_milo.compress]
name = "Additional binning in Z"
description = "Average consecutive slices in Z (2x binning)"
type = "bool"
default = true

[tabs.detect_milo.num_epochs]
name = "Epochs"
description = "Number of passes through the entire dataset"
type = "int"
default = 60
hidden = [ "tomo_milo_eval" ]

[tabs.detect_milo.num_clusters]
name = "Clusters"
description = "Number of clusters used during training"
type = "int"
default = 60

[tabs.detect_milo.bbox]
name = "Bounding box (binned voxels)"
description = "Bounding box for cropped patches, must be bigger than particle size"
type = "int"
default = 36
hidden = ["stream_spr", "stream_tomo"]

[tabs.detect_milo.translation_ratio]
name = "Image translation range"
description = "Translation range used for data augmentation (fraction of bounding box)"
type = "float"
default = 0.5
hidden = ["stream_spr", "stream_tomo"]

[tabs.detect_milo.lr]
name = "Learning rate"
description = "Smaller values for slower and stable training. Larger values for faster and potentially unstable training"
type = "float"
default = 0.001
hidden = [ "tomo_milo_eval" ]

[tabs.detect_milo.batch_size]
name = "Batch size"
description = "Number of training samples to use before the model parameters are updated"
type = "int"
default = 256
hidden = [ "tomo_milo_eval" ]

[tabs.detect_milo.val_interval]
name = "Interval to perform validation"
description = "Validate results within this interval"
type = "int"
default = 20
hidden = [ "tomo_milo_eval" ]

[tabs.detect_milo.gauss]
name = "Gaussian filter"
description = "Size of Gaussian filter used to denoise tilt-series and tomograms"
type = "float"
default = 0.8

[tabs.detect_milo.dog]
name = "DoG sizes"
description = "Kernel sizes for Difference of Gaussians (DoG) pyramid, comma delimited"
type = "str"
default = "3,5"
hidden = ["stream_spr", "stream_tomo"]

[tabs.detect_milo.last_k]
name = "Last kernel size"
description = "Kernel size for the last convolution layer prior to projection operation"
type = "int"
default = 3
hidden = [ "tomo_milo_eval" ]

[tabs.detect_milo.blend_ratio]
name = "Blend ratio"
description = "Mixing ratio to use for 3D visualization (0=less color, 1=more color)"
type = "float"
default = 0.2
hidden = [ "tomo_milo_train" ]

[tabs.detect_milo.debug]
name = "Debug mode"
description = "Save intermediate results to train/ folder"
type = "bool"
default = false
hidden = [ "tomo_milo_eval" ]

# Particle parameters

[tabs.particle]
_name = "Sample"
_description = "Specify particle parameters"
_hidden = [ "spr_map_clean", "tomo_map_clean" ]

[tabs.particle.mw]
name = "Molecular weight (kDa)"
description = "Molecular weight of particle of interest"
type = "float"
# not actually required all the time, need to find a way to express that somehow?
required = true

[tabs.particle.rad]
name = "Particle radius (A)"
description = "Approximate radius of particle of interest used for display purposes"
type = "float"
# not actually required all the time, need to find a way to express that somehow?
required = true

[tabs.particle.sym]
# TODO: what kind of input validation to do here? the rules are non-trivial
#  see: https://blake.bcm.edu/emanwiki/EMAN2/Symmetry
name = "Particle symmetry"
description = "Symmetry to apply during reconstruction (Cn,Dn,T,O,I,I1,I2,N or H)"
type = "str"
default = "C1"

# Particle Extraction

[tabs.extract]
_name = "Particle extraction"
_description = "Settings for particle detection"
_hidden = [ "spr_map_clean", "tomo_map_clean", "spr_flexible_refine", "tomo_flexible_refine" ]

[tabs.extract.box]
name = "Box size (pixels)"
description = "Box size used for projection extraction"
type = "int"
default = 0
required = true

[tabs.extract.bnd]
name = "Max box size"
description = "Maximum size of extracted projections"
type = "int"
default = { ref="box" }
hidden = true

[tabs.extract.bin]
name = "Image binning"
description = "Binning used for projection extraction"
type = "int"
default = 1

[tabs.extract.gold]
name = "Skip gold fiducials"
description = "Skip particle projections that overlap with gold particles"
type = "bool"
default = true
hidden = ["spr_coarse_refine", "spr_fine_refine", "spr_flexible_refine", "stream_spa",  "tomo_flexible_refine", "tomo_flexible_refine_after", "spr_map_clean", "tomo_map_clean"]

[tabs.extract.ctf_handedness]
name = "Invert CTF handedness"
description = "Use reverse CTF handedness when extracting particle projections"
type = "bool"
default = false
hidden = ["spr_coarse_refine", "spr_fine_refine", "spr_flexible_refine", "stream_spa", "tomo_coarse_refine", "tomo_new_coarse_refine", "tomo_new_coarse_classification", "tomo_flexible_refine", "tomo_flexible_refine_after", "spr_map_clean", "tomo_map_clean" ]

[tabs.extract.ctf_handedness_force]
name = "Force re-calculation of CTF handedness"
description = "Force CTF handedness re-calculation"
type = "bool"
default = false
hidden = true

[tabs.extract.method]
name = "Interpolation"
description = "Interpolation algorithm used for binning"
type = "enum"
enum = { imod="imod", fft="fft", resample="resample" }
default = "imod"
hidden = true

[tabs.extract.fmt]
name = "Format"
description = "Format to extract particles"
type = "enum"
enum = { frealign="Frealign", frealign_local="Frealign local", relion="Relion", eman="EMAN" }
default = "frealign"
#XD: there's more than just these methods
#e.g., for unblur we have: -movie_ali frealign_spline -particle_fmt frealign_local 
hidden = true

[tabs.extract.use_clean]
name = "Use only clean particles"
description = "Only extract clean particles for processing"
type = "bool"
default = false
hidden = [ "spr_coarse_refine", "spr_flexible_refine", "tomo_initial_refine", "tomo_initial_reconstruct", "tomo_reference_refine", "tomo_coarse_refine", "tomo_new_coarse_refine", "tomo_new_coarse_classification", "tomo_flexible_refine", "tomo_flexible_refine_after", "stream_spa", "stream_tomo", "spr_map_clean", "tomo_map_clean"]

[tabs.extract.cls]
name = "Clean only"
description = "Only extract clean particles"
type = "int"
default = 0
hidden = true

[tabs.extract.wgh]
name = "Moving Average"
description = "Moving average when extracting frames (0=disabled, typical=0.4)"
type = "float"
default = 0.0
hidden = true

[tabs.extract.stacks]
name = "Save particle stacks"
description = "Store particle stacks in project directory"
type = "bool"
default = false

[tabs.extract.using_frames]
name = "Using frames"
description = "Perform csp using frame refinement method (legacy)"
type = "bool"
default = false
hidden = true

# Virion and Spike picking (TOMO)

[tabs.tomo_ali]
_name = "Tilt-series alignment"
_description = "Parameters for tilt-series alignment"

[tabs.tomo_ali.auto_bin]
name = "Auto binning"
description = "Automatically determine binning factor to use for alignment"
type = "bool"
default = true

[tabs.tomo_ali.binning]
name = "Binning for tilt-series alignment"
description = "Bin tilt-series by this factor before alignment"
type = "int"
default = 1
condition = { arg="auto_bin", value="false" }

[tabs.tomo_ali.square]
name = "Reshape tilt-images into squares"
description = "Tilt images will be reshaped into squares before processing"
type = "bool"
default = true

[tabs.tomo_ali.format]
name = "Resize squares to closest multiple of 512"
description = "Tilt images will be reshaped into squares using the closest multiple of 512 as size"
type = "bool"
default = true
condition = { arg="square", value="true" }

[tabs.tomo_ali.method]
name = "Alignment method"
description = "Method to use for tilt-series alignment"
type = "enum"
enum = { imod_gold="imod (fiducials)", imod_patch="imod (patch tracking)", aretomo="aretomo2 (GPU required)", aretomo3="aretomo3 (GPU required)", import="import (from path)" }
default = "imod_gold"

[tabs.tomo_ali.import]
name = "Import path"
description = "Location of *.xf and *.tlt files to import alignments from"
type = "path"
condition = { arg="method", value="import" }
path = { type="folders" }

[tabs.tomo_ali.tiltoff]
name = "Add tilt offset"
description = "Add tilt offset to the tilt angles before alignment"
type = "float"
default = 0.0
condition = { arg="method", value=["imod_gold","imod_patch"] }

[tabs.tomo_ali.robust_fitting]
name = "Robust fitting"
description = "Do robust fitting by giving less or no weight to outliers"
type = "bool"
default = true
condition = { arg="method", value=["imod_gold","imod_patch"] }

[tabs.tomo_ali.robust_fitting_factor]
name = "Tuning factor"
description = "Factor that controls how many points are downweighted (smaller values downweight more points)"
type = "float"
default = 1.0
condition = { arg="robust_fitting", value=true }

[tabs.tomo_ali.fiducial]
name = "Fiducial diameter (A)"
description = "Diameter of gold fiducials"
type = "float"
condition = { arg="method", value="imod_gold" }
default = 100.0

[tabs.tomo_ali.fiducial_number]
name = "Number of fiducials"
description = "Average number of gold fiducials per tilt-series (-1=auto)"
type = "int"
condition = { arg="method", value="imod_gold" }
default = -1

[tabs.tomo_ali.radius1]
name = "Low-frequency cutoff"
description = "Highpass filter frequency cutoff (FilterRadius1)"
type = "float"
condition = { arg="method", value="imod_gold" }
default = 0.05

[tabs.tomo_ali.sigma1]
name = "Low-frequency rolloff"
description = "Highpass filter frequency rolloff (FilterSigma1)"
type = "float"
condition = { arg="method", value="imod_gold" }
default = 0.03

[tabs.tomo_ali.radius2]
name = "High-frequency cutoff"
description = "Lowpass filter frequency cutoff (FilterRadius2)"
type = "float"
condition = { arg="method", value="imod_gold" }
default = 0.1

[tabs.tomo_ali.sigma2]
name = "High-frequency rolloff"
description = "Lowpass filter frequency rolloff (FilterSigma2)"
type = "float"
condition = { arg="method", value="imod_gold" }
default = 0.03

[tabs.tomo_ali.iterate]
name = "Number of iterations"
description = "Repeat alignment iteratively"
type = "int"
condition = { arg="method", value="imod_gold" }
default = 5

[tabs.tomo_ali.exclude]
name = "Exclude central peak"
description = "Useful when fixed pattern noise is present"
type = "bool"
condition = { arg="method", value="imod_gold" }
default = false

[tabs.tomo_ali.patches_x]
name = "Number of patches in X"
description = "Number of patches in X to use for tilt-series alignment"
type = "int"
condition = { arg="method", value=["imod_patch","aretomo","aretomo3"] }
default = 1

[tabs.tomo_ali.patches_size_x]
name = "Patch size in X"
description = "Size of patches in X to track by correlation (0=auto)"
type = "int"
condition = { arg="method", value="imod_patch" }
default = 0

[tabs.tomo_ali.patches_y]
name = "Number of patches in Y"
description = "Number of patches in Y to use for tilt-series alignment"
type = "int"
condition = { arg="method", value=["imod_patch","aretomo","aretomo3"] }
default = 1

[tabs.tomo_ali.patches_size_y]
name = "Patch size in Y"
description = "Size of patches in Y to track by correlation (0=auto)"
type = "int"
condition = { arg="method", value="imod_patch" }
default = 0

[tabs.tomo_ali.pixels_trim_x]
name = "Trim pixels in X"
description = "Pixels to trim off from X axis"
type = "int"
condition = { arg="method", value="imod_patch" }
default = 186

[tabs.tomo_ali.pixels_trim_y]
name = "Trim pixels in Y"
description = "Pixels to trim off from Y axis"
type = "int"
condition = { arg="method", value="imod_patch" }
default = 192

[tabs.tomo_ali.force]
name = "Force re-calculation"
description = "Force re-calculation of tilt-series alignment"
type = "bool"
default = true
hidden = true

[tabs.tomo_ali.aretomo_estimate_zheight]
name = "Estimate specimen thickness"
description = "Z height of specimen will be estimated automatically"
type = "bool"
default = false
condition = { arg="method", value="aretomo3" }

[tabs.tomo_ali.aretomo_zheight]
name = "Z height of specimen in pixels"
description = "Z height of specimen (not tomogram)"
type = "int"
default = 600
condition = { arg="aretomo_estimate_zheight", value=false }

[tabs.tomo_ali.aretomo_measure_tiltoff]
name = "Measure tilt offset"
description = "Measure the tilt offset automatically. Note that the tilt angles might change"
type = "bool"
default = true
condition = { arg="method", value=["aretomo","aretomo3"] }

[tabs.tomo_ali.aretomo_tiltoff]
name = "Add tilt offset"
description = "Add tilt offset to the tilt angle before alignment, instead of measuring the offset automatically"
type = "float"
default = 0.0
condition = { arg="aretomo_measure_tiltoff", value="false" }

[tabs.tomo_ali.aretomo_bft]
name = "B-factors for low-pass filter"
description = "Used in the cross correlation. The first value is used for global measurement. The second for local measurement"
type = "str"
default = "0,0"
condition = { arg="method", value=["aretomo","aretomo3"] }

[tabs.tomo_ali.aretomo_dark_tol]
name = "Threshold to remove dark images"
description = "Threshold to remove dark images (lower values remove fewer images)"
type = "float"
default = 0.7
condition = { arg="method", value=["aretomo","aretomo3"] }

[tabs.tomo_rec]
_name = "Tomogram reconstruction"
_description = "Parameters for tomographic reconstruction"

[tabs.tomo_rec.force]
name = "Force re-calculation"
description = "Force re-calculation of tomograms"
type = "bool"
default = true
hidden = true

[tabs.tomo_rec.thickness]
name = "Tomogram thickness (unbinned voxels)"
description = "Height of tomograms should be set to match ice thickness"
type = "int"
default = 2048
hidden = [ "tomo_import_star" ]

[tabs.tomo_rec.binning]
name = "Binning factor"
description = "Produce binned tomograms (applies to dimensions x, y and z)"
type = "int"
default = 8
hidden = [ "tomo_import_star" ]

[tabs.tomo_rec.2d_filtering_method]
name = "2D filtering"
description = "Filter to apply to tilt-series prior to reconstruction"
type = "enum"
enum = { lowpass="lowpass", doseweighting="dose weighting", none="none" }
default = "lowpass"
hidden = [ "tomo_import_star" ]

[tabs.tomo_rec.mtfilter_cutoff]
name = "Frequency cutoff"
description = "Cutoff frequency for lowpass filter"
type = "float"
default = 0.15
condition = { arg="2d_filtering_method", value="lowpass" }
hidden = [ "tomo_import_star" ]

[tabs.tomo_rec.mtfilter_falloff]
name = "Frequency falloff"
description = "Falloff frequency (sigma) for lowpass filter"
type = "float"
default = 0.05
condition = { arg="2d_filtering_method", value="lowpass" }
hidden = [ "tomo_import_star" ]

[tabs.tomo_rec.erase_fiducials]
name = "Erase fiducials"
description = "Erase fiducials from aligned tilt-series prior to reconstruction"
type = "bool"
default = false
hidden = [ "tomo_import_star" ]

[tabs.tomo_rec.erase_detect_max]
name = "Maximum number of beads"
description = "Only this number of peaks will be retained and used for finding the histogram dip"
type = "int"
default = 500
condition = { arg="erase_fiducials", value="true" }
advanced = true
hidden = [ "tomo_import_star" ]

[tabs.tomo_rec.erase_detect_threshold]
name = "Threshold for averaging"
description = "Relative peak strength or number of beads for averaging (https://bio3d.colorado.edu/imod/doc/man/findbeads3d.html)"
type = "float"
default = 0.1
condition = { arg="erase_fiducials", value="true" }
advanced = true
hidden = [ "tomo_import_star" ]

[tabs.tomo_rec.erase_detect_store]
name = "Detection threshold"
description = "Threshold relative peak strength for storing peaks in model (https://bio3d.colorado.edu/imod/doc/man/findbeads3d.html)"
type = "float"
default = 0.5
condition = { arg="erase_fiducials", value="true" }
advanced = true
hidden = [ "tomo_import_star" ]

[tabs.tomo_rec.erase_factor]
name = "Fiducial radius factor"
description = "Multiple of fiducial radius used to erase gold"
type = "float"
default = 1.0
condition = { arg="erase_fiducials", value="true" }
hidden = [ "tomo_import_star" ]

[tabs.tomo_rec.erase_order]
name = "Pixel filling"
description = "Strategy to substitute gold pixels with"
type = "enum"
enum = { noise="random noise", mean="mean of surrounding points", first="order 1 (plane)", second="order 2 (quadratic)", third="order 3 (cubic)" }
default = "noise"
condition = { arg="erase_fiducials", value="true" }
hidden = [ "tomo_import_star" ]

[tabs.tomo_rec.erase_iterations]
name = "Grow iterations"
description = "Iterations to grow circular areas"
type = "int"
default = 5
condition = { arg="erase_fiducials", value="true" }
hidden = [ "tomo_import_star" ]

[tabs.tomo_rec.method]
name = "Reconstruction method"
description = "Method used for tomogram reconstruction"
type = "enum"
enum = { imod="imod", aretomo="aretomo2 (GPU required)", aretomo3="aretomo3 (GPU required)" }
default = "imod"
hidden = [ "tomo_import_star" ]

[tabs.tomo_rec.aretomo_sart]
name = "Use SART reconstruction"
description = "Use Simultaneous Algebraic Reconstruction Technique (SART)"
type = "bool"
default = false
condition = { arg="method", value=["aretomo","aretomo3"] }
hidden = [ "tomo_import_star" ]

[tabs.tomo_rec.aretomo_sart_iter]
name = "Number of iterations"
description = "Number of iterations"
type = "int"
default = 20
condition = { arg="aretomo_sart", value="true" }
hidden = [ "tomo_import_star" ]

[tabs.tomo_rec.aretomo_sart_num_projs]
name = "Number of projections per subset"
description = "Number of projections per subset"
type = "int"
default = 5
condition = { arg="aretomo_sart", value="true" }
hidden = [ "tomo_import_star" ]

[tabs.tomo_rec.filter_form]
name = "Radial filtering"
description = "Form of radial filtering used during reconstruction"
type = "enum"
enum = { rampfunction="ramp function", fakesirt="fakeSIRT (mimic SIRT reconstruction)" }
default = "rampfunction"
hidden = [ "tomo_import_star" ]
condition = { arg="method", value="imod" }

[tabs.tomo_rec.fake_sirt_iterations]
name = "Number of iterations"
description = "Filter equivalent to this number of iterations"
type = "int"
default = 10
condition = { arg="filter_form", value="fakesirt" }
hidden = [ "tomo_import_star" ]

[tabs.tomo_rec.filtering_method]
name = "High-frequency filtering"
description = "Filtering method to use during reconstruction"
type = "enum"
enum = { gaussian="gaussian", hamming="hamming (as in tomo3d)" }
default = "gaussian"
hidden = [ "tomo_import_star" ]
condition = { arg="method", value="imod" }

[tabs.tomo_rec.lpradial_cutoff]
name = "Frequency cutoff"
description = "Lowpass cutoff for radial weighting function (use 0.35 for less filtering)"
type = "float"
default = 0.25
condition = { arg="filtering_method", value="gaussian" }
hidden = [ "tomo_import_star" ]

[tabs.tomo_rec.lpradial_falloff]
name = "Frequency falloff"
description = "Lowpass falloff (sigma) for radial weighting function (use 0.05 for less filtering)"
type = "float"
default = 0.15
condition = { arg="filtering_method", value="gaussian" }
hidden = [ "tomo_import_star" ]

[tabs.tomo_rec.hamming]
name = "Starting frequency"
description = "Frequency at which to start multiplying by Hamming window"
type = "float"
default = 0.05
condition = { arg="filtering_method", value="hamming" }
hidden = [ "tomo_import_star" ]

[tabs.tomo_rec.depth]
name = "Save tomograms in 16-bits"
description = "Files saved in this format will require 50 percent less storage"
type = "bool"
default = true
hidden = [ "tomo_import_star" ]

[tabs.tomo_denoise]
_name = "Tomogram denoising"
_description = "Parameters for tomograms denoising"

[tabs.tomo_denoise.method]
name = "Method"
description = "Denoise tomograms with selected method"
type = "enum"
enum = {isonet="isonet", cryocare="cryocare", topaz="topaz"}
default = "isonet"
hidden = [ "tomo_denoise_train" ]

[tabs.tomo_denoise.method_train]
name = "Method"
description = "Denoise tomograms with selected method"
type = "enum"
enum = {isonet="isonet", cryocare="cryocare"}
default = "isonet"
hidden = [ "tomo_denoise_eval" ]

[tabs.tomo_denoise.topaz_model]
name = "Pre-train model"
description = "Pre-trained model to use for denoising"
type = "enum"
enum = { unet-3d-10a="unet-3d-10a", unet-3d="unet-3d", unet-3d-20a="unet-3d-20a" }
default = "unet-3d-10a"
condition = { arg="method", value="topaz" }
hidden = [ "tomo_denoise_train" ]

[tabs.tomo_denoise.topaz_gaussian]
name = "Gaussian filter"
description = "Standard deviation of Gaussian filter for post-processing (0 means no postprocessing)"
type = "float"
default = 0.0
condition = { arg="method", value="topaz" }
hidden = [ "tomo_denoise_train" ]

[tabs.tomo_denoise.topaz_patch_size]
name = "Patch size"
description = "Denoises volumes in patches of this size"
type = "int"
default = 96
condition = { arg="method", value="topaz" }
hidden = [ "tomo_denoise_train" ]

[tabs.tomo_denoise.topaz_patch_padding]
name = "Patch padding size"
description = "Padding around each patch to remove edge artifacts"
type = "int"
default = 48
condition = { arg="method", value="topaz" }
hidden = [ "tomo_denoise_train" ]

[tabs.tomo_denoise.topaz_use_gpu]
name = "Use GPU"
description = "Run Topaz denoise in a GPU"
type = "bool"
default = false
condition = { arg="method", value="topaz" }
hidden = [ "tomo_denoise_train" ]

[tabs.tomo_denoise.masksize]
name = "Mask shape"
description = "Mask shape in x,y,z covering the center of tomogram"
type = "str"
default = "0,0,0"
condition = { arg="method_train", value="cryocare" }
hidden = [ "tomo_denoise_eval" ]

[tabs.tomo_denoise.cryocare_patch]
name = "Patch shape"
description = "Per dimension size of the sub-volumes used for training (cubic shape >= 64x64x64)"
type = "int"
default = 72
condition = { arg="method_train", value="cryocare" }
hidden = [ "tomo_denoise_eval" ]

[tabs.tomo_denoise.cryocare_slices]
name = "Number of slices"
description = "Number of sub-volumes extracted per tomogram"
type = "int"
default = 500
condition = { arg="method_train", value="cryocare" }
hidden = [ "tomo_denoise_eval" ]

[tabs.tomo_denoise.cryocare_split]
name = "Split ratio"
description = "Train/validation ratio"
type = "float"
default = 0.9
condition = { arg="method_train", value="cryocare" }
hidden = [ "tomo_denoise_eval" ]

[tabs.tomo_denoise.cryocare_samples]
name = "Sub-tomograms for statistics"
description = "Number of sub-volumes per tomogram used to compute mean and standard deviation for normalization (<number of slices)"
type = "int"
default = 400
condition = { arg="method_train", value="cryocare" }
hidden = [ "tomo_denoise_eval" ]

[tabs.tomo_denoise.cryocare_epochs]
name = "Number of epochs"
description = "Number of epochs used to train the network"
type = "int"
default = 60
condition = { arg="method_train", value="cryocare" }
hidden = [ "tomo_denoise_eval" ]

[tabs.tomo_denoise.cryocare_steps]
name = "Gradient steps"
description = "Number of gradient steps performed per epoch"
type = "int"
default = 200
condition = { arg="method_train", value="cryocare" }
hidden = [ "tomo_denoise_eval" ]

[tabs.tomo_denoise.cryocare_batchsize]
name = "Batch size"
description = "Number of training samples to use before the model parameters are updated"
type = "int"
default = 16
condition = { arg="method_train", value="cryocare" }
hidden = [ "tomo_denoise_eval" ]

[tabs.tomo_denoise.cryocare_kern]
name = "Kernel size"
description = "Convolution kernel size of the U-Net. Has to be an odd number"
type = "int"
default = 3
condition = { arg="method_train", value="cryocare" }
hidden = [ "tomo_denoise_eval" ]

[tabs.tomo_denoise.cryocare_depth]
name = "Unet depth (train)"
description = "Depth of the U-Net"
type = "int"
default = 3
condition = { arg="method_train", value="cryocare" }
hidden = [ "tomo_denoise_eval" ]

[tabs.tomo_denoise.cryocare_nfirst]
name = "Initial feature channels"
description = "Number of initial feature channels"
type = "int"
default = 16
condition = { arg="method_train", value="cryocare" }
hidden = [ "tomo_denoise_eval" ]

[tabs.tomo_denoise.cryocare_lr]
name = "Learning rate"
description = "Learning rate of the model training"
type = "float"
default = 0.0004
condition = { arg="method_train", value="cryocare" }
hidden = [ "tomo_denoise_eval" ]

[tabs.tomo_denoise.cryocare_model]
name = "Trained model"
description = "Trained model (.tar.gz)"
type = "path"
path = { type="files" }
input = { type="cryocareTrainedModel" }
condition = { arg="method", value="cryocare" }
hidden = [ "tomo_denoise_train" ]

[tabs.tomo_denoise.cryocare_tiles]
name = "Initial tiles per dimension"
description = "Increase if the tiles do not fit on the GPU"
type = "int"
default = 1
condition = { arg="method", value="cryocare" }
hidden = [ "tomo_denoise_train" ]

[tabs.tomo_denoise.cryocare_overwrite]
name = "Overwrite tomograms"
description = "Allow previous tomograms to be overwritten"
type = "bool"
default = true
condition = { arg="method", value="cryocare" }
hidden = true

[tabs.tomo_denoise.isonet_CTFdeconvol]
name = "CTF deconvolution"
description = "Do CTF deconvolution for tomograms"
type = "bool"
default = true
condition = { arg="method_train", value="isonet" }
hidden = [ "tomo_denoise_eval" ]

[tabs.tomo_denoise.isonet_snrfalloff]
name = "SNR falloff"
description = "SNR fall rate with the frequency. High values means losing more high frequency"
type = "float"
default = 1.0
condition = { arg="isonet_CTFdeconvol", value="true" }
hidden = [ "tomo_denoise_eval" ]

[tabs.tomo_denoise.isonet_hp]
name = "Highpass filter"
description = "Highpass filter for at very low frequency"
type = "float"
default = 0.02
condition = { arg="isonet_CTFdeconvol", value="true" }
hidden = [ "tomo_denoise_eval" ]

[tabs.tomo_denoise.isonet_mask]
name = "Use masking"
description = "Mask out background areas"
type = "bool"
default = true
condition = { arg="method_train", value="isonet" }
hidden = [ "tomo_denoise_eval" ]

[tabs.tomo_denoise.isonet_densityPercent]
name = "Density percentage"
description = "The approximate percentage of pixels to keep based on their local pixel density"
type = "int"
default = 50
condition = { arg="isonet_mask", value="true" }
hidden = [ "tomo_denoise_eval" ]

[tabs.tomo_denoise.isonet_stdPercent]
name = "Standard deviation percentage"
description = "The approximate percentage of pixels to keep based on their local standard deviation"
type = "int"
default = 50
condition = { arg="isonet_mask", value="true" }
hidden = [ "tomo_denoise_eval" ]

[tabs.tomo_denoise.isonet_patchsize]
name = "Patch size for statistics"
description = "Size of box from which the max-filter and std-filter are calculated"
type = "int"
default = 4
condition = { arg="isonet_mask", value="true" }
hidden = [ "tomo_denoise_eval" ]

[tabs.tomo_denoise.isonet_zcrop]
name = "Z-crop fraction"
description = "Exclude top and bottom regions of tomogram along Z (0.2 will mask out the top/bottom 20 percent)"
type = "float"
default = 0.2
condition = { arg="isonet_mask", value="true" }
hidden = [ "tomo_denoise_eval" ]

[tabs.tomo_denoise.isonet_model]
name = "Trained model"
description = "Trained model (.h5)"
type = "path"
path = { type="files" }
input = { type="isonetTrainedModel" }
condition = { arg="method", value=["isonet"] }
hidden = [ "tomo_denoise_train" ]

[tabs.tomo_denoise.isonet_pretrained_model]
name = "Pre-trained model"
description = "A trained model to start training with (*.h5)"
type = "path"
path = { type="files" }
input = { type="isonetTrainedModel" }
condition = { arg="method_train", value=["isonet"] }
hidden = [ "tomo_denoise_eval" ]

[tabs.tomo_denoise.isonet_json]
name = "Continue from (.json)"
description = "A Json file (from previous training) to continue from"
type = "path"
default = "None"
path = { type="files" }
condition = { arg="method_train", value="isonet" }
hidden = true

[tabs.tomo_denoise.isonet_cubesize]
name = "Cube size for training"
description = "Should be divisible by 8. Actual sizes are this value plus 16"
type = "int"
default = 64
condition = { arg="method_train", value="isonet" }
hidden = [ "tomo_denoise_eval" ]

[tabs.tomo_denoise.isonet_iters]
name = "Training iterations"
description = "Number of training iterations"
type = "int"
default = 30
condition = { arg="method_train", value="isonet" }
hidden = [ "tomo_denoise_eval" ]

[tabs.tomo_denoise.isonet_epochs]
name = "Training epochs"
description = "Number of epochs for each iteraction"
type = "int"
default = 10
condition = { arg="method_train", value="isonet" }
hidden = [ "tomo_denoise_eval" ]

[tabs.tomo_denoise.isonet_batchsize]
name = "Mini-batch size"
description = "0 corresponds to max(2 * number_of_gpu,4). Batch size must be divisible by the number of gpus"
type = "int"
default = 4
condition = { arg="method_train", value="isonet" }
hidden = [ "tomo_denoise_eval" ]

[tabs.tomo_denoise.isonet_steps]
name = "Steps per epoch"
description = "Steps per epoch. 0 corresponds to: min(num_of_subtomograms * 6 / batch_size , 200)"
type = "int"
default = 0
condition = { arg="method_train", value="isonet" }
hidden = [ "tomo_denoise_eval" ]

[tabs.tomo_denoise.isonet_nl]
name = "Noise level"
description = "Level of noise STD(added noise)/STD(data) after the iteration defined in noise_start_iter"
type = "str"
default = "0.05,0.1,0.15,0.2"
condition = { arg="method_train", value="isonet" }
hidden = [ "tomo_denoise_eval" ]

[tabs.tomo_denoise.isonet_ns]
name = "Noise start iteration"
description = "Iteration that start to add noise of corresponding noise level"
type = "str"
default = "11,16,21,26"
condition = { arg="method_train", value="isonet" }
hidden = [ "tomo_denoise_eval" ]

[tabs.tomo_denoise.isonet_nm]
name = "Noise mode"
description = "Filter names when generating noise volumes"
type = "enum"
enum = {ramp="ramp", hamming="hamming", noFilter="noFilter", none="none"}
default = "none"
condition = { arg="method_train", value="isonet" }
hidden = [ "tomo_denoise_eval" ]

[tabs.tomo_denoise.isonet_dropout]
name = "Dropout rate"
description = "Dropout rate to reduce overfitting"
type = "float"
default = 0.3
condition = { arg="method_train", value="isonet" }
hidden = [ "tomo_denoise_eval" ]

[tabs.tomo_denoise.isonet_lr]
name = "Learning rate"
description = "learning rate for network training"
type = "float"
default = 0.0004
condition = { arg="method_train", value="isonet" }
hidden = [ "tomo_denoise_eval" ]

[tabs.tomo_denoise.isonet_layers]
name = "Convolution layers"
description = "Number of convolution layers for each depth"
type = "int"
default = 3
condition = { arg="method_train", value="isonet" }
hidden = [ "tomo_denoise_eval" ]

[tabs.tomo_denoise.isonet_kernel]
name = "Convolution kernel size"
description = "Kernel size for convolution"
type = "str"
default = "3,3,3"
condition = { arg="method_train", value="isonet" }
hidden = [ "tomo_denoise_eval" ]

[tabs.tomo_denoise.isonet_depth]
name = "U-Net depth"
description = "Depth of U-Net"
type = "int"
default = 3
condition = { arg="method_train", value="isonet" }
hidden = [ "tomo_denoise_eval" ]

[tabs.tomo_denoise.isonet_base]
name = "Filter base"
description = "The base number of channels after convolution"
type = "int"
default = 64
condition = { arg="method_train", value="isonet" }
hidden = [ "tomo_denoise_eval" ]

[tabs.tomo_denoise.isonet_normalization]
name = "Use batch normalization"
description = "Use batch normalization layer"
type = "bool"
default = true
condition = { arg="method_train", value="isonet" }
hidden = [ "tomo_denoise_eval" ]

[tabs.tomo_denoise.isonet_pool]
name = "Use pooling"
description = "Use pooling layer instead of stride convolution layer"
type = "str"
default = ""
condition = { arg="method_train", value="isonet" }
hidden = [ "tomo_denoise_eval" ]

[tabs.tomo_denoise.isonet_threshold]
name = "Use percent thresholding"
description = "Normalize the 5 percent and 95 percent pixel intensity to 0 and 1 respectively. Otherwise, normalize input to 0 mean and unit standard deviation"
type = "bool"
default = true
condition = { arg="method_train", value="isonet" }
hidden = [ "tomo_denoise_eval" ]

[tabs.tomo_denoise.isonet_debug]
name = "Debug"
description = "Save intermediate files to results directory"
type = "bool"
default = false
condition = { arg="method_train", value="isonet" }
hidden = [ "tomo_denoise_eval" ]

[tabs.tomo_mem]
_name = "Segmentation"
_description = "Parameters for tomogram membrane segmentation using MemBrain-seg"

[tabs.tomo_mem.method]
name = "Method"
description = "Segmentation method"
type = "enum"
enum = { membrain="membrain" }
default = "membrain"

[tabs.tomo_mem.preprocessing]
name = "Pre-process tomograms"
description = "Execute reprocessing module"
type = "bool"
default = false
condition = { arg="method", value="membrain" }

[tabs.tomo_mem.pixel]
name = "Pixel size rescaling"
description = "Rescale the tomogram pixel size to this value"
type = "float"
default = 0.0
condition = { arg="preprocessing", value="true" }

[tabs.tomo_mem.match_ps]
name = "Match spectrum"
description = "Match Fourier spectrum amplitude of input tomogram to target"
type = "bool"
default = false
condition = { arg="preprocessing", value="true" }

[tabs.tomo_mem.target]
name = "Target tomogram (*.mrc)"
description = "Target tomogram for matching"
type = "path"
path = { type="files" }
input = { type="initialModel" }
condition = { arg="match_ps", value="true" }

[tabs.tomo_mem.deconvolve]
name = "Deconvolution filter"
description = "Perform deconvolution to enhance tomogram contrast"
type = "bool"
default = false
condition = { arg="preprocessing", value="true" }

[tabs.tomo_mem.model]
name = "Pre-trained model (*.ckpt)"
description = "Available from https://github.com/teamtomo/membrain-seg"
type = "path"
default = "None"
path = { type="files" }
condition = { arg="method", value="membrain" }

[tabs.tomo_mem.rescale_patches]
name = "Rescale patches"
description = "Rescale patches on-the-fly during inference"
type = "bool"
default = false
condition = { arg="method", value="membrain" }

[tabs.tomo_mem.patch_pxl]
name = "Patch pixel size"
description = "Pixel size to which patches will be rescaled internally"
type = "float"
default = 10.0
condition = { arg="rescale_patches", value="true" }

[tabs.tomo_mem.store_probabilities]
name = "Store probabilities"
description = "Output probability maps in addition to segmentation"
type = "bool"
default = false
condition = { arg="method", value="membrain" }

[tabs.tomo_mem.connected_map]
name = "Filter connected components"
description = "Filter segmentation by components"
type = "enum"
enum = { none="none", size="by size", number="by number" }
default = "none"
condition = { arg="method", value="membrain" }

[tabs.tomo_mem.connected_thres]
name = "Size threshold (binned voxels)"
description = "Components smaller than this value will be removed"
type = "int"
default = 0
condition = { arg="connected_map", value="size" }

[tabs.tomo_mem.connected_min_number]
name = "Largest components to ignore"
description = "Number of largest components to ignore"
type = "int"
default = 0
condition = { arg="connected_map", value="number" }

[tabs.tomo_mem.connected_max_number]
name = "Components to keep"
description = "Number of largest components to keep (after the ignored ones)"
type = "int"
default = 1
condition = { arg="connected_map", value="number" }

[tabs.tomo_mem.augmentation]
name = "Test time augmentation"
description = "Use 8-fold augmentation during testing"
type = "bool"
default = false
condition = { arg="method", value="membrain" }

[tabs.tomo_mem.seg_thres]
name = "Segmentation threshold"
description = "Threshold used in scoremap to increase/decrease segmented membranes"
type = "float"
default = 0.0
condition = { arg="method", value="membrain" }

[tabs.tomo_mem.sliding_wd]
name = "Sliding window size"
description = "Sliding window size used during inference"
type = "int"
default = 160
condition = { arg="method", value="membrain" }

[tabs.tomo_mem.use_gpu]
name = "Use GPU"
description = "Select for faster speeds"
type = "bool"
default = true
condition = { arg="method", value="membrain" }

[tabs.tomo_sphere]
_name = "Virion/vesicle segmentation"
_description = "Virion segmentation parameters"

[tabs.tomo_sphere.seg_tol]
name = "Segmentation radius tolerance"
description = "Allow variations around specified radius within this tolerance (percentage)"
type = "float"
default = 20.0

[tabs.tomo_sphere.smoothness]
name = "Smoothness constant"
description = "Larger values produce smoother surfaces, smaller values more accurately follow edges"
type = "float"
default = 1.0

[tabs.tomo_sphere.iterations]
name = "Max-flow iterations"
description = "Number of iterations to solve the min-cut/max-flow problem"
type = "int"
default = 500

[tabs.tomo_sphere.debug]
name = "Save first unbinned virion"
description = "Save unbinned virion reconstruction for first virion to sva/ folder"
type = "bool"
default = false
hidden = true

[tabs.tomo_vir]
_name = "Virion detection"
_description = "Virion detection parameters"

[tabs.tomo_vir.rad]
name = "Virion radius (A)"
description = "Approximate virion radius to use for detection"
type = "float"
default = 0
hidden = [ "tomo_segment_close", "tomo_par_close", "tomo_par_open", "tomo_picking"]

[tabs.tomo_vir.method]
name = "Virion detection method"
description = "Strategy for virion detection"
type = "enum"
enum = { none="none", auto="auto", manual="manual (list of positions required)", pyp-train="pyp-train (list of positions required)", pyp-eval="pyp-eval (trained model required)" }
default = "none"
hidden = [ "tomo_segment_close", "tomo_par_close", "tomo_par_open", "tomo_picking"]

[tabs.tomo_vir.number]
name = "Max number of virions per tomogram"
description = "Limit the number of virions during detection"
type = "int"
default = 25
condition = { arg="method", value="auto" }
hidden = [ "tomo_segment_close", "tomo_par_close", "tomo_par_open", "tomo_picking"]

[tabs.tomo_vir.det_tol]
name = "Tolerance for virion radius during detection"
description = "Allow virion radius variations within this tolerance (percentage)"
type = "float"
default = 20.0
condition = { arg="method", value="auto" }
hidden = [ "tomo_segment_close", "tomo_par_close", "tomo_par_open", "tomo_picking"]

[tabs.tomo_vir.seg_tol]
name = "Tolerance for virion radius during segmentation"
description = "Allow virion radius variations within this tolerance (percentage)"
type = "float"
default = 20.0
condition = { arg="method", value="auto" }
hidden = [ "tomo_par_close", "tomo_par_open", "tomo_picking"]

[tabs.tomo_vir.seg_smoothness]
name = "Smoothness constant"
description = "Larger values produce smoother surfaces, smaller values more accurately follow edges"
type = "float"
default = 1.0
condition = { arg="method", value="auto" }
hidden = [ "tomo_par_close", "tomo_par_open", "tomo_picking"]

[tabs.tomo_vir.seg_iterations]
name = "Max-flow iterations"
description = "Number of iterations to solve the min-cut/max-flow problem"
type = "int"
default = 500
condition = { arg="method", value="auto" }
hidden = [ "tomo_par_close", "tomo_par_open", "tomo_picking"]

[tabs.tomo_vir.seg_debug]
name = "Save first unbinned virion"
description = "Save unbinned virion reconstruction for first virion to sva/ folder"
type = "bool"
default = false
condition = { arg="method", value="auto" }
hidden = true

[tabs.tomo_vir.iterations]
name = "Denoising iterations before virion detection"
description = "Number denoising iterations (anisotropic diffusion)"
type = "int"
default = 25
condition = { arg="method", value="auto" }
hidden = [ "tomo_segment_close", "tomo_par_close", "tomo_par_open", "tomo_picking"]

[tabs.tomo_vir.canny_low]
name = "Low threshold for Canny edge detector"
description = "Allows to control the performance of virion detection"
type = "float"
default = 0.2
condition = { arg="method", value="auto" }
hidden = [ "tomo_segment_close", "tomo_par_close", "tomo_par_open", "tomo_picking"]

[tabs.tomo_vir.canny_high]
name = "High threshold for Canny edge detector"
description = "Allows to control the performance of virion detection"
type = "float"
default = 0.5
condition = { arg="method", value="auto" }
hidden = [ "tomo_segment_close", "tomo_par_close", "tomo_par_open", "tomo_picking"]

[tabs.tomo_vir.binn]
name = "Virion additional binning"
description = "Increase binning to speed up virion detection and reduce noise"
type = "int"
default = 2
condition = { arg="method", value="auto" }
hidden = [ "tomo_segment_close", "tomo_par_close", "tomo_par_open", "tomo_picking"]

[tabs.tomo_vir.detect_method]
name = "Spike detection method"
description = "Strategy to use for spike detection"
type = "enum"
enum = { none="none", template="template search (template file required)", mesh="uniform" }
default = "none"

[tabs.tomo_vir.detect_ref]
name = "Template for spike search (*.mrc)"
description = "Path to file containing the template (dimensions must match the binned tomograms)"
type = "path"
condition = { arg="detect_method", value="template" }
path = { type="files" }

[tabs.tomo_vir.detect_thre]
name = "Spike correlation threshold"
description = "Minimum correlation value to use for spike detection (lower values, more spikes)"
type = "float"
condition = { arg="detect_method", value="template" }
default = 0.2

[tabs.tomo_vir.detect_dist]
name = "Minimum distance between spikes (voxels)"
description = "Minimum distance between neighboring spikes"
type = "int"
default = 10
condition = { arg="detect_method", value=["template","mesh"] }

[tabs.tomo_vir.detect_band]
name = "Size of equatorial band to restrict spike picking (A)"
description = "Only pick spikes within a band centered around the virion equator"
type = "int"
default = 100
condition = { arg="detect_method", value=["template","mesh"] }

[tabs.tomo_vir.detect_rand]
name = "Randomize in-plane spike rotations"
description = "Randomize spike rotations (around direction normal to virion surface) to reduce missing wedge effects"
type = "bool"
default = true
condition = { arg="detect_method", value=["template","mesh"] }

[tabs.tomo_vir.detect_offset]
name = "Spike height offset (A)"
description = "Cut particles above membrane surface by this amount"
type = "int"
default = 0
condition = { arg="detect_method", value=["template","mesh"] }

[tabs.tomo_vir.force]
name = "Force recalculation of parameters"
description = "Force recalculation of virion parameters"
type = "bool"
default = false
hidden = true

[tabs.tomo_srf]
_name = "Particle detection"
_description = "Particle detection parameters"

[tabs.tomo_srf.detect_rad]
name = "Particle radius (A)"
description = "Particle radius in A"
type = "float"
default = 0

[tabs.tomo_srf.detect_method]
name = "Method"
description = "Strategy to use for particle detection"
type = "enum"
enum = { none="none", template="template search", mesh="uniform" }
default = "none"

[tabs.tomo_srf.detect_ref]
name = "Template (*.mrc)"
description = "Path to file containing the template (dimensions must match the binned tomograms)"
type = "path"
condition = { arg="detect_method", value="template" }
path = { type="files" }

[tabs.tomo_srf.detect_thre]
name = "Correlation threshold"
description = "Minimum correlation value to use for particle detection (lower values, more particles)"
type = "float"
condition = { arg="detect_method", value="template" }
default = 0.2

[tabs.tomo_srf.detect_dist]
name = "Minimum distance between particles (voxels)"
description = "Minimum distance between neighboring particles"
type = "int"
default = 10
condition = { arg="detect_method", value=["template","mesh"] }

[tabs.tomo_srf.detect_band]
name = "Size of equatorial band to restrict search (A)"
description = "Only pick particles within a band centered around the equator"
type = "int"
default = 100
condition = { arg="detect_method", value=["template","mesh"] }

[tabs.tomo_srf.detect_rand]
name = "Randomize in-plane particle rotations"
description = "Randomize particle rotations (around direction normal to surface) to reduce missing wedge effects"
type = "bool"
default = true
condition = { arg="detect_method", value=["template","mesh"] }

[tabs.tomo_srf.detect_offset]
name = "Height offset (A)"
description = "Move particle positions along membrane direction by this amount"
type = "int"
default = 0
condition = { arg="detect_method", value=["template","mesh"] }

[tabs.tomo_srf.force]
name = "Force recalculation of parameters"
description = "Force recalculation of virion parameters"
type = "bool"
default = false
hidden = true

[tabs.tomo_spk]
_name = "Particle detection"
_description = "Sub-tomogram detection parameters"

[tabs.tomo_spk.method]
name = "Detection method"
description = "Strategy to use for particle detection"
type = "enum"
enum = { none="none", auto="size-based", import="import (path to particle coordinates required)", manual="manual (list of positions required)", pyp-train="pyp-train (list of positions required)", pyp-eval="pyp-eval (trained model required)" }
default = "none"

[tabs.tomo_spk.rad]
name = "Particle radius (A)"
description = "Particle size to use for detection"
type = "float"
default = 0
condition = { arg="method", value=[ "none", "auto", "import", "manual", "pyp-eval" ] }

[tabs.tomo_spk.files]
name = "Import particle coordinates (*.spk)"
description = "Folder containing files with particle coordinates"
type = "path"
condition = { arg="method", value="import" }
path = { type="folders" }

[tabs.tomo_spk.files_flip]
name = "Flip Y-Z"
description = "Flip IMOD model's Y-Z coordinates"
type = "bool"
condition = { arg="method", value="import" }
default = false

[tabs.tomo_spk.contract_times_3d]
name = "Binning factor"
description = "Reduce size of tomograms before contamination detection to speed up processing"
type = "int"
condition = { arg="method", value="auto" }
default = 1

[tabs.tomo_spk.gaussian_3d]
name = "Apply Gaussian filter"
description = "Filter tomograms using a Gaussian filter before contamination detection"
type = "bool"
default=false
condition = { arg="method", value="auto" }

[tabs.tomo_spk.sigma_3d]
name = "Sigma (voxels)"
description = "Standard deviation used for the Gaussian filter"
type = "int"
default = 15
condition = { arg="gaussian_3d", value="true" }

[tabs.tomo_spk.stdtimes_cont_3d]
name = "Threshold for contamination detection"
description = "Number of standard deviations below mean used for contamination detection"
type = "float"
condition = { arg="method", value="auto" }
default = 1

[tabs.tomo_spk.min_size_3d]
name = "Minimum contamination size (voxels)"
description = "Groups of voxels smaller than this value will not be considered as contamination"
type = "int"
condition = { arg="method", value="auto" }
default = 125

[tabs.tomo_spk.dilation_3d]
name = "Contamination mask dilation (voxels)"
description = "Dilate contamination mask to avoid picking too close to contaminants"
type = "float"
condition = { arg="method", value="auto" }
default = 100

[tabs.tomo_spk.radiustimes_3d]
name = "Minimum distance between particles"
description = "Discard particles that are closer than this threshold (in multiple of the particle radius)"
type = "float"
condition = { arg="method", value="auto" }
default = 4

[tabs.tomo_spk.inhibit_3d]
name = "Local refinement"
description = "Use iterative criteria to detect particle candidates (select this option to get more particles)"
type = "bool"
condition = { arg="method", value="auto" }
default = false

[tabs.tomo_spk.detection_width_3d]
name = "Z-axis detection range (binned slices)"
description = "Restrict particle picking around the central slice of the tomogram"
type = "float"
default = 128
condition = { arg="method", value="auto" }

[tabs.tomo_spk.stdtimes_filt_3d]
name = "Particle detection threshold"
description = "Only keep candidate positions within this number of standard deviations above the mean (higher numbers give fewer particles)"
type = "float"
condition = { arg="method", value="auto" }
default = 1

[tabs.tomo_spk.remove_edge_3d]
name = "Filter positions by relative contrast"
description = "Reject particle positions that have higher foreground variance than the background"
type = "bool"
condition = { arg="method", value="auto" }
default = false

[tabs.tomo_spk.rand]
name = "Randomize particle rotations"
description = "Randomize particle orientations during extraction to reduce mising wegde effects"
type = "bool"
default = true
condition = { arg="method", value=["auto","import","manual","pyp-eval"] }

[tabs.tomo_pick]
_name = "Particle detection"
_description = "Sub-tomogram detection parameters"

[tabs.tomo_pick.method]
name = "Detection method"
description = "Strategy to use for particle detection"
type = "enum"
enum = { none="none", auto="size-based", import="import", manual="manual", virions="virions", pytom="template-search (pytom)" }
default = "none"

[tabs.tomo_pick.rad]
name = "Particle radius (A)"
description = "Size to use for particle detection"
type = "float"
default = 0
condition = { arg="method", value=[ "none", "auto", "import", "manual", "pytom" ] }

[tabs.tomo_pick.files]
name = "Import particle coordinates (*.spk)"
description = "Folder containing files with particle coordinates"
type = "path"
condition = { arg="method", value="import" }
path = { type="folders" }

[tabs.tomo_pick.files_flip]
name = "Flip Y-Z coordinates"
description = "Flip IMOD model's Y-Z coordinates"
type = "bool"
condition = { arg="method", value="import" }
default = false

[tabs.tomo_pick.contract_times_3d]
name = "Binning factor"
description = "Reduce size of tomograms before contamination detection to speed up processing"
type = "int"
condition = { arg="method", value="auto" }
default = 1

[tabs.tomo_pick.gaussian_3d]
name = "Apply Gaussian filter"
description = "Filter tomograms using a Gaussian filter before contamination detection"
type = "bool"
default=false
condition = { arg="method", value="auto" }

[tabs.tomo_pick.sigma_3d]
name = "Sigma (voxels)"
description = "Standard deviation used for the Gaussian filter"
type = "int"
default = 15
condition = { arg="gaussian_3d", value="true" }

[tabs.tomo_pick.stdtimes_cont_3d]
name = "Threshold for contamination detection"
description = "Number of standard deviations below mean used for contamination detection"
type = "float"
condition = { arg="method", value="auto" }
default = 1

[tabs.tomo_pick.min_size_3d]
name = "Minimum contamination size (voxels)"
description = "Groups of voxels smaller than this value will not be considered as contamination"
type = "int"
condition = { arg="method", value="auto" }
default = 125

[tabs.tomo_pick.dilation_3d]
name = "Contamination mask dilation (voxels)"
description = "Dilate contamination mask to avoid picking too close to contaminants"
type = "float"
condition = { arg="method", value="auto" }
default = 100

[tabs.tomo_pick.radiustimes_3d]
name = "Minimum distance between particles"
description = "Discard particles that are closer than this threshold (in multiple of the particle radius)"
type = "float"
condition = { arg="method", value="auto" }
default = 4

[tabs.tomo_pick.inhibit_3d]
name = "Local refinement"
description = "Use iterative criteria to detect particle candidates (select this option to get more particles)"
type = "bool"
condition = { arg="method", value="auto" }
default = false

[tabs.tomo_pick.detection_width_3d]
name = "Z-axis detection range (binned slices)"
description = "Restrict particle picking around the central slice of the tomogram"
type = "float"
default = 128
condition = { arg="method", value="auto" }

[tabs.tomo_pick.stdtimes_filt_3d]
name = "Particle detection threshold"
description = "Only keep candidate positions within this number of standard deviations above the mean (higher numbers give fewer particles)"
type = "float"
condition = { arg="method", value="auto" }
default = 1

[tabs.tomo_pick.remove_edge_3d]
name = "Filter positions by relative contrast"
description = "Reject particle positions that have higher foreground variance than the background"
type = "bool"
condition = { arg="method", value="auto" }
default = false

[tabs.tomo_pick.rand]
name = "Randomize particle rotations"
description = "Randomize particle orientations during extraction to reduce mising wegde effects"
type = "bool"
default = true
condition = { arg="method", value=["auto","import","manual"] }

[tabs.tomo_pick.vir_rad]
name = "Virion radius (A)"
description = "Approximate virion radius to use for detection"
type = "float"
default = 0
condition = { arg="method", value="virions" }

[tabs.tomo_pick.vir_number]
name = "Max number of virions per tomogram"
description = "Limit the number of virions"
type = "int"
default = 25
condition = { arg="method", value="virions" }

[tabs.tomo_pick.vir_det_tol]
name = "Tolerance for virion radius"
description = "Allow virion radius variations within this tolerance (percentage)"
type = "float"
default = 20.0
condition = { arg="method", value="virions" }

[tabs.tomo_pick.vir_iterations]
name = "Denoising iterations before detection"
description = "Number denoising iterations (anisotropic diffusion)"
type = "int"
default = 25
condition = { arg="method", value="virions" }

[tabs.tomo_pick.vir_canny_low]
name = "Low threshold for Canny edge detector"
description = "Allows to control the performance of virion detection"
type = "float"
default = 0.2
condition = { arg="method", value="virions" }

[tabs.tomo_pick.vir_canny_high]
name = "High threshold for Canny edge detector"
description = "Allows to control the performance of virion detection"
type = "float"
default = 0.5
condition = { arg="method", value="virions" }

[tabs.tomo_pick.vir_binn]
name = "Additional binning"
description = "Larger values can speed up detection and reduce noise"
type = "int"
default = 2
condition = { arg="method", value="virions" }

# template matching
[tabs.tomo_pick.pytom_template]
name = "Template"
description = "Should match the contrast of the particles in the tomograms"
type = "path"
path = { type="files" }
input = { type="initialModel" }
condition = { arg="method", value="pytom" }

[tabs.tomo_pick.pytom_template_size]
name = "Box size (binned voxels)"
description = "Reshape template into this size"
type = "int"
default = 0
condition = { arg="method", value="pytom" }

[tabs.tomo_pick.pytom_template_invert]
name = "Invert"
description = "Reverse template contrast"
type = "bool"
default = false
condition = { arg="method", value="pytom" }

[tabs.tomo_pick.pytom_template_mirror]
name = "Mirror"
description = "Produce a mirrored version of the template"
type = "bool"
default = false
condition = { arg="method", value="pytom" }

[tabs.tomo_pick.pytom_tomogram_ctf_model]
name = "Tomogram CTF correction"
description = "Method used to correct CTF during tomogran reconstruction"
type = "enum"
enum = { none="none", phase-flip="phase-flip" }
default = "none"
condition = { arg="method", value="pytom" }

[tabs.tomo_pick.pytom_mask_sigma]
name = "Sigma (pixels)"
description = "Sigma of gaussian drop-off around the mask edges"
type = "float"
default = 1.0
condition = { arg="method", value="pytom" }

[tabs.tomo_pick.pytom_non_spherical]
name = "Non-spherical mask"
description = "Set when mask is not spherical (roughly doubles computation time)"
type = "bool"
default = false
condition = { arg="method", value="pytom" }

[tabs.tomo_pick.pytom_angular_search]
name = "Angular search"
description = "Override angular search calculation from the particle diameter"
type = "float"
default = 0
condition = { arg="method", value="pytom" }

[tabs.tomo_pick.pytom_low_pass]
name = "Low pass (A)"
description = "Apply a low-pass filter to the tomogram and template"
type = "float"
default = 30.0
condition = { arg="method", value="pytom" }

[tabs.tomo_pick.pytom_high_pass]
name = "High pass (A)"
description = "Apply a high-pass filter to the tomogram and template"
type = "float"
default = 500.0
condition = { arg="method", value="pytom" }

[tabs.tomo_pick.pytom_spectral_whitening]
name = "Spectral whitening"
description = "Apply whitening filtering to put more weight on high resolution features and sharpen correlation peaks"
type = "bool"
default = false
condition = { arg="method", value="pytom" }

[tabs.tomo_pick.pytom_random_phase_correction]
name = "Random phase correction"
description = "Run template matching simultaneously with a phase randomized version of the template"
type = "bool"
default = false
condition = { arg="method", value="pytom" }

[tabs.tomo_pick.pytom_volume_split]
name = "Split volume (x y z)"
description = "Split volume for the search (useful if volume does not fit into GPU memory. Format is x y z, e.g. 1 2 1"
type = "str"
default = ""
condition = { arg="method", value="pytom" }

[tabs.tomo_pick.pytom_defocus_handedness]
name = "Defocus handedness"
description = "Apply whitening filtering to put more weight on high resolution features and sharpen correlation peaks"
type = "enum"
enum = { -1="inverted (-1)", 0="no correction (0)", 1="not inverted (1)" }
default = "0"
condition = { arg="pytom_volume_split", value="true" }

[tabs.tomo_pick.pytom_rng_seed]
name = "Random seed"
description = "Seed for the random number generator used for phase randomization"
type = "int"
default = 0
condition = { arg="method", value="pytom" }

[tabs.tomo_pick.pytom_search_x]
name = "Search X (binned voxels)"
description = "Start and end limits of search along the x-axis, e.g. 10 490"
type = "str"
default = ""
condition = { arg="method", value="pytom" }

[tabs.tomo_pick.pytom_search_y]
name = "Search Y (binned voxels)"
description = "Start and end limits of search along the y-axis, e.g. 10 490"
type = "str"
default = ""
condition = { arg="method", value="pytom" }

[tabs.tomo_pick.pytom_search_z]
name = "Search Z (binned voxels)"
description = "Start and end limits of search along the z-axis, e.g. 10 215"
type = "str"
default = ""
condition = { arg="method", value="pytom" }

# detection

[tabs.tomo_pick.pytom_estimate_cutoff]
name = "Estimate extraction cutoff"
description = "Automated estimation of cutoff for extraction"
type = "bool"
default = true
condition = { arg="method", value="pytom" }

[tabs.tomo_pick.pytom_cutoff]
name = "Extraction cutoff (0-1)"
description = "Override automated estimation cutoff (0 will extract number-of-particles)"
type = "float"
default = 0
condition = { arg="pytom_estimate_cutoff", value="false" }

[tabs.tomo_pick.pytom_number_of_particles]
name = "Maximum particles"
description = "Maximum number of particles to extract per tomogram"
type = "int"
default = 300
condition = { arg="method", value="pytom" }

[tabs.tomo_pick.pytom_number_of_false_positives]
name = "Number of false positives"
description = "Higher values increase particle recall at the expense of more false positives. Values between 0 and 1 make the cutoff more restrictive"
type = "float"
default = 1
condition = { arg="method", value="pytom" }

[tabs.tomo_pick.pytom_tophat]
name = "Apply tophat filter"
description = "Attempt to filter only sharp correlation peaks with a tophat transform"
type = "bool"
default = true
condition = { arg="method", value="pytom" }

[tabs.tomo_pick.pytom_tophat_connectivity]
name = "Tophat connectivity"
description = "Set kernel connectivity for tophat transform (1 most restrictive, 3 least restrictive)"
type = "enum"
enum = { 1="1", 2="2", 3="3" }
default = "1"
condition = { arg="pytom_tophat", value="true" }

[tabs.tomo_pick.pytom_half_precision]
name = "Half-precision"
description = "Save all outputs in float16"
type = "bool"
default = false
condition = { arg="method", value="pytom" }
 
[tabs.tomo_pick.pytom_save_scores]
name = "Save scores"
description = "Save score volumes to pytom/ directory (allows re-adjusting cutoff without recalculating scores)"
type = "bool"
default = true
condition = { arg="method", value="pytom" }

[tabs.tomo_pick.pytom_use_existing_scores]
name = "Use existing scores, if available"
description = "This allows tweaking the cutoff without recalculating the scores"
type = "bool"
default = true
condition = { arg="method", value="pytom" }

[tabs.tomo_pick.pytom_debug]
name = "Save intermediate files"
description = "Save json file and angles volume to pytom/ folder for debugging"
type = "bool"
default = false
condition = { arg="method", value="pytom" }

[tabs.tomo_ext]
_name = "Particle extraction"
_description = "Sub-tomogram extraction parameters"

[tabs.tomo_ext.fmt]
name = "Sub-volume export format"
description = "Format to extract sub-tomograms (only needed if processing outside nextPYP)"
type = "enum"
enum = { none="none", 3DAVG="3davg (do not invert contrast)", eman="eman (invert contrast)" }
default = "none"

[tabs.tomo_ext.size]
name = "Sub-tomogram size (voxels)"
description = "Size to use for sub-tomgram extraction"
type = "int"
default = 128
condition = { arg="fmt", value=["eman","3DAVG"] }

[tabs.tomo_ext.padd]
name = "Sub-tomogram padding"
description = "Padding factor for sub-tomograms (voxels)"
type = "int"
default = 1
hidden = true

[tabs.tomo_ext.binn]
name = "Sub-tomogram binning"
description = "Binning factor used to extract sub-tomgrams"
type = "int"
default = 1
condition = { arg="fmt", value=["eman","3DAVG"] }

[tabs.tomo_ext.coords]
name = "Export coordinates"
description = "Export particle coordinates in IMOD format (sva/*.spk)"
type = "bool"
default = false

# 2D classification parameters

[tabs.class2d]
_name = "2D classification"
_description = "Settings for particle classification"

[tabs.class2d.min]
name = "Minimum particles for 2D classification"
description = "Minimum number of particles required for 2D classification"
type = "int"
default = 5000

[tabs.class2d.inc]
name = "Incremental particles for 2D classification"
description = "Incremental number of particles required for 2D classification"
type = "int"
default = 5000

[tabs.class2d.num]
name = "Number of classes"
description = "Number of classes to use during classification"
type = "int"
default = 20

[tabs.class2d.box]
name = "Box size (pixels)"
description = "Box size used for extraction"
type = "int"
hidden = ["spr_flexible_refine", "tomo_flexible_refine", "tomo_flexible_refine_after"]
default = 96

[tabs.class2d.bin]
name = "Image binning"
description = "Binning used during particle extraction"
type = "int"
default = 4

[tabs.class2d.ctf_min_res]
name = "Exclude low resolution micrographs"
description = "Only use micrographs with information beyond this resolution"
type = "float"
default = 10.0

[tabs.class2d.fraction]
name = "Fraction of particles to use"
description = "What fraction of particles to use for classification"
type = "float"
default = 0.5
advanced = true

[tabs.class2d.rlref]
name = "Min resolution (A)"
description = "Minimum resolution used during refinement"
type = "float"
default = 100.0
advanced = true

[tabs.class2d.rhini]
name = "Starting high-resolution"
description = "Resolution limit for first refinement iteration"
type = "float"
default = 40.0
advanced = true

[tabs.class2d.rhref]
name = "Max resolution (A)"
description = "Maximum resolution used during refinement"
type = "float"
default = 8.0
advanced = true

[tabs.class2d.iters_init]
name = "Number of iterations for ab-initio"
description = "Iterations for ab-initio refinement"
type = "int"
default = 15
advanced = true

[tabs.class2d.iters_seed]
name = "Number of iterations for seeded-startup"
description = "Iterations for seeded-startup refinement"
type = "int"
default = 10
advanced = true

[tabs.class2d.iters_refine]
name = "Number of iterations during refinement"
description = "Iterations for refinement"
type = "int"
default = 3
advanced = true

[tabs.class2d.max_ab_initio]
name = "Max particles for ab-initio"
description = "Max number of particles to use during ab-initio"
type = "int"
default = 10000
advanced = true

[tabs.class2d.max_seeded]
name = "Max particles for seeded startup"
description = "Max number of particles to use during seeded startup"
type = "int"
default = 50000
advanced = true

[tabs.class2d.max_refinement]
name = "Max particles for refinement"
description = "Max number of particles to use during refinement"
type = "int"
default = 100000
advanced = true

# Classification parameters

[tabs.class]
_name = "Classification"
_description = "Settings for particle classification"

[tabs.class.num]
name = "Number of classes"
description = "Number of classes to use during classification"
type = "int"
default = 1

[tabs.class.rhcls]
name = "Max resolution (A)"
description = "Highest resolution used for classification"
type = "float"
default = 8.0

[tabs.class.force_init]
name = "Force initialization"
description = "Force class initialization"
type = "bool"
default = false
hidden = true

[tabs.class.bin]
name = "Binning"
description = "Additional binning used for classification"
type = "int"
default = 2
hidden = true

[tabs.class.refineeulers]
name = "Angle refinement interval"
description = "Refine Euler angles every this many iterations"
type = "int"
default = 3
hidden = true

[tabs.class.refineshifts]
name = "Translation refinement interval"
description = "Refine translations every this many iterations"
type = "int"
default = 2
hidden = true

[tabs.class.focusmask]
name = "2D mask for focused classification (A)"
description = "(X,Y,Z,R): spherical mask of radius R centered at (X,Y,Z)"
type = "str"
default = "0,0,0,0"
hidden = [ "spr_map_clean", "tomo_map_clean" ]

# Search parameters

[tabs.refine]
_name = "Refinement"
_description = "Parameters for 3D refinement"

[tabs.refine.dataset]
name = "Refinement name"
description = "Name of refinement"
type = "str"
hidden = true

[tabs.refine.model]
name = "Initial model (*.mrc)"
description = "Initial model used for refinement"
type = "path"
path = { type="files" }
input = { type="initialModel" }
copyToNewBlock = false
hidden = [ "tomo_flexible_refine", "tomo_map_clean" ]

[tabs.refine.parfile_tomo]
name = "Alignments from sub-volume averaging (*.txt)"
description = "Parameter file containing initial alignment information"
type = "path"
path = { type="files" }
input = { type="txtfile" }
copyToNewBlock = false
hidden = ["spr_coarse_refine", "spr_fine_refine", "spr_flexible_refine", "tomo_flexible_refine", "tomo_flexible_refine_after", "spr_map_clean", "tomo_map_clean" ]

[tabs.refine.parfile]
name = "Input parameter file (*.bz2)"
description = "Parameter file to initialize refinement"
type = "path"
path = { type="files" }
input = { type="parfile" }
copyToNewBlock = false
hidden = [ "spr_map_clean", "tomo_map_clean" ]

[tabs.refine.parfile_compress]
name = "Compress par files"
description = "Store all metadata in compressed format"
type = "bool"
default = true
hidden = true
copyToNewBlock = false
advanced = true

[tabs.refine.updateallparx]
name = "Update parameter files"
description = "Update all metadata in csp allparx"
type = "bool"
default = true
hidden = true

[tabs.refine.rlref]
name = "Min resolution (A)"
description = "Minimum resolution used during refinement"
type = "float"
default = 100.0
hidden = [ "spr_map_clean", "tomo_map_clean" ]

[tabs.refine.rhref]
name = "Max resolution (A)"
description = "Maximum resolution used during refinement (per iteration, colon separated)"
type = "str"
default = "10"

[tabs.refine.fboost]
name = "Use signed correlation"
description = "May increase the chance of overfitting"
type = "bool"
default = false

[tabs.refine.fboostlim]
name = "Resolution limit for signed correlation"
description = "Resolution limit to use for signed correlation coefficient (0=no limit)"
type = "float"
default = 0.0
condition = { arg="fboost", value="true" }

[tabs.refine.resume]
name = "Resume refinement"
description = "Continue refinement from most recent iteration"
type = "bool"
default = true
copyToNewBlock = false

[tabs.refine.first_iter]
name = "First iteration"
description = "Start refinement from this iteration"
type = "int"
default = 2
copyToNewBlock = false
condition = { arg="resume", value="false" }

[tabs.refine.iter]
name = "Starting iteration"
description = "Start refinement from this iteration"
type = "int"
default = 2
hidden = true
copyToNewBlock = false

[tabs.refine.maxiter]
name = "Last iteration"
description = "Number of last refinement iteration"
type = "int"
default = 2
copyToNewBlock = false

[tabs.refine.skip]
name = "Skip refinement"
description = "Skip refinement step, only do reconstruction"
type = "bool"
default = true
copyToNewBlock = false

[tabs.refine.metric]
name = "Search metric"
description = "Version of Frealign used for alignment"
type = "enum"
enum = { new="new", frealignx="frealignx" }
default = "frealignx"
condition = { arg="skip", value="false" }
hidden = true

[tabs.refine.fssnr]
name = "Use SSNR table"
description = "Use SSNR table during evaluation of refinement metric"
type = "bool"
default = true
condition = { arg="skip", value="false" }

[tabs.refine.global_stat]
name = "Use global statistics"
description = "Use global statistics for refinement and reconstruction"
type = "bool"
default = false
condition = { arg="skip", value="false" }

[tabs.refine.mode]
name = "Search mode"
description = "Search strategy used during alignment"
type = "enum"
enum = { 0="global", 1="local" }
default = "0"
condition = { arg="skip", value="false" }
hidden = [ "spr_fine_refine", "spr_flexible_refine", "tomo_initial_refine", "tomo_reference_refine", "tomo_coarse_refine", "tomo_new_coarse_refine", "tomo_new_coarse_classification", "tomo_flexible_refine", "tomo_flexible_refine_after" ]

[tabs.refine.itmax]
name = "Random search cycles"
description = "Number of cycles of randomised search used during global search"
type = "int"
default = 50
condition = { arg="skip", value="false" }

[tabs.refine.dang]
name = "Angular sampling step (degrees)"
description = "There is a program default value calculated taking resolution into account, but if this input value is non-zero, the program value is overridden"
type = "str"
default = "20.0"
condition = { arg="skip", value="false" }

[tabs.refine.priors]
name = "Use alignment priors"
description = "Using priors during refinement may reduce the chance of overfitting"
type = "bool"
default = false
condition = { arg="skip", value="false" }

[tabs.refine.refine_angle_phi]
name = "Refine Phi angle"
description = "Refine angle parameter Phi"
type = "bool"
default = true
condition = { arg="skip", value="false" }

[tabs.refine.refine_angle_theta]
name = "Refine Theta angle"
description = "Refine angle parameter Theta"
type = "bool"
default = true
condition = { arg="skip", value="false" }

[tabs.refine.refine_angle_psi]
name = "Refine Psi angle"
description = "Refine angle parameter Psi"
type = "bool"
default = true
condition = { arg="skip", value="false" }

[tabs.refine.refine_shiftx]
name = "Refine X shifts"
description = "Refine translation in the X dimension"
type = "bool"
default = true
condition = { arg="skip", value="false" }

[tabs.refine.refine_shifty]
name = "Refine Y shifts"
description = "Refine translation in the Y dimension"
type = "bool"
default = true
condition = { arg="skip", value="false" }

[tabs.refine.searchx]
name = "Search range in X (A)"
description = "Search range in the X-axis (0.0=mask radius)"
type = "float"
default = 0.0
condition = { arg="skip", value="false" }

[tabs.refine.searchy]
name = "Search range in Y (A)"
description = "Search range in the Y-axis (0.0=mask radius)"
type = "float"
default = 0.0
condition = { arg="skip", value="false" }

[tabs.refine.score_weighting]
name = "Score weighting"
description = "Use score weighting during refinement (higher score, stronger contribution)"
type = "bool"
default = false
condition = { arg="skip", value="false" }

[tabs.refine.beamtilt]
name = "Refine beam-tilt"
description = "Use beam tilt refinement"
type = "bool"
default = false
condition = { arg="skip", value="false" }

[tabs.refine.adjust]
name = "TBA"
description = "TBA"
type = "str"
default = "true"
hidden = true

[tabs.refine.boff]
name = "Frealign BOFF (legacy)"
description = "Average phase residual: 60.0, approximate average phase residual of all particles, used in calculating weights for contributions of different particles to 3D map"
type = "str"
default = "0.0"
hidden = true

[tabs.refine.bsc]
name = "BSC"
description = "Frealign BSC"
type = "str"
default = "2.0"
hidden = true

[tabs.refine.crop]
name = "Crop"
description = "Cropping"
type = "str"
default = "false"
hidden = true

[tabs.refine.daemon]
name = "Daemon"
description = "Re-launch refinement when particle number reaches specified comma separated values"
type = "str"
default = "5000,25000,5000,2000"
hidden = true

[tabs.refine.debug]
name = "Debug"
description = "Enable debug mode"
type = "bool"
default = false
hidden = true

[tabs.refine.dfsig]
name = "DFSIG (legacy)"
description = "Defocus uncertainty (A), e.g. 200.0. This will restrain the change in defocus when refining defocus values for individual particles"
type = "str"
default = "150.0"
hidden = true

[tabs.refine.fastig]
name = "FASTIG (legacy)"
description = "Astigmatism refinement - if F, then DF1 and DF2 are coupled"
type = "str"
default = "false"
hidden = true

[tabs.refine.fdef]
name = "FDEF (legacy)"
description = "Defocus refinement, DF1 and DF2 coupled/uncoupled if FASTIG=F/T"
type = "str"
default = "false"
hidden = true

[tabs.refine.fmag]
name = "FMAG"
description = "Magnification refinement - one number is calculated for each new film. The orientation parameters must already be available in the input parameter file and should preferably have been determined using a different 3D reference model than that used for the magnification refinement"
type = "str"
default = "false"
hidden = true

[tabs.refine.fmatch]
name = "FMATCH"
description = "Write out matching projections obtained after refinement (for diagnostic purposes)"
type = "str"
default = "false"
hidden = true

[tabs.refine.fpart]
name = "FPART"
description = "Defocus refinement for individual particles if FPART=T, otherwise defocus change is constrained to be the same for all particles in one image"
type = "str"
default = "false"
hidden = true

[tabs.refine.srad]
name = "Mask radius (A)"
description = "Radius of spherical mask applied during refinement (0=1.5x particle radius)"
type = "float"
default =  0.0
hidden = [ "spr_map_clean", "tomo_map_clean" ]

[tabs.refine.maskth]
name = "Shape mask (*.mrc)"
description = "Apply mask to reference before refinement (must be same size as current box size)"
type = "path"
path = { type="files" }
input = { type="initialModel" }
hidden = [ "spr_map_clean", "tomo_map_clean" ]

[tabs.refine.merge_normalize]
name = "Frame normalization"
description = "Normalize the voxel and CTF in merge3d by the number of frames"
type = "bool"
default = false
hidden = true

[tabs.refine.pbc]
name = "PBC"
description = "Phase residual / pseudo-B-factor conversion Constant: 5.0. Automatic weighting is applied to each particle: a pseudo-temperature (B) factor is applied to each particle according to its relative phase residual against the reference. The weight is calculated as W = exp (-DELTAP/PBC * R^2) with DELTAP = relative phase residual (actual phase residual minus BOFF), PBC = conversion constant (5.0 in the example), and R^2 the squared resolution in Fourier units (R = 0.0 ... 0.5). A large value for PBC (e.g. 100.0) gives equal weighting to each particle"
type = "str"
default = "100.0"
hidden = true

[tabs.refine.xstd]
name = "XSTD"
description = "Number of standard deviations above mean for masking of input low-pass filtered 3D model - note this 3D masking does not use RI - if positive, calculates mask with subroutine D3MASK, equiv to solvent flattening with 5-pixel-cosine-bell smoothed mask boundary. The mask is then used to multiply the input 3D map, which is then used for all parameter refinement and subsequent calculations. - if negative, calculates mask with subroutine D2MASK resulting in a sharp binary (0/1) mask boundary for which is used for both parameter refinement and reconstruction, and to mask and output the matching projections.  Each matching particle image is also always masked with a cosine bell edged function of radius RI"
type = "str"
default = "0"
hidden = true

[tabs.refine.rbfact]
name = "RBFACT"
description = "B-factor to apply to particle image projections before orientation determination or refinement. This allows inclusion of high resolution data but with a reduced (or increased if negative) weight. WGH and RBFAC can be manipulated in particle parameter refinement as if they were low pass and high pass filters. WGH and the CTF are used to correct the density in the final map, whereas RBFAC is not. NOTE: This option should be used with great care as amplification of noisy high-resolution terms can lead to over-fitting and artificially high values in the FSC curve (se publication #2 above). FREALIGN uses an automatic weighting scheme and RBFACT should normally be set to 0.0"
type = "str"
default = "0.0"
hidden = true

[tabs.refine.ref_par]
name = "Reference par file"
description = "Reference par file used for regularization (par format)"
type = "path"
path = { type="files" }
hidden = true

[tabs.refine.same_ref]
name = "Persistent reference"
description = "Use the same reference for refinement (do not update with the most current reference)"
type = "bool"
default = false
hidden = true

[tabs.refine.target]
name = "TARGET"
description = "Target phase residual (for resolution between RMAX1 and RMAX2) during parameter saerch and refinement, below which the search and/or refinement is terminated.  This is normally set low (e.g. THRESH=10.0). This will give excellent determination of particle orientations"
type = "str"
default = "90.0"
hidden = true

[tabs.refine.iblow]
name = "IBLOW"
description = "Padding factor for reference structure"
type = "str"
default = "1"
hidden = true

[tabs.refine.imem]
name = "IMEM"
description = "Memory usage and padding factor for reference structure (frealign v9 only)"
type = "enum"
enum = { 0="0", 1="1", 2="2", 3="3" }
default = "0"
hidden = true

[tabs.refine.interp]
name = "Interpolation algorithm"
description = "Interpolation scheme used for 3D reconstruction (frealign v9 only)"
type = "enum"
enum = { 0="nearest", 1="linear" }
default = "1"
hidden = true

[tabs.refine.invert]
name = "Invert image contrast"
description = "Set to true if particles are dark on bright background, otherwise set to false"
type = "bool"
default = false
hidden = true

[tabs.refine.ipmax]
name = "IPMAX"
description = "Number of potential matches in a search that should be tested further in a subsequent local refinement"
type = "int"
default = 10
hidden = true

[tabs.refine.mask]
name = "MASK"
description = "Binary mask to include/exclude parameters from refinement (phi,theta,psi,sx,sy)"
type = "str"
default = "1,1,1,1,1"
hidden = true

# Refinement metric

[tabs.metric]
_name = "Particle scoring function"
_description = "Metric parameters for 3D refinement"

[tabs.metric.UseImagesForRefinementMin]
name = "First tilt for refinement"
description = "Index of first tilt used during refinement (earlier tilts will not contribute to score)"
type = "int"
default = 0

[tabs.metric.UseImagesForRefinementMax]
name = "Last tilt for refinement"
description = "Index of last tilt used during refinement (later tilts will not contribute to score)"
type = "int"
default = 20

[tabs.metric.RefineProjectionCutoff]
name = "Min number of tilts for refinement"
description = "Only refine particles that have at least this number of tilts (0=all)"
type = "int"
default = 0
advanced = true

[tabs.metric.rlref]
name = "Min resolution (A)"
description = "Minimum resolution used for score calculation"
type = "float"
default = 100.0

[tabs.metric.rhref]
name = "Max resolution (A)"
description = "Maximum resolution used for score calculation (per iteration, colon separated)"
type = "str"
default = "10"
hidden = [ "tomo_initial_refine" ]

[tabs.metric.fboost]
name = "Use signed correlation"
description = "May increase the chance of overfitting"
type = "bool"
default = true
advanced = true

[tabs.metric.fboostlim]
name = "Resolution limit for signed correlation"
description = "Resolution limit to use for signed correlation coefficient (0=no limit)"
type = "float"
default = 0.0
condition = { arg="fboost", value="true" }
advanced = true

[tabs.metric.fssnr]
name = "Use SSNR table"
description = "Use SSNR table during evaluation of refinement metric"
type = "bool"
default = true
advanced = true

[tabs.metric.global_stat]
name = "Use global statistics"
description = "Use global statistics for refinement and reconstruction"
type = "bool"
default = false
advanced = true

[tabs.metric.priors]
name = "Use alignment priors"
description = "Using priors during refinement may reduce the chance of overfitting"
type = "bool"
default = false
advanced = true

[tabs.metric.score_weighting]
name = "Score weighting"
description = "Use score weighting during refinement (higher score, stronger contribution)"
type = "bool"
default = false
advanced = true

[tabs.metric.masking_method]
name = "Masking strategy"
description = "Mask used during score evaluation"
type = "enum"
enum = { spherical="spherical", file="from file", auto="automask" }
default = "spherical"

[tabs.metric.srad]
name = "Mask radius (A)"
description = "Radius of spherical mask (0=1.5x particle radius)"
type = "float"
default =  0.0
condition = { arg="masking_method", value="spherical" }

[tabs.metric.maskth]
name = "Shape mask (*.mrc)"
description = "Must have same dimensions as current box size"
type = "path"
path = { type="files" }
input = { type="initialModel" }
condition = { arg="masking_method", value="file" }

# 3D reconstruction parameters

[tabs.reconstruct]
_name = "Reconstruction"
_description = "Parameters used for 3D reconstruction"
_hidden = [ "spr_map_clean", "tomo_map_clean" ]

[tabs.reconstruct.optimal_cutoff]
name = "Value of automatic threshold"
description = "Store value of automatically determined threshold"
type = "float"
default = 0.0
hidden = true

[tabs.reconstruct.cutoff]
name = "Fraction of particles"
description = "Use subset of particles for reconstruction (0=automatic,<1=percentage,1=all,>1=number of particles)"
type = "str"
default = "1"
hidden = ["spr_fine_refine", "spr_flexible_refine", "tomo_initial_refine", "tomo_initial_reconstruct", "tomo_reference_refine", "tomo_coarse_refine", "tomo_new_coarse_refine", "tomo_new_coarse_classification", "tomo_flexible_refine", "tomo_flexible_refine_after" ]
copyToNewBlock = false

[tabs.reconstruct.apply_symmetry]
name = "Apply symmetry"
description = "Apply symmetry during reconstruction"
type = "bool"
default = true

[tabs.reconstruct.dose_weighting_enable]
name = "Apply dose weighting"
description = "Perform data-driven dose weighting during reconstruction"
type = "bool"
default = false

[tabs.reconstruct.dose_weighting_global]
name = "Global weights"
description = "Compute global weights using the entire dataset for dose weighting (rather than local weights inferred from a bundle)"
type = "bool"
default = false
condition = { arg="dose_weighting_enable", value="true" }

[tabs.reconstruct.dose_weighting_weights]
name = "External weights"
description = "External weights for dose weighting (rather than weights inferred from current parfile)"
type = "path"
path = { type="files" }
input = { type="txtfile" }
condition = { arg="dose_weighting_enable", value="true" }

[tabs.reconstruct.dose_weighting_fraction]
name = "Frame weight fraction"
description = "Using larger values contributes fewer frames to high-resolution, and viceversa"
type = "int"
default = 4
condition = { arg="dose_weighting_enable", value="true" }

[tabs.reconstruct.dose_weighting_transition]
name = "Frame weight transition"
description = "Weight transition (for per-frame reconstruction)"
type = "float"
default = 0.75
condition = { arg="dose_weighting_enable", value="true" }

[tabs.reconstruct.dose_weighting_multiply]
name = "Multiply by number of frames"
description = "Multiply dose weighting parameters by the number of frames"
type = "bool"
default = true
condition = { arg="dose_weighting_enable", value="true" }

[tabs.reconstruct.denoise_enable]
name = "Apply denoising"
description = "Apply denoising after reconstruction"
type = "bool"
default = false

[tabs.reconstruct.denoise_method]
name = "Method"
description = "Method to use for denosing"
type = "enum"
enum = { bm4d="bm4d (block matching 4d)", nad="imod-nad (anisotropic difussion)" }
default = "bm4d"
condition = { arg="denoise_enable", value="true" }

[tabs.reconstruct.denoise_iters]
name = "Number of iterations"
description = "More iterations for more aggressive denoising"
type = "int"
default = 1
condition = { arg="denoise_method", value="nad" }

[tabs.reconstruct.denoise_nsearch]
name = "Neighborhood size"
description = "Size of area to search for similar patches (voxels)"
type = "int"
default = 11
hidden = true
condition = { arg="denoise_method", value="nad" }

[tabs.reconstruct.denoise_patch_size]
name = "Patch size"
description = "Patch size used for denoising (must be power of 2, voxels)"
type = "int"
default = 4
hidden = true
condition = { arg="denoise_method", value="nad" }

[tabs.reconstruct.denoise_sigma]
name = "Noise sigma"
description = "Noise sigma estimation, use higher values for more aggresive denoising"
type = "float"
default = 0.25
condition = { arg="denoise_method", value="bm4d" }

[tabs.reconstruct.export_enable]
name = "Export metadata (*.star)"
description = "Export metadata after reconstruction"
type = "bool"
default = false
advanced = true

[tabs.reconstruct.min_occ]
name = "Min occupancy"
description = "Minimum occupancy to use during reconstruction"
type = "int"
default = 50
advanced = true

[tabs.reconstruct.ffilt]
name = "Apply Wiener filter"
description = "Apply single particle Wiener filter to final reconstruction"
type = "bool"
default = true
advanced = true

[tabs.reconstruct.rrec]
name = "Resolution limit"
description = "Maximum resolution used during reconstruction (0=Nyquist)"
type = "float"
default = 0.0
advanced = true

[tabs.reconstruct.norm]
name = "Normalize images"
description = "Normalize input particle images before reconstruction"
type = "bool"
default = false
advanced = true

[tabs.reconstruct.fbfact]
name = "Apply B-factor (fbfact)"
description = "Determine and apply B-factor to final reconstruction"
type = "bool"
default = false
hidden = true

[tabs.reconstruct.minazh]
name = "Min azhimut (degrees)"
description = "Minimum azhimut-angle used for reconstruction"
type = "float"
default = 0.0
advanced = true

[tabs.reconstruct.maxazh]
name = "Max azhimut (degrees)"
description = "Maximum azhimut-angle used for reconstruction"
type = "float"
default = 180.0
advanced = true

[tabs.reconstruct.mindef]
name = "Min defocus (A)"
description = "Minimum defocus used for reconstruction"
type = "float"
default = 0.0
advanced = true

[tabs.reconstruct.maxdef]
name = "Max defocus (A)"
description = "Maximum defocus used for reconstruction"
type = "float"
default = 100000.0
advanced = true

[tabs.reconstruct.minscore]
name = "Min score"
description = "Ignore particles with scores lower than Min"
type = "float"
default = 0.0
advanced = true

[tabs.reconstruct.maxscore]
name = "Max score"
description = "Ignore particles with scores higher than Max"
type = "float"
default = 1.0
advanced = true

[tabs.reconstruct.maxtilt]
name = "Max tilt-angle (degrees)"
description = "Maximum tilt-angle used for reconstruction"
type = "float"
default = 90.0
hidden = [ 'spr_import_raw', 'spr_import_star', 'stream_spr' ]
advanced = true

[tabs.reconstruct.mintilt]
name = "Min tilt-angle (degrees)"
description = "Minimum tilt-angle used for reconstruction"
type = "float"
default = -90.0
advanced = true

[tabs.reconstruct.firstframe]
name = "First frame"
description = "First frame used for reconstruction"
type = "int"
default = 0
advanced = true

[tabs.reconstruct.lastframe]
name = "Last frame"
description = "Last frame used for reconstruction (-1=all frames)"
type = "int"
default = -1
advanced = true

[tabs.reconstruct.iewald]
name = "Ewald sphere correction"
description = "Ewald sphere correction"
type = "enum"
enum = { 0="0", 1="1", 2="2", -1="-1", -2="-2" }
default = "0"
advanced = true

[tabs.reconstruct.lblur]
name = "Likelihood blurring"
description = "Use likelihood blurring during reconstruction"
type = "bool"
default = false
advanced = true

[tabs.reconstruct.lblur_nrot]
name = "Rotations for blurring"
description = "Number of rotations used during likelihood blurring"
type = "int"
default = 21
advanced = true
condition = { arg="lblur", value="true" }

[tabs.reconstruct.lblur_range]
name = "LogP range for blurring"
description = "LogP range used during likelihood blurring"
type = "int"
default = 20
advanced = true
condition = { arg="lblur", value="true" }

[tabs.reconstruct.lblur_start]
name = "Starting angle for blurring (degrees)"
description = "Starting angle used for blurring with respect to the optimal orientation in degrees"
type = "int"
default = -10
advanced = true
condition = { arg="lblur", value="true" }

[tabs.reconstruct.lblur_step]
name = "Angular sampling step (degrees)"
description = "Step size of angular sampling to use for blurring"
type = "int"
default = 1
advanced = true
condition = { arg="lblur", value="true" }

[tabs.reconstruct.agroups]
name = "Angular groups"
description = "Number of angular groups used for particle sorting by score value"
type = "int"
default = 1
advanced = true

[tabs.reconstruct.dgroups]
name = "Defocus groups"
description = "Number of defocus groups used for particle sorting by score value"
type = "int"
default = 1
advanced = true

[tabs.reconstruct.num_frames]
name = "Frames per movie"
description = "Number of frames per movie (per frame reconstruction only)"
type = "int"
default = 1
advanced = true

[tabs.reconstruct.per_particle_splitting]
name = "Per-particle FSC splitting"
description = "Force frames/tilts from each particle to be in same half map"
type = "bool"
default = true
advanced = true

[tabs.reconstruct.radrec]
name = "Reconstruction radius (A)"
description = "Limit radius of reconstruction (0=no limit)"
type = "float"
default = 0.0
advanced = true

[tabs.reconstruct.saveplots]
name = "Produce angular plots"
description = "Produce plots to visualize angular trajectories on unit sphere"
type = "bool"
default = false
advanced = true
hidden = true

[tabs.reconstruct.shapr]
name = "Shape scores"
description = "Advanced options for shaping scores before reconstruction"
type = "enum"
enum = { none="none", -reverse="reverse (lowest score become highest and viceversa)", -consistency="consistency (select particles with similar angles/shifts)" }
default = "none"
advanced = true

[tabs.reconstruct.scratch_copy_stack]
name = "threc"
description = "Phase residual threshold used for reconstruction"
type = "bool"
default = false
hidden = true

[tabs.reconstruct.threc]
name = "threc"
description = "Phase residual threshold used for reconstruction"
type = "float"
default = 0.0
hidden = true

[tabs.reconstruct.weights]
name = "Use weights"
description = "Use multiple weights"
type = "bool"
default = false
hidden = true

# Post-processing and denoising Options

[tabs.denoise]
_name = "Denoising"
_description = "Denoise reconstruction after each iteration"

[tabs.denoise.enable]
name = "Denoise reconstruction"
description = "Apply denoising after reconstruction"
type = "bool"
default = false

[tabs.denoise.method]
name = "Method"
description = "Method to use for denosing"
type = "enum"
enum = { bm4d="bm4d (block matching 4d)", nad="imod-nad (anisotropic difussion)" }
default = "bm4d"
condition = { arg="enable", value="true" }

[tabs.denoise.iters]
name = "Number of iterations"
description = "More iterations for more aggressive denoising"
type = "int"
default = 1
condition = { arg="method", value="nad" }

[tabs.denoise.nsearch]
name = "Neighborhood size"
description = "Size of area to search for similar patches (voxels)"
type = "int"
default = 11
hidden = true
condition = { arg="method", value="nad" }

[tabs.denoise.patch_size]
name = "Patch size"
description = "Patch size used for denoising (must be power of 2, voxels)"
type = "int"
default = 4
hidden = true
condition = { arg="method", value="nad" }

[tabs.denoise.sigma]
name = "Noise sigma"
description = "Noise sigma estimation, use higher values for more aggresive denoising"
type = "float"
default = 0.25
condition = { arg="method", value="bm4d" }

# Dose-Weighting Options

[tabs.dose_weighting]
_name = "Exposure weighting"
_description = "Control dose weighting"
_hidden = [ "spr_map_clean", "tomo_map_clean" ]

[tabs.dose_weighting.enable]
name = "Dose weighting"
description = "Perform data-driven dose weighting during reconstruction"
type = "bool"
default = false

[tabs.dose_weighting.global]
name = "Global weights"
description = "Compute global weights using the entire dataset for dose weighting (rather than local weights inferred from a bundle)"
type = "bool"
default = false
condition = { arg="enable", value="true" }

[tabs.dose_weighting.weights]
name = "External weights"
description = "External weights for dose weighting (rather than weights inferred from current parfile)"
type = "path"
path = { type="files" }
condition = { arg="enable", value="true" }

[tabs.dose_weighting.fraction]
name = "Frame weight fraction"
description = "Using larger values contributes fewer frames to high-resolution, and viceversa"
type = "int"
default = 4
condition = { arg="enable", value="true" }

[tabs.dose_weighting.transition]
name = "Frame weight transition"
description = "Weight transition (for per-frame reconstruction)"
type = "float"
default = 0.75
condition = { arg="enable", value="true" }

[tabs.dose_weighting.multiply]
name = "Multiply by number of frames"
description = "Multiply dose weighting parameters by the number of frames"
type = "bool"
default = true
condition = { arg="enable", value="true" }

# Atomic-Model Fit Options

[tabs.model]
_name = "Model fitting"
_description = "Fit a set of pdb coordinates after each reinement iteration"

[tabs.model.fit]
name = "Model"
description = "Model to use for evaluating fit (pdb format)"
type = "path"
path = { type="files" }

[tabs.model.clip]
name = "Clip"
description = "Clip model to this size for fit evaluation (pixels)"
type = "int"
default = 384

[tabs.model.flip]
name = "Flip"
description = "Flip model handedness before fit evaluation"
type = "bool"
default = false

[tabs.model.pixel]
name = "Pixel size (A)"
description = "Unbinned calibrated pixel size"
type = "float"
default = 0.0

[tabs.model.res]
name = "Max resolution (A)"
description = "Filter model to this resolution before evaluating the fit"
type = "float"
default = 3.0

[tabs.model.scale]
name = "Scale"
description = "Scale reconstruction by this factor before fit evaluation"
type = "int"
default = 1

# Constrained refinement

[tabs.csp]
_name = "Constrained refinement"
_description = "Settings for constrained single particle (CSP) refinement"
_hidden = [ "spr_map_clean", "tomo_map_clean" ]

[tabs.csp.UseImagesForRefinementMin]
name = "First exposure for refinement"
description = "First exposure index to use during refinement"
type = "int"
default = 0
hidden = [ 'spr_coarse_refine', 'spr_map_clean' ]

[tabs.csp.UseImagesForRefinementMax]
name = "Last exposure for refinement"
description = "Last exposure index to use during refinement"
type = "int"
default = 20
hidden = [ 'spr_coarse_refine', 'spr_map_clean' ]

[tabs.csp.Grid_spr]
name = "Number of regions"
description = "Number of regions in x, y (default is global refinement with x=1, y=1)"
type = "str"
default = "1,1"
hidden = [ 'tomo_initial_refine', "tomo_reference_refine", 'tomo_coarse_refine', 'tomo_flexible_refine', "tomo_flexible_refine_after", 'tomo_map_clean' ]

[tabs.csp.Grid]
name = "Number of regions"
description = "Number of regions in x, y, z (default is global refinement with x=1, y=1, z=1)"
type = "str"
default = "1,1,1"
hidden = [ 'spr_coarse_refine', 'spr_flexible_refine', 'spr_map_clean' ]

[tabs.csp.RefineProjectionCutoff]
name = "Min number of projections for refinement"
description = "Only refine particles that have at least this number of projections (0=all)"
type = "int"
default = 0
hidden = [ 'spr_coarse_refine', 'spr_flexible_refine', 'spr_map_clean' ]

[tabs.csp.NumberOfRandomIterations]
name = "Optimizer exhaustive search points"
description = "Number of points to evaluate during reference-based exhaustive search"
type = "int"
default = 0
hidden = [ 'spr_coarse_refine', 'spr_flexible_refine', 'tomo_flexible_refine', "tomo_flexible_refine_after", 'spr_map_clean' ]
copyToNewBlock = false

[tabs.csp.OptimizerMaxIter]
name = "Optimizer number of iterations"
description = "Max number of iterations to use during Powell optimization"
type = "int"
default = 5
advanced = true

[tabs.csp.OptimizerStepLength]
name = "Optimizer max step length"
description = "Max step length to use during Powell optimization"
type = "float"
default = 20.0
advanced = true

[tabs.csp.OptimizerStepTolerance]
name = "Optimizer step tolerance"
description = "Step tolerance to use during Powell optimization"
type = "float"
default = 0.01
advanced = true

[tabs.csp.OptimizerValueTolerance]
name = "Optimizer tolerance value"
description = "Tolerance value to use during Powell optimization"
type = "float"
default = 0.0001
advanced = true

[tabs.csp.abinitio]
name = "Ab-initio refinement"
description = "De-novo 3D reconstruction"
type = "bool"
default = false
copyToNewBlock = false
hidden = [ "spr_coarse_refine", "spr_fine_refine", "spr_flexible_refine", "tomo_flexible_refine", "spr_map_clean", "tomo_map_clean" ]

[tabs.csp.InitialResolution]
name = "Starting resolution limit (A)"
description = "Initial resolution used for ab-initio refinement"
type = "float"
default = 60.0
hidden = [ "spr_coarse_refine", "spr_fine_refine", "spr_flexible_refine", "tomo_flexible_refine", "tomo_flexible_refine_after" ]
condition = { arg="abinitio", value="true" }

[tabs.csp.ResolutionLimit]
name = "Final resolution limit (A)"
description = "Highest resolution used for ab-initio refinement"
type = "float"
default = 16.0
hidden = [ "spr_coarse_refine", "spr_fine_refine", "spr_flexible_refine", "tomo_flexible_refine", "tomo_flexible_refine_after" ]
condition = { arg="abinitio", value="true" }

[tabs.csp.InitialSkip]
name = "Skip initialization"
description = "Skip initialization during ab-initio refinement"
type = "bool"
default = false
copyToNewBlock = false
hidden = true
condition = { arg="abinitio", value="true" }

[tabs.csp.RandomSkipRatio]
name = "Skip ratio for csp refinement"
description = "Ratio to skip for csp random refinement"
type = "float"
default = 0.0
copyToNewBlock = false
hidden = true
condition = { arg="abinitio", value="true" }

[tabs.csp.RandomParticles]
name = "Particle batch size (per tilt-series)"
description = "Particles per tilt-series in each batch to use for ab-initio refinement"
type = "int"
default = 10
copyToNewBlock = false
hidden = [ "spr_coarse_refine", "spr_fine_refine", "spr_flexible_refine", "tomo_flexible_refine", "tomo_flexible_refine_after" ]
condition = { arg="abinitio", value="true" }

[tabs.csp.GridSearch]
name = "Grid search"
description = "Use uniform grid search instead of random search"
type = "bool"
default = false
hidden = [ "spr_coarse_refine", "spr_fine_refine", "spr_flexible_refine", "tomo_flexible_refine", "tomo_flexible_refine_after" ]
copyToNewBlock = false
condition = { arg="abinitio", value="true" }

[tabs.csp.AngleStep]
name = "Particle rotation step (degrees)"
description = "Step size to use for rotational search"
type = "float"
default = 20
hidden = [ "spr_coarse_refine", "spr_fine_refine", "spr_flexible_refine", "tomo_flexible_refine", "tomo_flexible_refine_after" ]
copyToNewBlock = false
condition = { arg="GridSearch", value="true" }

[tabs.csp.ShiftStep]
name = "Particle translation step (A)"
description = "Step size to use for translational search"
type = "float"
default = 6
hidden = [ "spr_coarse_refine", "spr_fine_refine", "spr_flexible_refine", "tomo_flexible_refine", "tomo_flexible_refine_after" ]
copyToNewBlock = false
condition = { arg="GridSearch", value="true" }

[tabs.csp.automask]
name = "Auto masking"
description = "Use auto masking during ab-initio refinement"
type = "bool"
default = false
hidden = [ "spr_map_clean", "tomo_map_clean" ]
condition = { arg="abinitio", value="true" }

[tabs.csp.refine_micrographs]
name = "Refine tilt-geometry"
description = "Optimize tilt-axis orientation and position for each tilt-image"
type = "bool"
default = false
hidden = [ 'spr_coarse_refine', 'spr_flexible_refine', 'spr_map_clean' ]

[tabs.csp.ToleranceMicrographTiltAngles]
name = "Tilt-angle range (degrees)"
description = "Tolerance to use for micrograph tilt-angles"
type = "float"
default = 1.5
condition = { arg="refine_micrographs", value="true" }
hidden = [ 'spr_coarse_refine', 'spr_flexible_refine', 'spr_map_clean' ]

[tabs.csp.ToleranceMicrographTiltAxisAngles]
name = "Tilt-axis angle range (degrees)"
description = "Tolerance to use when refining tilt-axis angle"
type = "float"
default = 1.0
condition = { arg="refine_micrographs", value="true" }
hidden = [ 'spr_coarse_refine', 'spr_flexible_refine', 'spr_map_clean' ]

[tabs.csp.ToleranceMicrographShifts]
name = "Tilt-axis position range (A)"
description = "Tolerance to use when refining tilt-axis position"
type = "float"
default = 100.0
condition = { arg="refine_micrographs", value="true" }
hidden = [ 'spr_coarse_refine', 'spr_flexible_refine', 'spr_map_clean' ]

[tabs.csp.refine_particles]
name = "Refine particle alignments"
description = "Optimize sub-tomogram orientations and translations in 3D"
type = "bool"
default = false
hidden = [ 'spr_coarse_refine', 'spr_flexible_refine', 'spr_map_clean' ]

[tabs.csp.ToleranceParticlesPhi]
name = "Particle rotation Phi range (degrees)"
description = "Tolerance to use when refining Phi angle (in-plane rotation)"
type = "float"
default = 30.0
condition = { arg="refine_particles", value="true" }
hidden = [ 'spr_coarse_refine', 'spr_flexible_refine', 'spr_map_clean' ]

[tabs.csp.ToleranceParticlesPsi]
name = "Particle rotation Psi range (degrees)"
description = "Tolerance to use when refining Psi angle"
type = "float"
default = 30.0
condition = { arg="refine_particles", value="true" }
hidden = [ 'spr_coarse_refine', 'spr_flexible_refine', 'spr_map_clean' ]

[tabs.csp.ToleranceParticlesTheta]
name = "Particle rotation Theta range (degrees)"
description = "Tolerance to use when refining Theta angle"
type = "float"
default = 30.0
condition = { arg="refine_particles", value="true" }
hidden = [ 'spr_coarse_refine', 'spr_flexible_refine', 'spr_map_clean' ]

[tabs.csp.ToleranceParticlesShifts]
name = "Particle translation range (A)"
description = "Tolerance to use when refining particle translations"
type = "float"
default = 20.0
condition = { arg="refine_particles", value="true" }
hidden = [ 'spr_coarse_refine', 'spr_flexible_refine', 'spr_map_clean' ]

[tabs.csp.frame_refinement]
name = "Movie frame refinement"
description = "Optimize particle position across frames"
type = "bool"
default = false
hidden = [ 'spr_coarse_refine', 'tomo_initial_refine', "tomo_reference_refine", 'tomo_coarse_refine', 'spr_map_clean' ]

[tabs.csp.transreg]
name = "Regularize translations"
description = "Regularize translational parameters"
type = "bool"
default = false
condition = { arg="frame_refinement", value="true" }
hidden = [ 'spr_coarse_refine', 'tomo_initial_refine', "tomo_reference_refine", 'tomo_coarse_refine', 'spr_map_clean' ]

[tabs.csp.spatial_sigma]
name = "Spatial sigma (unbinned pixels/voxels)"
description = "Sigma to use for spatial regularization"
type = "float"
default = 500.0
condition = { arg="transreg", value="true" }
hidden = [ 'spr_coarse_refine', 'tomo_initial_refine', "tomo_reference_refine", 'tomo_coarse_refine', 'spr_map_clean' ]

[tabs.csp.time_sigma]
name = "Time sigma"
description = "Sigma to use for time regularization (number of frames)"
type = "int"
default = 21
condition = { arg="transreg", value="true" }
hidden = [ 'spr_coarse_refine', 'tomo_initial_refine', "tomo_reference_refine", 'tomo_coarse_refine', 'spr_map_clean' ]

[tabs.csp.transreg_method]
name = "Translation regularization method"
description = "Choice of translational regularization method"
type = "enum"
enum = { AB="Option 1", XD="Option 2", spline="Spline" }
default = "spline"
hidden = true

[tabs.csp.rotreg]
name = "Rotational regularization"
description = "Regularize rotational parameters"
type = "bool"
default = false
hidden = true

[tabs.csp.rotreg_method]
name = "Rotational regularization method"
description = "Choice of rotational regularization method"
type = "enum"
enum = { AB1="AB1", AB2="AB2", XD="XD" }
default = "AB2"
condition = { arg="frame_refinement", value="true" }
hidden = true

[tabs.csp.produce_running_average]
name = "Use running frame averages"
description = "This is currently only for testing classification"
type = "bool"
default = false
condition = { arg="frame_refinement", value="true" }
hidden = true

[tabs.csp.ctf_handedness]
name = "Invert CTF handedness"
description = "Use reverse CTF handedness"
type = "bool"
default = false
hidden = [ 'spr_coarse_refine', 'spr_flexible_refine', 'spr_map_clean', 'tomo_flexible_refine', "tomo_flexible_refine_after" ]

[tabs.csp.ctf_handedness_force]
name = "Force re-calculation of CTF handedness"
description = "Force CTF handedness re-calculation"
type = "bool"
default = false
hidden = true

[tabs.csp.refine_ctf]
name = "Refine CTF per-particle"
description = "Optimize defocus and astigmatism parameters per-tilt"
type = "bool"
default = false

[tabs.csp.ToleranceMicrographAstigmatism]
name = "Astigmatism range (degrees)"
description = "Tolerance to use for astigmatism refinement"
type = "float"
default = 90.0
condition = { arg="refine_ctf", value="true" }

[tabs.csp.ToleranceMicrographDefocus1]
name = "Defocus 1 range (A)"
description = "Tolerance to use for defocus 1 refinement"
type = "float"
default = 750.0
condition = { arg="refine_ctf", value="true" }

[tabs.csp.ToleranceMicrographDefocus2]
name = "Defocus 2 range (A)"
description = "Tolerance to use for defocus 2 refinement"
type = "float"
default = 750.0
condition = { arg="refine_ctf", value="true" }

[tabs.csp.thresh]
name = "Thresh option"
description = "CSP thresh option"
type = "float"
default = 0.0
hidden = true

[tabs.csp.stacks]
name = "Stacks option"
description = "CSP stacks option"
type = "bool"
default = false
hidden = true

[tabs.csp.parx_only]
name = "Parx only"
description = "Produce parx file only (legacy)"
type = "bool"
default = false
hidden = true

[tabs.csp.no_stacks]
name = "CSP"
description = "Using temporary stacks for CSP"
type = "bool"
default = false
hidden = true

[tabs.csp.DebugBasic]
name = "Basic debug"
description = "Output basic debug"
type = "bool"
default = true
hidden = true

[tabs.csp.DebugData]
name = "Data debug"
description = "Output debug data"
type = "bool"
default = false
hidden = true

[tabs.csp.DebugFull]
name = "Full debug"
description = "Output full debug info"
type = "bool"
default = false
hidden = true

[tabs.csp.DebugInfo]
name = "Info debug"
description = "Output debug info"
type = "bool"
default = false
hidden = true

[tabs.csp.DebugNone]
name = "None debug"
description = "Output none debug info"
type = "bool"
default = false
hidden = true

# Constrained movie refinement

[tabs.csp_tomo_movie]
_name = "Frame refinement"
_description = "Settings for constrained single particle (CSP) refinement"
_hidden = [ "spr_map_clean", "tomo_map_clean" ]

[tabs.csp_tomo_movie.parfile]
name = "Input parameter file (*.bz2)"
description = "Parameter file to initialize refinement"
type = "path"
path = { type="files" }
input = { type="parfile" }
copyToNewBlock = false
required = true

[tabs.csp_tomo_movie.resume]
name = "Resume refinement"
description = "Continue refinement from most recent iteration"
type = "bool"
default = true
copyToNewBlock = false

[tabs.csp_tomo_movie.first_iter]
name = "First iteration"
description = "Start refinement from this iteration"
type = "int"
default = 2
copyToNewBlock = false
condition = { arg="resume", value="false" }

[tabs.csp_tomo_movie.iter]
name = "Starting iteration"
description = "Start refinement from this iteration"
type = "int"
default = 2
hidden = true
copyToNewBlock = false

[tabs.csp_tomo_movie.maxiter]
name = "Last iteration"
description = "Number of last refinement iteration"
type = "int"
default = 2
copyToNewBlock = false

[tabs.csp_tomo_movie.transreg]
name = "Regularize translations"
description = "Regularize translational parameters"
type = "bool"
default = true

[tabs.csp_tomo_movie.spatial_sigma]
name = "Spatial sigma"
description = "Sigma to use for spatial regularization (pixels/voxels)"
type = "float"
default = 500.0

[tabs.csp_tomo_movie.time_sigma]
name = "Time sigma"
description = "Sigma to use for time regularization (number of frames)"
type = "int"
default = 21

# Constrained movie refinement after

[tabs.csp_tomo_movie_after]
_name = "Refinement"
_description = "Settings for constrained single particle (CSP) refinement"
_hidden = [ "spr_map_clean", "tomo_map_clean" ]

[tabs.csp_tomo_movie_after.parfile]
name = "Input parameter file (*.bz2)"
description = "Parameter file to initialize refinement"
type = "path"
path = { type="files" }
input = { type="parfile" }
copyToNewBlock = false
required = true

[tabs.csp_tomo_movie_after.resume]
name = "Resume refinement"
description = "Continue refinement from most recent iteration"
type = "bool"
default = true
copyToNewBlock = false

[tabs.csp_tomo_movie_after.first_iter]
name = "First iteration"
description = "Start refinement from this iteration"
type = "int"
default = 2
copyToNewBlock = false
condition = { arg="resume", value="false" }

[tabs.csp_tomo_movie_after.iter]
name = "Starting iteration"
description = "Start refinement from this iteration"
type = "int"
default = 2
hidden = true
copyToNewBlock = false

[tabs.csp_tomo_movie_after.maxiter]
name = "Last iteration"
description = "Number of last refinement iteration"
type = "int"
default = 2
copyToNewBlock = false

[tabs.csp_tomo_movie_after.refine_micrographs]
name = "Refine tilt-geometry"
description = "Optimize tilt-axis orientation and position for each tilt-image"
type = "bool"
default = false

[tabs.csp_tomo_movie_after.ToleranceMicrographTiltAngles]
name = "Tilt-angle range (degrees)"
description = "Tolerance to use when refining tilt-angles"
type = "float"
default = 1.5
condition = { arg="refine_micrographs", value=true }

[tabs.csp_tomo_movie_after.ToleranceMicrographTiltAxisAngles]
name = "Tilt-axis angle range (degrees)"
description = "Tolerance to use when refining tilt-axis angle"
type = "float"
default = 1.0
condition = { arg="refine_micrographs", value=true }

[tabs.csp_tomo_movie_after.ToleranceMicrographShifts]
name = "Tilt-axis position range (A)"
description = "Tolerance to use when refining tilt-axis position"
type = "float"
default = 100.0
condition = { arg="refine_micrographs", value=true }

[tabs.csp_tomo_movie_after.refine_particles]
name = "Refine particle alignments"
description = "Optimize sub-tomogram orientations and translations in 3D"
type = "bool"
default = false

[tabs.csp_tomo_movie_after.ToleranceParticlesPhi]
name = "Particle rotation Phi range (degrees)"
description = "Tolerance to use when refining Phi angle (in-plane rotation)"
type = "float"
default = 30.0
condition = { arg="refine_particles", value=true }

[tabs.csp_tomo_movie_after.ToleranceParticlesPsi]
name = "Particle rotation Psi range (degrees)"
description = "Tolerance to use when refining Psi angle"
type = "float"
default = 30.0
condition = { arg="refine_particles", value=true }

[tabs.csp_tomo_movie_after.ToleranceParticlesTheta]
name = "Particle rotation Theta range (degrees)"
description = "Tolerance to use when refining Theta angle"
type = "float"
default = 30.0
condition = { arg="refine_particles", value=true }

[tabs.csp_tomo_movie_after.ToleranceParticlesShifts]
name = "Particle translation range (A)"
description = "Tolerance to use when refining particle translations"
type = "float"
default = 20.0
condition = { arg="refine_particles", value=true }

[tabs.csp_tomo_movie_after.NumberOfRandomIterations]
name = "Optimizer exhaustive search points"
description = "Number of radnom points to evaluate during search"
type = "int"
default = 0
copyToNewBlock = false
advanced = true

[tabs.csp_tomo_movie_after.OptimizerMaxIter]
name = "Optimizer number of iterations"
description = "Max number of iterations to use during Powell optimization"
type = "int"
default = 5
advanced = true

[tabs.csp_tomo_movie_after.OptimizerStepLength]
name = "Optimizer max step length"
description = "Max step length to use during Powell optimization"
type = "float"
default = 20.0
advanced = true

[tabs.csp_tomo_movie_after.OptimizerStepTolerance]
name = "Optimizer step tolerance"
description = "Step tolerance to use during Powell optimization"
type = "float"
default = 0.01
advanced = true

[tabs.csp_tomo_movie_after.OptimizerValueTolerance]
name = "Optimizer tolerance value"
description = "Tolerance value to use during Powell optimization"
type = "float"
default = 0.0001
advanced = true

# Tomo constrained refinement (initital)

[tabs.csp_tomo_init]
_name = "Ab-initio refinement"
_description = "Settings for constrained single particle (CSP) refinement"
_hidden = [ "spr_map_clean", "tomo_map_clean" ]

[tabs.csp_tomo_init.resume]
name = "Resume refinement"
description = "Continue refinement from most recent iteration"
type = "bool"
default = true
copyToNewBlock = false

[tabs.csp_tomo_init.first_iter]
name = "First iteration"
description = "Start refinement from this iteration"
type = "int"
default = 2
copyToNewBlock = false
condition = { arg="resume", value="false" }

[tabs.csp_tomo_init.maxiter]
name = "Last iteration"
description = "Number of last refinement iteration"
type = "int"
default = 20
copyToNewBlock = false

[tabs.csp_tomo_init.InitialResolution]
name = "Starting Max resolution (A)"
description = "Initial resolution used for ab-initio refinement"
type = "float"
default = 60.0

[tabs.csp_tomo_init.ResolutionLimit]
name = "Final Max resolution (A)"
description = "Highest resolution used for ab-initio refinement"
type = "float"
default = 16.0

[tabs.csp_tomo_init.InitialSkip]
name = "Skip initialization"
description = "Skip initialization during ab-initio refinement"
type = "bool"
default = false
copyToNewBlock = false
hidden = true

[tabs.csp_tomo_init.RandomSkipRatio]
name = "Skip ratio for csp refinement"
description = "Ratio to skip for csp random refinement"
type = "float"
default = 0.0
copyToNewBlock = false
hidden = true

[tabs.csp_tomo_init.RandomParticles]
name = "Particle batch size (per tilt-series)"
description = "Particles per tilt-series in each batch to use for ab-initio refinement"
type = "int"
default = 10
copyToNewBlock = false

[tabs.csp_tomo_init.GridSearch]
name = "Grid search"
description = "Use uniform grid search instead of random search"
type = "bool"
default = false
copyToNewBlock = false

[tabs.csp_tomo_init.ToleranceParticlesPhi]
name = "Particle rotation Phi range (degrees)"
description = "Tolerance to use when refining Phi angle (in-plane rotation)"
type = "float"
default = 30.0

[tabs.csp_tomo_init.ToleranceParticlesPsi]
name = "Particle rotation Psi range (degrees)"
description = "Tolerance to use when refining Psi angle"
type = "float"
default = 30.0

[tabs.csp_tomo_init.ToleranceParticlesTheta]
name = "Particle rotation Theta range (degrees)"
description = "Tolerance to use when refining Theta angle"
type = "float"
default = 30.0

[tabs.csp_tomo_init.AngleStep]
name = "Particle rotation step (degrees)"
description = "Angular step to use for rotational search"
type = "float"
default = 10.0
copyToNewBlock = false

[tabs.csp_tomo_init.ToleranceParticlesShifts]
name = "Particle translation range (A)"
description = "Tolerance to use when refining particle translations"
type = "float"
default = 20.0

[tabs.csp_tomo_init.ShiftStep]
name = "Particle translation step (A)"
description = "Step size to use for translational search"
type = "float"
default = 5.0
copyToNewBlock = false

[tabs.csp_tomo_init.num]
name = "Number of classes"
description = "Number of classes for ab-initio reconstruction"
type = "int"
default = 5

[tabs.csp_tomo_init.rhcls]
name = "Max resolution for classification (A)"
description = "Highest resolution used for classification during ab-initio refinement"
type = "float"
default = 12.0

[tabs.csp_tomo_init.OptimizerMaxIter]
name = "Optimizer number of iterations"
description = "Max number of iterations to use during Powell optimization"
type = "int"
default = 5
advanced = true

[tabs.csp_tomo_init.OptimizerStepLength]
name = "Optimizer max step length"
description = "Max step length to use during Powell optimization"
type = "float"
default = 20.0
advanced = true

[tabs.csp_tomo_init.OptimizerStepTolerance]
name = "Optimizer step tolerance"
description = "Step tolerance to use during Powell optimization"
type = "float"
default = 0.01
advanced = true

[tabs.csp_tomo_init.OptimizerValueTolerance]
name = "Optimizer tolerance value"
description = "Tolerance value to use during Powell optimization"
type = "float"
default = 0.0001
advanced = true

# Tomo constrained refinement (reference-free)

[tabs.csp_tomo_free]
_name = "Alignments"
_description = "Settings for constrained single particle (CSP) refinement"
_hidden = [ "spr_map_clean", "tomo_map_clean" ]

[tabs.csp_tomo_free.format]
name = "Import from"
description = "Import external alignments"
type = "enum"
enum = { none="none", txt="3DAVG (*.txt)", bz2="nextPYP (*.bz2)" }
default = "none"

[tabs.csp_tomo_free.parfile_tomo]
name = "Particle metadata (*.txt)"
description = "Parameter file containing initial poses"
type = "path"
path = { type="files" }
input = { type="txtfile" }
condition = { arg="format", value=[ "txt" ] }
copyToNewBlock = false

[tabs.csp_tomo_free.parfile]
name = "Input parameter file (*.bz2)"
description = "Parameter file to initialize refinement"
type = "path"
path = { type="files" }
input = { type="parfile" }
copyToNewBlock = false
condition = { arg="format", value=[ "bz2" ] }

# Tomo constrained refinement (reference-based)

[tabs.csp_tomo_reference]
_name = "Reference-based refinement"
_description = "Settings for constrained single particle (CSP) refinement"
_hidden = [ "spr_map_clean", "tomo_map_clean" ]

[tabs.csp_tomo_reference.model]
name = "Initial model (*.mrc)"
description = "Initial model used for refinement"
type = "path"
path = { type="files" }
input = { type="initialModel" }
copyToNewBlock = false
required = true

[tabs.csp_tomo_reference.ToleranceParticlesPhi]
name = "Particle rotation Phi range (degrees)"
description = "Tolerance to use when refining Phi angle (in-plane rotation)"
type = "float"
default = 30.0

[tabs.csp_tomo_reference.ToleranceParticlesPsi]
name = "Particle rotation Psi range (degrees)"
description = "Tolerance to use when refining Psi angle"
type = "float"
default = 30.0

[tabs.csp_tomo_reference.ToleranceParticlesTheta]
name = "Particle rotation Theta range (degrees)"
description = "Tolerance to use when refining Theta angle"
type = "float"
default = 30.0

[tabs.csp_tomo_reference.AngleStep]
name = "Particle rotation step (degrees)"
description = "Angular step to use for rotational search"
type = "float"
default = 10.0
copyToNewBlock = false

[tabs.csp_tomo_reference.ToleranceParticlesShifts]
name = "Particle translation range (A)"
description = "Tolerance to use when refining particle translations"
type = "float"
default = 20.0

[tabs.csp_tomo_reference.ShiftStep]
name = "Particle translation step (A)"
description = "Step size to use for translational search"
type = "float"
default = 5.0
copyToNewBlock = false

[tabs.csp_tomo_reference.OptimizerMaxIter]
name = "Optimizer number of iterations"
description = "Max number of iterations to use during Powell optimization"
type = "int"
default = 5
advanced = true

[tabs.csp_tomo_reference.OptimizerStepLength]
name = "Optimizer max step length"
description = "Max step length to use during Powell optimization"
type = "float"
default = 20.0
advanced = true

[tabs.csp_tomo_reference.OptimizerStepTolerance]
name = "Optimizer step tolerance"
description = "Step tolerance to use during Powell optimization"
type = "float"
default = 0.01
advanced = true

[tabs.csp_tomo_reference.OptimizerValueTolerance]
name = "Optimizer tolerance value"
description = "Tolerance value to use during Powell optimization"
type = "float"
default = 0.0001
advanced = true

# Tomo constrained refinement

[tabs.csp_tomo_coarse]
_name = "Refinement"
_description = "Settings for constrained single particle (CSP) refinement"

[tabs.csp_tomo_coarse.parfile]
name = "Input parameter file (*.bz2)"
description = "Parameter file to initialize refinement"
type = "path"
path = { type="files" }
input = { type="parfile" }
copyToNewBlock = false
required = true

[tabs.csp_tomo_coarse.resume]
name = "Resume refinement"
description = "Continue refinement from most recent iteration"
type = "bool"
default = true
copyToNewBlock = false

[tabs.csp_tomo_coarse.first_iter]
name = "First iteration"
description = "Start refinement from this iteration"
type = "int"
default = 2
copyToNewBlock = false
condition = { arg="resume", value="false" }

[tabs.csp_tomo_coarse.iter]
name = "Starting iteration"
description = "Start refinement from this iteration"
type = "int"
default = 2
hidden = true
copyToNewBlock = false

[tabs.csp_tomo_coarse.maxiter]
name = "Last iteration"
description = "Number of last refinement iteration"
type = "int"
default = 2
copyToNewBlock = false

[tabs.csp_tomo_coarse.refine_micrographs]
name = "Refine tilt-geometry"
description = "Optimize tilt-axis orientation and position for each tilt-image"
type = "bool"
default = false

[tabs.csp_tomo_coarse.ToleranceMicrographTiltAngles]
name = "Tilt-angle range (degrees)"
description = "Tolerance to use when refining tilt-angles"
type = "float"
default = 1.5
condition = { arg="refine_micrographs", value=true }

[tabs.csp_tomo_coarse.ToleranceMicrographTiltAxisAngles]
name = "Tilt-axis angle range (degrees)"
description = "Tolerance to use when refining tilt-axis angle"
type = "float"
default = 1.0
condition = { arg="refine_micrographs", value=true }

[tabs.csp_tomo_coarse.ToleranceMicrographShifts]
name = "Tilt-axis position range (A)"
description = "Tolerance to use when refining tilt-axis position"
type = "float"
default = 100.0
condition = { arg="refine_micrographs", value=true }

[tabs.csp_tomo_coarse.refine_particles]
name = "Refine particle alignments"
description = "Optimize sub-tomogram orientations and translations in 3D"
type = "bool"
default = false

[tabs.csp_tomo_coarse.ToleranceParticlesPhi]
name = "Particle rotation Phi range (degrees)"
description = "Tolerance to use when refining Phi angle (in-plane rotation)"
type = "float"
default = 30.0
condition = { arg="refine_particles", value=true }

[tabs.csp_tomo_coarse.ToleranceParticlesPsi]
name = "Particle rotation Psi range (degrees)"
description = "Tolerance to use when refining Psi angle"
type = "float"
default = 30.0
condition = { arg="refine_particles", value=true }

[tabs.csp_tomo_coarse.ToleranceParticlesTheta]
name = "Particle rotation Theta range (degrees)"
description = "Tolerance to use when refining Theta angle"
type = "float"
default = 30.0
condition = { arg="refine_particles", value=true }

[tabs.csp_tomo_coarse.ToleranceParticlesShifts]
name = "Particle translation range (A)"
description = "Tolerance to use when refining particle translations"
type = "float"
default = 20.0
condition = { arg="refine_particles", value=true }

[tabs.csp_tomo_coarse.refine_ctf]
name = "Refine CTF per-particle"
description = "Optimize defocus and astigmatism parameters per-tilt"
type = "bool"
default = false

[tabs.csp_tomo_coarse.ToleranceMicrographAstigmatism]
name = "Astigmatism range (degrees)"
description = "Tolerance to use for astigmatism refinement"
type = "float"
default = 90.0
condition = { arg="refine_ctf", value=true }

[tabs.csp_tomo_coarse.ToleranceMicrographDefocus1]
name = "Defocus 1 range (A)"
description = "Tolerance to use for defocus 1 refinement"
type = "float"
default = 750.0
condition = { arg="refine_ctf", value=true }

[tabs.csp_tomo_coarse.ToleranceMicrographDefocus2]
name = "Defocus 2 range (A)"
description = "Tolerance to use for defocus 2 refinement"
type = "float"
default = 750.0
condition = { arg="refine_ctf", value=true }

[tabs.csp_tomo_coarse.Grid]
name = "Number of regions"
description = "Sub-divide tomograms into regions along x,y,z (1,1,1=single region)"
type = "str"
default = "1,1,1"

[tabs.csp_tomo_coarse.NumberOfRandomIterations]
name = "Optimizer exhaustive search points"
description = "Number of random points to evaluate"
type = "int"
default = 0
copyToNewBlock = false
advanced = true

[tabs.csp_tomo_coarse.OptimizerMaxIter]
name = "Optimizer number of iterations"
description = "Max number of iterations to use during Powell optimization"
type = "int"
default = 5
advanced = true

[tabs.csp_tomo_coarse.OptimizerStepLength]
name = "Optimizer max step length"
description = "Max step length to use during Powell optimization"
type = "float"
default = 20.0
advanced = true

[tabs.csp_tomo_coarse.OptimizerStepTolerance]
name = "Optimizer step tolerance"
description = "Step tolerance to use during Powell optimization"
type = "float"
default = 0.01
advanced = true

[tabs.csp_tomo_coarse.OptimizerValueTolerance]
name = "Optimizer tolerance value"
description = "Tolerance value to use during Powell optimization"
type = "float"
default = 0.0001
advanced = true

# Tomo constrained refinement

[tabs.csp_tomo_classification]
_name = "Classification"
_description = "Settings for constrained single particle (CSP) refinement"

[tabs.csp_tomo_classification.parfile]
name = "Input parameter file (*.bz2)"
description = "Parameter file to initialize refinement"
type = "path"
path = { type="files" }
input = { type="parfile" }
copyToNewBlock = false
required = true

[tabs.csp_tomo_classification.resume]
name = "Resume refinement"
description = "Continue refinement from most recent iteration"
type = "bool"
default = true
copyToNewBlock = false

[tabs.csp_tomo_classification.first_iter]
name = "First iteration"
description = "Start refinement from this iteration"
type = "int"
default = 2
copyToNewBlock = false
condition = { arg="resume", value="false" }

[tabs.csp_tomo_classification.iter]
name = "Starting iteration"
description = "Start refinement from this iteration"
type = "int"
default = 2
hidden = true
copyToNewBlock = false

[tabs.csp_tomo_classification.maxiter]
name = "Last iteration"
description = "Number of last refinement iteration"
type = "int"
default = 2
copyToNewBlock = false

[tabs.csp_tomo_classification.num]
name = "Number of classes"
description = "Number of classes to use during classification"
type = "int"
default = 1

[tabs.csp_tomo_classification.rhcls]
name = "Max resolution (A)"
description = "Highest resolution used for classification"
type = "float"
default = 8.0

[tabs.csp_tomo_classification.force_init]
name = "Force initialization"
description = "Force class initialization"
type = "bool"
default = false
hidden = true

[tabs.csp_tomo_classification.bin]
name = "Binning"
description = "Additional binning used for classification"
type = "int"
default = 2
hidden = true

[tabs.csp_tomo_classification.refineeulers]
name = "Angle refinement interval"
description = "Refine Euler angles every this many iterations"
type = "int"
default = 3
hidden = true

[tabs.csp_tomo_classification.refineshifts]
name = "Translation refinement interval"
description = "Refine translations every this many iterations"
type = "int"
default = 2
hidden = true

[tabs.csp_tomo_classification.focusmask]
name = "2D mask for focused classification (A)"
description = "(X,Y,Z,R): spherical mask of radius R centered at (X,Y,Z)"
type = "str"
default = "0,0,0,0"

[tabs.csp_tomo_classification.refine_particles]
name = "Refine particle alignments"
description = "Refine particle alignments during refinement"
type = "bool"
default = false

[tabs.csp_tomo_classification.ToleranceParticlesPhi]
name = "Particle rotation Phi range (degrees)"
description = "Tolerance to use when refining Phi angle (in-plane rotation)"
type = "float"
default = 30.0
condition = { arg="refine_particles", value=true }

[tabs.csp_tomo_classification.ToleranceParticlesPsi]
name = "Particle rotation Psi range (degrees)"
description = "Tolerance to use when refining Psi angle"
type = "float"
default = 30.0
condition = { arg="refine_particles", value=true }

[tabs.csp_tomo_classification.ToleranceParticlesTheta]
name = "Particle rotation Theta range (degrees)"
description = "Tolerance to use when refining Theta angle"
type = "float"
default = 30.0
condition = { arg="refine_particles", value=true }

[tabs.csp_tomo_classification.ToleranceParticlesShifts]
name = "Particle translation range (A)"
description = "Tolerance to use when refining particle translations"
type = "float"
default = 20.0
condition = { arg="refine_particles", value=true }

[tabs.csp_tomo_classification.NumberOfRandomIterations]
name = "Optimizer exhaustive search points"
description = "Number of random points to evaluate during search"
type = "int"
default = 0
copyToNewBlock = false
condition = { arg="refine_particles", value=true }
advanced = true

[tabs.csp_tomo_classification.OptimizerMaxIter]
name = "Optimizer number of iterations"
description = "Max number of iterations to use during Powell optimization"
type = "int"
default = 5
advanced = true
condition = { arg="refine_particles", value=true }

[tabs.csp_tomo_classification.OptimizerStepLength]
name = "Optimizer max step length"
description = "Max step length to use during Powell optimization"
type = "float"
default = 20.0
advanced = true
condition = { arg="refine_particles", value=true }

[tabs.csp_tomo_classification.OptimizerStepTolerance]
name = "Optimizer step tolerance"
description = "Step tolerance to use during Powell optimization"
type = "float"
default = 0.01
advanced = true
condition = { arg="refine_particles", value=true }

[tabs.csp_tomo_classification.OptimizerValueTolerance]
name = "Optimizer tolerance value"
description = "Tolerance value to use during Powell optimization"
type = "float"
default = 0.0001
advanced = true
condition = { arg="refine_particles", value=true }

# heterogeneity analysis with ML
[tabs.heterogeneity]
_name = "Continuous heterogeneity"
_description = "Continuous heterogeneity analysis"
_hidden = [ "spr_map_clean", "tomo_map_clean" ]

[tabs.heterogeneity.input_star]
name = "Input file"
description = "Star file with particle alignments and metadata"
type = "path"
path = { type="files" }
input = { type="starfile" }
required = false

[tabs.heterogeneity.method]
name = "Method"
description = "Select method to use for heterogeneity analysis"
type = "enum"
enum = {cryoDRGN="cryoDRGN", tomoDRGN="tomoDRGN"}
default = "tomoDRGN"

[tabs.heterogeneity.cryodrgn_downsample_size]
name = "Downsample boxsize"
description = "Downsampled particle boxsize for training"
type = "float"
default = 128.0
condition = { arg="method", value="cryoDRGN" }

[tabs.heterogeneity.cryodrgn_train_zdim]
name = "ZDIM"
description = "Dimension of latent variable"
type = "int"
default = 8
condition = { arg="method", value="cryoDRGN" }

[tabs.heterogeneity.cryodrgn_train_weight]
name = "Trained model"
description = "Initialize training from a checkpoint"
type = "path"
path = { type="files" }
required = false
condition = { arg="method", value="cryoDRGN" }

[tabs.heterogeneity.cryodrgn_train_checkpoint]
name = "Checkpoint interval"
description = "Checkpointing interval in N_EPOCHS"
type = "int"
default = 1
condition = { arg="method", value="cryoDRGN" }

[tabs.heterogeneity.cryodrgn_train_log_interval]
name = "Log interval"
description = "Logging interval in N_IMGS"
type = "int"
default = 1000
condition = { arg="method", value="cryoDRGN" }

[tabs.heterogeneity.cryodrgn_train_seed]
name = "Random seed"
description = "Random seed for training"
type = "int"
advanced = true
condition = { arg="method", value="cryoDRGN" }

[tabs.heterogeneity.cryodrgn_data_ind]
name = "Filter index"
description = "Filter particle stack by these indices, (pkl format)"
type = "path"
path = { type="files" }
required = false
advanced = true
condition = { arg="method", value="cryoDRGN" }

[tabs.heterogeneity.cryodrgn_data_invert]
name = "Invert data sign"
description = "Invert data sign or not"
type = "bool"
default = false
advanced = true
condition = { arg="method", value="cryoDRGN" }

[tabs.heterogeneity.cryodrgn_data_windowing]
name = "Use masking"
description = "Real space windowing of dataset"
type = "bool"
default = false
condition = { arg="method", value="cryoDRGN" }

[tabs.heterogeneity.cryodrgn_data_window_r]
name = "Radius"
description = "Windowing radius"
type = "float"
default = 0.85
condition = { arg="cryodrgn_data_windowing", value="true" }

[tabs.heterogeneity.cryodrgn_data_dir]
name = "Input data directory"
description = "Path prefix to particle stack if loading relative paths from a .star or .cs file"
type = "path"
path = { type="folders" }
required = false
condition = { arg="method", value="cryoDRGN" }

[tabs.heterogeneity.cryodrgn_data_lazy]
name = "Lazy loading"
description = "Lazy loading if full dataset is too large to fit in memory"
type = "bool"
default = false
condition = { arg="method", value="cryoDRGN" }

[tabs.heterogeneity.cryodrgn_data_shufflersize]
name = "Shuffler size"
description = "If non-zero, will use a data shuffler for faster lazy data loading"
type = "int"
default = 0
advanced = true
condition = { arg="method", value="cryoDRGN" }

# [tabs.heterogeneity.cryodrgn_data_tilt]
# name = "Tilt series particles stack"
# description = "Particle stack file (.mrcs) from tilt-series"
# type = "path"
# path = { type="files" }
# required = false
# hidden = [ "spr_heterogeneity" ]

[tabs.heterogeneity.cryodrgn_train_epochs]
name = "Number of epochs"
description = "Number of training epochs"
type = "int"
default = 20
condition = { arg="method", value="cryoDRGN" }

[tabs.heterogeneity.cryodrgn_train_batch]
name = "Batch size"
description = "Minibatch size"
type = "int"
default = 8
condition = { arg="method", value="cryoDRGN" }

[tabs.heterogeneity.cryodrgn_train_wd]
name = "Weight decay"
description = "Weight decay in Adam optimizer"
type = "int"
default = 0
condition = { arg="method", value="cryoDRGN" }

[tabs.heterogeneity.cryodrgn_train_lr]
name = "Learning rate"
description = "Learning rate in Adam optimizer"
type = "float"
default = 0.0001
condition = { arg="method", value="cryoDRGN" }

[tabs.heterogeneity.cryodrgn_train_beta]
name = "Beta schedule"
description = "Choice of beta schedule or a constant for KLD weight (default: 1/zdim, for tomo, use 0.025)"
type = "float"
advanced = true
condition = { arg="method", value="cryoDRGN" }

[tabs.heterogeneity.cryodrgn_train_beta_control]
name = "Beta control"
description = "KL-Controlled VAE gamma. Beta is KL target"
type = "float"
advanced = true
condition = { arg="method", value="cryoDRGN" }

[tabs.heterogeneity.cryodrgn_data_norm]
name = "Data normalization"
description = "Data normalization as shift, 1/scale (default: mean, std of dataset)"
type = "str"
default = "None"
condition = { arg="method", value="cryoDRGN" }

[tabs.heterogeneity.cryodrgn_train_amp]
name = "Use mixed precision"
description = "Use mixed-precision training"
type = "bool"
default = false
advanced = true
condition = { arg="method", value="cryoDRGN" }

[tabs.heterogeneity.cryodrgn_pose_sgd]
name = "Pose SGD"
description = "Refine poses with gradient descent"
type = "bool"
default = false
condition = { arg="method", value="cryoDRGN" }

[tabs.heterogeneity.cryodrgn_pretrain]
name = "Pre-train epochs"
description = "Number of epochs with fixed poses before pose SGD"
type = "int"
default = 1
condition = { arg="method", value="cryoDRGN" }

[tabs.heterogeneity.cryodrgn_emd_type]
name = "Embedding type"
description = "SO(3) embedding type for pose SGD"
type = "enum"
enum = { s2s2="s2s2", quat="quat" }
default = "quat"
condition = { arg="method", value="cryoDRGN" }

[tabs.heterogeneity.cryodrgn_pose_lr]
name = "Pose learning rate"
description = "Learning rate for pose optimizer"
type = "float"
default = 0.0003
condition = { arg="method", value="cryoDRGN" }

[tabs.heterogeneity.cryodrgn_enc_hl]
name = "Encoder layers"
description = "Number of hidden layers for Encoder"
type = "int"
default = 3
condition = { arg="method", value="cryoDRGN" }

[tabs.heterogeneity.cryodrgn_enc_dim]
name = "Encoder nodes"
description = "Number of nodes in Encoder hidden layers"
type = "int"
default = 1024
condition = { arg="method", value="cryoDRGN" }

[tabs.heterogeneity.cryodrgn_enc_mode]
name = "Encoder Network"
description = "Type of encoder network"
type = "enum"
enum = { conv="conv", resid="resid", mlp="mlp", tilt="tilt" }
default = "resid"
condition = { arg="method", value="cryoDRGN" }

[tabs.heterogeneity.cryodrgn_use_real]
name = "Use real space"
description = "Use real space image for encoder (for convolutional encoder)"
type = "bool"
default = false
condition = {arg="cryodrgn_enc_mode", value="conv"}

[tabs.heterogeneity.cryodrgn_enc_mask]
name = "Encoder mask"
description = "Circular mask of image for encoder (default: D/2; -1 for no mask)"
type = "float"
condition = { arg="method", value="cryoDRGN" }

[tabs.heterogeneity.cryodrgn_dec_hl]
name = "Decoder layers"
description = "Number of decoder hidden layers"
type = "int"
default = 3
condition = { arg="method", value="cryoDRGN" }

[tabs.heterogeneity.cryodrgn_dec_dim]
name = "Decoder nodes"
description = "Number of nodes in decoder hidden layers"
type = "int"
default = 1024
advanced = true
condition = { arg="method", value="cryoDRGN" }

[tabs.heterogeneity.cryodrgn_pe_type]
name = "Position encoding type"
description = "Type of positional encoding type"
type = "enum"
enum = {geom_ft="geom_ft", geom_full="geom_full", geom_lowf="geom_lowf", geom_nohighf="geom_nohighf", linear_lowf="linear_lowf", gaussian="gaussian", none="none"}
default = "gaussian"
condition = { arg="method", value="cryoDRGN" }
advanced = true

[tabs.heterogeneity.cryodrgn_feat_sigma]
name = "Gaussian features"
description = "Scale for random Gaussian features"
type = "float"
default = 0.5
advanced = true
condition = { arg="cryodrgn_pe_type", value="gaussian" }

[tabs.heterogeneity.cryodrgn_pe_dim]
name = "Positional frequencies"
description = "Num frequencies in positional encoding (default: image D/2)"
type = "float"
advanced = true
condition = { arg="method", value="cryoDRGN" }

[tabs.heterogeneity.cryodrgn_dec_domain]
name = "Decoder representation"
description = "Volume decoder representation"
type = "enum"
enum = {hartley="hartley", fourier="fourier"}
default = "fourier"
condition = { arg="method", value="cryoDRGN" }

[tabs.heterogeneity.cryodrgn_activation]
name = "Activation"
description = "Activation"
type = "enum"
enum = {relu="relu", leaky_relu="leaky_relu"}
default = "relu"
condition = { arg="method", value="cryoDRGN" }

[tabs.heterogeneity.cryodrgn_analysis_epoch]
name = "Epochs"
description = "Epoch number N to analyze (0-based indexing, corresponding to z.N.pkl, weights.N.pkl)"
type = "int"
default = 0
advanced = true
condition = { arg="method", value="cryoDRGN" }

[tabs.heterogeneity.cryodrgn_analysis_skipv]
name = "Skip volume generation"
description = "Skip generation of volumes"
type = "bool"
default = false
condition = { arg="method", value="cryoDRGN" }

[tabs.heterogeneity.cryodrgn_analysis_skipumap]
name = "Skip UMAP"
description = "Skip running UMAP"
type = "bool"
default = false
condition = { arg="method", value="cryoDRGN" }

[tabs.heterogeneity.cryodrgn_analysis_flip]
name = "Flip handedness"
description = "Flip handedness of output volumes"
type = "bool"
default = false
advanced = true
condition = { arg="method", value="cryoDRGN" }

[tabs.heterogeneity.cryodrgn_analysis_invert]
name = "Invert contrast"
description = "Invert constast of output volumes"
type = "bool"
default = false
advanced = true
condition = { arg="method", value="cryoDRGN" }

[tabs.heterogeneity.cryodrgn_analysis_downsample]
name = "Downsample output"
description = "Downsample volumes to this box size (pixels)"
type = "int"
condition = { arg="method", value="cryoDRGN" }

[tabs.heterogeneity.cryodrgn_analysis_pc]
name = "Principal components"
description = "Number of principal component traversals to generate"
type = "int"
default = 2
condition = { arg="method", value="cryoDRGN" }

[tabs.heterogeneity.cryodrgn_analysis_ksample]
name = "K-means samples"
description = "Number of k-means samples to generate"
type = "int"
default = 20
condition = { arg="method", value="cryoDRGN" }

[tabs.heterogeneity.cryodrgn_analysis_istart]
name = "Start index"
description = "Default value of start index for volume generation"
type = "int"
default = 0
advanced = true
condition = { arg="method", value="cryoDRGN" }

# [tabs.heterogeneity.tomodrgn_downsample_size]
# name = "Downsample boxsize"
# description = "Downsampled particle boxsize for training"
# type = "float"
# default = 128

# analysis

[tabs.heterogeneity.tomodrgn_mode_eval]
name = "Operation"
description = "tomoDRGN command to run"
type = "enum"
enum = {analysis="analysis (analyze distribution of latent embeddings)"}
default = "analysis"
condition = { arg="method", value="tomoDRGN" }
hidden = [ "tomo_drgn_train" ]

[tabs.heterogeneity.tomodrgn_analysis_epoch]
name = "Analysis epochs"
description = "Epoch number N to analyze (0-based indexing, corresponding to z.N.pkl, weights.N.pkl)"
type = "int"
default = -1
condition = {arg="tomodrgn_mode_eval", value="analysis"}
hidden = [ "tomo_drgn_train" ]

[tabs.heterogeneity.tomodrgn_analysis_batch]
name = "Batch size"
description = "Minibatch size for analysis"
type = "int"
default = 1
condition = {arg="tomodrgn_mode_eval", value="eval_vol"}
hidden = [ "tomo_drgn_train" ]

[tabs.heterogeneity.tomodrgn_analysis_skipv]
name = "Skip volume generation"
description = "Skip generation of volumes"
type = "bool"
default = false
condition = {arg="tomodrgn_mode_eval", value="analysis"}
hidden = [ "tomo_drgn_train" ]

[tabs.heterogeneity.tomodrgn_analysis_skipumap]
name = "Skip UMAP"
description = "Skip running UMAP"
type = "bool"
default = false
condition = {arg="tomodrgn_mode_eval", value="analysis"}
hidden = [ "tomo_drgn_train" ]

[tabs.heterogeneity.tomodrgn_analysis_flip]
name = "Flip handedness"
description = "Flip handedness of output volumes"
type = "bool"
default = false
condition = {arg="tomodrgn_mode_eval", value="analysis"}
hidden = [ "tomo_drgn_train" ]

[tabs.heterogeneity.tomodrgn_analysis_invert]
name = "Invert contrast"
description = "Invert contrast of output volumes"
type = "bool"
default = false
condition = {arg="tomodrgn_mode_eval", value="analysis"}
hidden = [ "tomo_drgn_train" ]

[tabs.heterogeneity.tomodrgn_analysis_downsample]
name = "Downsample output"
description = "Downsample volumes to this box size (pixels)"
type = "int"
condition = {arg="tomodrgn_mode_eval", value="analysis"}
hidden = [ "tomo_drgn_train" ]

[tabs.heterogeneity.tomodrgn_analysis_pc]
name = "Principal components"
description = "Number of principal component traversals to generate"
type = "int"
default = 2
condition = {arg="tomodrgn_mode_eval", value="analysis"}
hidden = [ "tomo_drgn_train" ]

[tabs.heterogeneity.tomodrgn_analysis_ksample]
name = "K-means samples"
description = "Number of k-means samples to generate"
type = "int"
default = 20
condition = {arg="tomodrgn_mode_eval", value="analysis"}
hidden = [ "tomo_drgn_train" ]

[tabs.heterogeneity.tomodrgn_analysis_pc_ondata]
name = "PC-ondata"
description = "Find closest on-data latent point to each PC percentile"
type = "bool"
default = false
condition = {arg="tomodrgn_mode_eval", value="analysis"}
hidden = [ "tomo_drgn_train" ]

[tabs.heterogeneity.tomodrgn_mode]
name = "Operation"
description = "tomoDRGN command to run"
type = "enum"
enum = {backproject_voxel="backproject-voxel (homogeneous reconstruction)", train_nn="train-nn (homogeneous reconstruction with decoder-only network)", train_vae="train_vae (learn heterogeneity landscape and volume decoder)", convergence_vae="convergence_vae (assess convergence of VAE model)"}
default = "train_vae"
condition = { arg="method", value="tomoDRGN" }
hidden = [ "tomo_drgn_eval" ]

# backproject-voxel

[tabs.heterogeneity.tomodrgn_use_first_nptcls]
name = "Use first N particles"
description = "Number of particles to use for reconstruction. Default: -1 (use all particles)"
type = "int"
default = -1
condition = {arg="tomodrgn_mode", value="backproject_voxel"}
hidden = [ "tomo_drgn_eval" ]

[tabs.heterogeneity.tomodrgn_sort_ptcl_imgs]
name = "Sort star file images"
description = "Sort on a per-particle basis by the specified criteria"
type = "enum"
enum = {unsorted="unsorted", dose_ascending="dose_ascending", random="random"}
default = "unsorted"
condition = {arg="tomodrgn_mode", value="backproject_voxel"}
hidden = [ "tomo_drgn_eval" ]

[tabs.heterogeneity.tomodrgn_lowpass]
name = "Lowpass (A)"
description = "Lowpass filter reconstructed volume. Defaults to FSC=0.143 correlation between half-maps"
type = "float"
default = 0
condition = {arg="tomodrgn_mode", value="backproject_voxel"}

[tabs.heterogeneity.tomodrgn_flip]
name = "Flip handedness"
description = "Flip handedness of output volume"
type = "bool"
default = false
condition = {arg="tomodrgn_mode", value="backproject_voxel"}
hidden = [ "tomo_drgn_train" ]

# convergence_nn
[tabs.heterogeneity.tomodrgn_ref]
name = "Reference volume"
description = "Volume against which to calculate FSC"
type = "path"
path = { type="files" }
input = { type="initialModel" }
condition = {arg="tomodrgn_mode", value="convergence_nn"}
hidden = [ "tomo_drgn_eval" ]

[tabs.heterogeneity.tomodrgn_max_epoch]
name = "Max epoch"
description = "Maximum epoch for which to calculate FSCs (default: None)"
type = "int"
default = 0
condition = {arg="tomodrgn_mode", value="convergence_nn"}

[tabs.heterogeneity.tomodrgn_dc]
name = "Include-DC"
description = "Include FSC calculation for DC component, default False because DC component default excluded during training"
type = "bool"
default = false
condition = {arg="tomodrgn_mode", value="convergence_nn"}

[tabs.heterogeneity.tomodrgn_fscmask]
name = "FSC-mask"
description = "Type of mask applied to volumes before calculating FSC"
type = "enum"
enum = { none="none", sphere="sphere", tight="tight", soft="soft" }
default = "soft"
condition = {arg="tomodrgn_mode", value="convergence_nn"}

# convergence_vae
[tabs.heterogeneity.tomodrgn_epoch_index]
name = "Epoch index"
description = "Latest epoch number N to analyze convergence (0-based indexing, corresponding to z.N.pkl, weights.N.pkl)"
type = "str"
default = "latest"
condition = {arg="tomodrgn_mode", value="convergence_vae"}
hidden = [ "tomo_drgn_eval" ]

[tabs.heterogeneity.tomodrgn_epoch_interval]
name = "Epoch interval"
description = "Interval of epochs between calculating most convergence heuristics"
type = "int"
default = 5
condition = {arg="tomodrgn_mode", value="convergence_vae"}
hidden = [ "tomo_drgn_eval" ]

[tabs.heterogeneity.tomodrgn_force_umapcpu]
name = "Force-umap-cpu"
description = "Override default UMAP GPU-bound implementation via cuML to use umap-learn library instead"
type = "bool"
default = false
condition = {arg="tomodrgn_mode", value="convergence_vae"}
hidden = [ "tomo_drgn_eval" ]

[tabs.heterogeneity.tomodrgn_subset]
name = "Subset"
description = "Max number of particles to be used for UMAP calculations. 'None' means use all ptcls"
type = "int"
default = 50000
condition = {arg="tomodrgn_mode", value="convergence_vae"}
hidden = [ "tomo_drgn_eval" ]

[tabs.heterogeneity.tomodrgn_randomseed]
name = "Random-seed"
description = "Manually specify the seed used for selection of subset particles (default: None)"
type = "int"
default = 0
condition = {arg="tomodrgn_mode", value="convergence_vae"}
hidden = [ "tomo_drgn_eval" ]

[tabs.heterogeneity.tomodrgn_randomstate]
name = "Random-state"
description = "Random state seed used by UMAP for reproducibility at slight cost of performance"
type = "str"
default = "42"
condition = {arg="tomodrgn_mode", value="convergence_vae"}
hidden = [ "tomo_drgn_eval" ]

[tabs.heterogeneity.tomodrgn_skip_umap]
name = "Skip UMAP"
description = "Requires that UMAP be precomputed for downstream calcs. Useful for tweaking volume generation settings"
type = "bool"
default = false
condition = {arg="tomodrgn_mode", value="convergence_vae"}
hidden = [ "tomo_drgn_eval" ]

[tabs.heterogeneity.tomodrgn_nbins]
name = "N-bins"
description = "The number of bins along UMAP1 and UMAP2"
type = "int"
default = 30
condition = {arg="tomodrgn_mode", value="convergence_vae"}
hidden = [ "tomo_drgn_eval" ]

[tabs.heterogeneity.tomodrgn_smooth]
name = "Smooth"
description = "Mooth the 2D histogram before identifying local maxima"
type = "bool"
default = true
condition = {arg="tomodrgn_mode", value="convergence_vae"}
hidden = [ "tomo_drgn_eval" ]

[tabs.heterogeneity.tomodrgn_smooth_width]
name = "Smooth width"
description = "Width of gaussian kernel for smoothing 2D histogram expressed as multiple of one bin's width"
type = "float"
default = 1.0
condition = {arg="tomodrgn_smooth", value="true"}
hidden = [ "tomo_drgn_eval" ]

[tabs.heterogeneity.tomodrgn_pruned_maxima]
name = "Pruned-maxima"
description = "Prune poorly-separated maxima until this many maxima remain"
type = "int"
default = 12
condition = {arg="tomodrgn_mode", value="convergence_vae"}
hidden = [ "tomo_drgn_eval" ]

[tabs.heterogeneity.tomodrgn_radius]
name = "Radius"
description = "Distance at which two maxima are considered poorly-separated and are candidates for pruning (Euclidean distance in bin-space)"
type = "float"
default = 5.0
condition = {arg="tomodrgn_mode", value="convergence_vae"}
hidden = [ "tomo_drgn_eval" ]

[tabs.heterogeneity.tomodrgn_skip_vgen]
name = "Skip-volgen"
description = "Skip volume generation. Requires that volumes already exist for downstream CC + FSC calcs"
type = "bool"
default = false
condition = {arg="tomodrgn_mode", value="convergence_vae"}
hidden = [ "tomo_drgn_eval" ]

[tabs.heterogeneity.tomodrgn_final_maxima]
name = "Number of volumes to generate"
description = "Select this many local maxima, sorted by highest bin count after pruning, for which to generate volumes"
type = "int"
default = 10
condition = {arg="tomodrgn_skip_vgen", value="false"}
hidden = [ "tomo_drgn_eval" ]

[tabs.heterogeneity.tomodrgn_gt]
name = "Ground-truth"
description = "Relative path containing wildcards to ground_truth_vols*.mrc for map-map CC calcs"
type = "str"
default = "None"
condition = {arg="tomodrgn_mode", value="convergence_vae"}
hidden = [ "tomo_drgn_eval" ]

[tabs.heterogeneity.tomodrgn_thresh]
name = "Mask threshold"
description = "Float, isosurface at which to threshold mask; default 0 uses 50th percentile"
type = "float"
default = 0
condition = {arg="tomodrgn_mode", value="convergence_vae"}
hidden = [ "tomo_drgn_eval" ]

[tabs.heterogeneity.tomodrgn_dist]
name = "Mask soft edge"
description = "Number of voxels over which to apply a soft cosine falling edge from dilated mask boundary"
type = "int"
default = 10
condition = {arg="tomodrgn_mode", value="convergence_vae"}
hidden = [ "tomo_drgn_eval" ]

[tabs.heterogeneity.tomodrgn_dilate]
name = "Mask dilate"
description = "Number of voxels to dilate thresholded isosurface outwards from mask boundary"
type = "int"
default = 3
condition = {arg="tomodrgn_mode", value="convergence_vae"}
hidden = [ "tomo_drgn_eval" ]

##############
##############
# train_vae, train_nn

[tabs.heterogeneity.tomodrgn_use_firstn]
name = "Use first N tilts"
description = "Number of tilts to sample from each particle per epoch. Default: min(ntilts) from dataset"
type = "int"
default = 32
condition = {arg="tomodrgn_mode", value=["backproject_voxel","train_vae","train_nn"]}
hidden = [ "tomo_drgn_eval" ]

[tabs.heterogeneity.tomodrgn_data_lazy]
name = "Lazy loading"
description = "Lazy loading if full dataset is too large to fit in memory"
type = "bool"
default = false
condition = {arg="tomodrgn_mode", value=["backproject_voxel","train_vae","train_nn"]}
hidden = [ "tomo_drgn_eval" ]

[tabs.heterogeneity.tomodrgn_data_windowing]
name = "Real space windowing"
description = "Real space windowing of dataset"
type = "bool"
default = false
condition = {arg="tomodrgn_mode", value=["train_vae","train_nn"]}
hidden = [ "tomo_drgn_eval" ]

[tabs.heterogeneity.tomodrgn_data_window_r]
name = "Radius"
description = "Windowing radius"
type = "float"
default = 0.85
condition = {arg="tomodrgn_data_windowing", value="true"}
hidden = [ "tomo_drgn_eval" ]

[tabs.heterogeneity.tomodrgn_data_window_r_outer]
name = "Outer radius"
description = "Windowing outer radius"
type = "float"
default = 1.12
condition = {arg="tomodrgn_data_windowing", value="true"}
hidden = [ "tomo_drgn_eval" ]

[tabs.heterogeneity.tomodrgn_tilt_weight]
name = "Cosine weight by tilt"
description = "Weight reconstruction loss by cos(angle)"
type = "bool"
default = false
condition = {arg="tomodrgn_mode", value=["backproject_voxel","train_vae","train_nn"]}
hidden = [ "tomo_drgn_eval" ]

[tabs.heterogeneity.tomodrgn_dose_weight]
name = "Weight by dose"
description = "Weight reconstruction loss per tilt per pixel by dose dependent amplitude attenuation"
type = "bool"
default = false
condition = {arg="tomodrgn_mode", value=["backproject_voxel","train_nn"]}
hidden = [ "tomo_drgn_eval" ]

[tabs.heterogeneity.tomodrgn_dose]
name = "Dose override"
description = "Manually specify dose in e- / A2 / tilt"
type = "float"
default = 0.0
condition = {arg="tomodrgn_mode", value=["train_vae","train_nn"]}
advanced = true
hidden = [ "tomo_drgn_eval" ]

[tabs.heterogeneity.tomodrgn_dose_mask]
name = "Dose mask"
description = "Do not train on frequencies exposed to > 2.5x critical dose. Training lattice is intersection of this with --l-extent"
type = "bool"
default = false
condition = {arg="tomodrgn_mode", value=["train_vae","train_nn"]}
advanced = true
hidden = [ "tomo_drgn_eval" ]

[tabs.heterogeneity.tomodrgn_layers]
name = "Layers"
description = "Number of hidden layers"
type = "int"
default = 3
condition = {arg="tomodrgn_mode", value="train_nn"}
advanced = true
hidden = [ "tomo_drgn_eval" ]

[tabs.heterogeneity.tomodrgn_dim]
name = "Number of nodes"
description = "Number of nodes in hidden layers"
type = "int"
default = 256
condition = {arg="tomodrgn_mode", value="train_nn"}
advanced = true
hidden = [ "tomo_drgn_eval" ]

[tabs.heterogeneity.tomodrgn_enc_lya]
name = "Enc-layers-A"
description = "Number of hidden layers for each tilt"
type = "int"
default = 3
condition = {arg="tomodrgn_mode", value="train_vae"}
advanced = true
hidden = [ "tomo_drgn_eval" ]

[tabs.heterogeneity.tomodrgn_enc_dima]
name = "Enc-dim-A"
description = "Number of nodes in hidden layers for each tilt"
type = "int"
default = 256
condition = {arg="tomodrgn_mode", value="train_vae"}
advanced = true
hidden = [ "tomo_drgn_eval" ]

[tabs.heterogeneity.tomodrgn_out_dima]
name = "Out-dim-A"
description = "Number of nodes in output layer of encA == ntilts * number of nodes input to encB"
type = "int"
default = 128
condition = {arg="tomodrgn_mode", value="train_vae"}
advanced = true
hidden = [ "tomo_drgn_eval" ]

[tabs.heterogeneity.tomodrgn_enc_lyb]
name = "Enc-layers-B"
description = "Number of hidden layers encoding merged tilts"
type = "int"
default = 3
condition = {arg="tomodrgn_mode", value="train_vae"}
advanced = true
hidden = [ "tomo_drgn_eval" ]

[tabs.heterogeneity.tomodrgn_enc_dimb]
name = "Enc-dim-B"
description = "Number of nodes in hidden layers encoding merged tilts"
type = "int"
default = 256
condition = {arg="tomodrgn_mode", value="train_vae"}
advanced = true
hidden = [ "tomo_drgn_eval" ]

[tabs.heterogeneity.tomodrgn_pool]
name = "Pooling-function"
description = "Function used to pool features along ntilts dimension after encA"
type = "enum"
enum = { concatenate="concatenate", max="max", mean="mean", median="median", set_encoder="set_encoder" }
default = "concatenate"
advanced = true
condition = {arg="tomodrgn_mode", value="train_vae"}
hidden = [ "tomo_drgn_eval" ]

[tabs.heterogeneity.tomodrgn_enc_mask]
name = "Encoder mask"
description = "Circular mask of image for encoder (default: D/2; -1 for no mask)"
type = "float"
advanced = true
condition = {arg="tomodrgn_mode", value=["train_vae","train_nn"]}
hidden = [ "tomo_drgn_eval" ]

[tabs.heterogeneity.tomodrgn_num_seeds]
name = "Num-seeds"
description = "Transformer number of seeds for PMA"
type = "int"
default = 1
advanced = true
condition = {arg="tomodrgn_mode", value="train_vae"}
hidden = [ "tomo_drgn_eval" ]

[tabs.heterogeneity.tomodrgn_num_heads]
name = "Num-heads"
description = "number of heads for multi head attention blocks"
type = "int"
default = 4
advanced = true
condition = {arg="tomodrgn_mode", value="train_vae"}
hidden = [ "tomo_drgn_eval" ]

[tabs.heterogeneity.tomodrgn_layer_norm]
name = "Layer-norm"
description = "whether to apply layer normalization in the set transformer block"
type = "bool"
default = false
advanced = true
condition = {arg="tomodrgn_mode", value=["train_vae","train_nn"]}
hidden = [ "tomo_drgn_eval" ]

# [tabs.heterogeneity.tomodrgn_use_real]
# name = "Use real space"
# description = "Use real space image for encoder (for convolutional encoder)"
# type = "bool"
# default = false
# condition = {arg="enc_mode", value="conv"}

[tabs.heterogeneity.tomodrgn_dec_hl]
name = "Decoder layers"
description = "Number of decoder hidden layers"
type = "int"
default = 3
advanced = true
condition = {arg="tomodrgn_mode", value=["train_vae"]}
hidden = [ "tomo_drgn_eval" ]

[tabs.heterogeneity.tomodrgn_dec_dim]
name = "Decoder nodes"
description = "Number of nodes in decoder hidden layers"
type = "int"
default = 256
condition = {arg="tomodrgn_mode", value="train_vae"}
advanced = true
hidden = [ "tomo_drgn_eval" ]

[tabs.heterogeneity.tomodrgn_l_ext]
name = "L-extent"
description = "Coordinate lattice size (if not using positional encoding)"
type = "float"
default = 0.5
advanced = true
condition = {arg="tomodrgn_mode", value=["train_vae","train_nn"]}
hidden = [ "tomo_drgn_eval" ]

[tabs.heterogeneity.tomodrgn_pe_type]
name = "Position encoding type"
description = "Type of positional encoding type"
type = "enum"
enum = {geom_ft="geom_ft", geom_full="geom_full", geom_lowf="geom_lowf", geom_nohighf="geom_nohighf", linear_lowf="linear_lowf", gaussian="gaussian", none="none"}
default = "gaussian"
condition = {arg="tomodrgn_mode", value=["train_vae","train_nn"]}
advanced = true
hidden = [ "tomo_drgn_eval" ]

[tabs.heterogeneity.tomodrgn_feat_sigma]
name = "Gaussian features"
description = "Scale for random Gaussian features"
type = "float"
default = 0.5
condition = { arg="tomodrgn_pe_type", value="gaussian" }
advanced = true
hidden = [ "tomo_drgn_eval" ]

[tabs.heterogeneity.tomodrgn_pe_dim]
name = "Positional frequencies"
description = "Num frequencies in positional encoding (default: image D/2)"
type = "float"
advanced = true
condition = {arg="tomodrgn_mode", value=["train_vae","train_nn"]}
hidden = [ "tomo_drgn_eval" ]

# [tabs.heterogeneity.tomodrgn_dec_domain]
# name = "Decoder representation"
# description = "Volume decoder representation (default: fourier)"
# type = "enum"
# enum = {hartley="hartley", fourier="fourier"}
# default = "fourier"

[tabs.heterogeneity.tomodrgn_activation]
name = "Activation"
description = "Activation"
type = "enum"
enum = {relu="relu", leaky_relu="leaky_relu"}
default = "relu"
condition = {arg="tomodrgn_mode", value=["train_vae","train_nn"]}
advanced = true
hidden = [ "tomo_drgn_eval" ]

[tabs.heterogeneity.tomodrgn_num_workers]
name = "Number of workers"
description = "Number of workers to use when batching particles for training. Has moderate impact on epoch time"
type = "int"
default = 0
advanced = true
condition = {arg="tomodrgn_mode", value=["train_vae","train_nn"]}
hidden = [ "tomo_drgn_eval" ]

[tabs.heterogeneity.tomodrgn_prefetch_factor]
name = "Prefetch-factor"
description = "Number of particles to prefetch per worker for training. Has moderate impact on epoch time"
type = "int"
default = 2
advanced = true
condition = {arg="tomodrgn_mode", value=["train_vae","train_nn"]}
hidden = [ "tomo_drgn_eval" ]

[tabs.heterogeneity.tomodrgn_pst_wkrs]
name = "Persistent-workers"
description = "Whether to persist workers after dataset has been fully consumed. Has minimal impact on run time"
type = "bool"
default = false
advanced = true
condition = {arg="tomodrgn_mode", value=["train_vae","train_nn"]}
hidden = [ "tomo_drgn_eval" ]

[tabs.heterogeneity.tomodrgn_pin_mem]
name = "Pin-memory"
description = "Whether to use pinned memory for dataloader. Has large impact on epoch time. Recommended"
type = "bool"
default = false
advanced = true
condition = {arg="tomodrgn_mode", value=["train_vae","train_nn"]}
hidden = [ "tomo_drgn_eval" ]

[tabs.heterogeneity.tomodrgn_train_zdim]
name = "ZDIM"
description = "Dimension of latent variable"
type = "int"
default = 128
condition = {arg="tomodrgn_mode", value=["train_vae","train_nn"]}
advanced = true
hidden = [ "tomo_drgn_eval" ]

[tabs.heterogeneity.tomodrgn_train_weight]
name = "Initial training model"
description = "Initialize training from a checkpoint"
type = "path"
path = { type="files" }
default = "latest"
required = false
condition = {arg="tomodrgn_mode", value=["train_vae","train_nn"]}
advanced = true
hidden = [ "tomo_drgn_eval" ]

[tabs.heterogeneity.tomodrgn_train_checkpoint]
name = "Checkpoint interval"
description = "Checkpointing interval in N_EPOCHS"
type = "int"
default = 1
advanced = true
condition = {arg="tomodrgn_mode", value=["train_vae","train_nn"]}
hidden = [ "tomo_drgn_eval" ]

[tabs.heterogeneity.tomodrgn_train_log_interval]
name = "Log interval"
description = "Logging interval in N_IMGS"
type = "int"
default = 1000
condition = {arg="tomodrgn_mode", value=["train_vae","train_nn"]}
advanced = true
hidden = [ "tomo_drgn_eval" ]

[tabs.heterogeneity.tomodrgn_train_seed]
name = "Random seed"
description = "Random seed for training"
type = "int"
advanced = true
condition = {arg="tomodrgn_mode", value=["train_vae","train_nn"]}
hidden = [ "tomo_drgn_eval" ]

[tabs.heterogeneity.tomodrgn_data_ind]
name = "Filter index"
description = "Filter particle stack by these indices, (pkl format)"
type = "path"
path = { type="files" }
required = false
advanced = true
condition = {arg="tomodrgn_mode", value=["train_vae","train_nn"]}
hidden = [ "tomo_drgn_eval" ]

[tabs.heterogeneity.tomodrgn_data_invert]
name = "Invert data sign"
description = "Invert data sign or not"
type = "bool"
default = true
advanced = true
condition = {arg="tomodrgn_mode", value=["train_vae","train_nn"]}
hidden = [ "tomo_drgn_eval" ]

[tabs.heterogeneity.tomodrgn_data_dir]
name = "Input data directory"
description = "Path prefix to particle stack if loading relative paths from a .star or .cs file"
type = "path"
path = { type="folders" }
required = false
condition = {arg="tomodrgn_mode", value=["train_vae","train_nn"]}
advanced = true
hidden = [ "tomo_drgn_eval" ]

[tabs.heterogeneity.tomodrgn_use_ptl]
name = "Sample particles"
description = "Keep the first N particles in the sorted star file. Default -1 means to use all"
type = "int"
default = -1
condition = {arg="tomodrgn_mode", value="train_vae"}
advanced = true
hidden = [ "tomo_drgn_eval" ]

[tabs.heterogeneity.tomodrgn_sequential_order]
name = "Sequential order"
description = "Supply particle images of one particle to encoder in starfile order"
type = "bool"
default = true
condition = {arg="tomodrgn_mode", value=["train_vae","train_nn"]}
advanced = true
hidden = [ "tomo_drgn_eval" ]

[tabs.heterogeneity.tomodrgn_train_epochs]
name = "Number of epochs"
description = "Number of training epochs"
type = "int"
default = 20
condition = {arg="tomodrgn_mode", value=["train_vae","train_nn"]}
hidden = [ "tomo_drgn_eval" ]

[tabs.heterogeneity.tomodrgn_train_batch]
name = "Batch size"
description = "Minibatch size"
type = "int"
default = 1
condition = {arg="tomodrgn_mode", value=["train_vae","train_nn"]}
advanced = true
hidden = [ "tomo_drgn_eval" ]

[tabs.heterogeneity.tomodrgn_train_wd]
name = "Weight decay"
description = "Weight decay in Adam optimizer"
type = "int"
default = 0
condition = {arg="tomodrgn_mode", value=["train_vae","train_nn"]}
advanced = true
hidden = [ "tomo_drgn_eval" ]

[tabs.heterogeneity.tomodrgn_train_lr]
name = "Learning rate"
description = "Learning rate in Adam optimizer"
type = "float"
default = 0.0001
condition = {arg="tomodrgn_mode", value=["train_vae","train_nn"]}
advanced = true
hidden = [ "tomo_drgn_eval" ]

[tabs.heterogeneity.tomodrgn_train_beta]
name = "Beta schedule"
description = "Choice of beta schedule or a constant for KLD weight (default: 1/zdim)"
type = "float"
advanced = true
condition = {arg="tomodrgn_mode", value=["train_vae","train_nn"]}
hidden = [ "tomo_drgn_eval" ]

[tabs.heterogeneity.tomodrgn_train_beta_control]
name = "Beta control"
description = "KL-Controlled VAE gamma. Beta is KL target"
type = "float"
advanced = true
condition = {arg="tomodrgn_mode", value=["train_vae","train_nn"]}
hidden = [ "tomo_drgn_eval" ]

[tabs.heterogeneity.tomodrgn_data_norm]
name = "Data normalization"
description = "Data normalization as shift, 1/scale (default: mean, std of dataset)"
type = "str"
default = "none"
condition = {arg="tomodrgn_mode", value=["train_vae","train_nn"]}
advanced = true
hidden = [ "tomo_drgn_eval" ]

[tabs.heterogeneity.tomodrgn_train_amp]
name = "Use mixed precision"
description = "Use mixed-precision training"
type = "bool"
default = false
condition = {arg="tomodrgn_mode", value=["train_vae","train_nn"]}
advanced = true
hidden = [ "tomo_drgn_eval" ]

[tabs.heterogeneity.tomodrgn_eval_vol]
name = "Generate large ensemble of volumes"
description = "Run tomodrgn eval_vol"
type = "bool"
default = false
hidden = [ "tomo_drgn_train" ]

[tabs.heterogeneity.tomodrgn_eval_vol_analyze]
name = "Run volume space PCA and UMAP"
description = "Run tomodrgn analyze_volumes"
type = "bool"
default = false
hidden = [ "tomo_drgn_train" ]

[tabs.heterogeneity.tomodrgn_eval_vol_mask]
name = "Mask type for volumes"
description = "Type of real space mask to generate for each volume when calculating voxel-PCA"
type = "enum"
enum = { none="none", soft="soft", tight="tight", sphere="sphere" }
default = "soft"
condition = { arg="tomodrgn_eval_vol_analyze", value=true }
hidden = [ "tomo_drgn_train" ]

# [tabs.heterogeneity.tomodrgn_pose_sgd]
# name = "Pose SGD"
# description = "Refine poses with gradient descent"
# type = "bool"
# default = true

# [tabs.heterogeneity.tomodrgn_pretrain]
# name = "Pre-train epochs"
# description = "Number of epochs with fixed poses before pose SGD"
# type = "int"
# default = 1

# [tabs.heterogeneity.tomodrgn_emd_type]
# name = "Embedding type"
# description = "SO(3) embedding type for pose SGD"
# type = "enum"
# enum = { s2s2="s2s2", quat="quat" }
# default = "quat"

# [tabs.heterogeneity.tomodrgn_pose_lr]
# name = "Pose learning rate"
# description = "Learning rate for pose optimizer"
# type = "float"
# default = "0.0003"

##############
##############
# train_vae, convergence_vae

[tabs.tomodrgn_vae_train]
_name = "tomoDRGN (train-vae)"
_description = "tomoDRGN VAE training"

[tabs.tomodrgn_vae_train.input_star]
name = "Input file (*.star)"
description = "Star file with particle alignments and metadata"
type = "path"
path = { type="files" }
input = { type="starfile" }

[tabs.tomodrgn_vae_train.sort_ptcl_imgs]
name = "Sort star file images"
description = "Sort on a per-particle basis by the specified criteria"
type = "enum"
enum = {unsorted="unsorted", dose_ascending="dose_ascending", random="random"}
default = "unsorted"

[tabs.tomodrgn_vae_train.use_firstn]
name = "Use first N tilts"
description = "Number of tilts to sample from each particle per epoch. Default: min(ntilts) from dataset"
type = "int"
default = 32

[tabs.tomodrgn_vae_train.data_lazy]
name = "Lazy loading"
description = "Lazy loading if full dataset is too large to fit in memory"
type = "bool"
default = true
advanced = true

[tabs.tomodrgn_vae_train.data_windowing]
name = "Real space windowing"
description = "Real space windowing of dataset"
type = "bool"
default = false
advanced = true

[tabs.tomodrgn_vae_train.data_window_r]
name = "Radius"
description = "Windowing radius"
type = "float"
default = 0.85
condition = {arg="data_windowing", value="true"}

[tabs.tomodrgn_vae_train.data_window_r_outer]
name = "Outer radius"
description = "Windowing outer radius"
type = "float"
default = 1.12
condition = {arg="data_windowing", value="true"}
hidden = [ "tomo_drgn_eval" ]

[tabs.tomodrgn_vae_train.tilt_weight]
name = "Cosine weight by tilt"
description = "Weight reconstruction loss by cos(angle)"
type = "bool"
default = true

[tabs.tomodrgn_vae_train.dose_weight]
name = "Weight by dose"
description = "Weight reconstruction loss per tilt per pixel by dose dependent amplitude attenuation"
type = "bool"
default = true

[tabs.tomodrgn_vae_train.dose]
name = "Dose override"
description = "Manually specify dose in e- / A2 / tilt"
type = "float"
default = 0.0
advanced = true

[tabs.tomodrgn_vae_train.dose_mask]
name = "Dose mask"
description = "Do not train on frequencies exposed to > 2.5x critical dose. Training lattice is intersection of this with --l-extent"
type = "bool"
default = true
advanced = true

[tabs.tomodrgn_vae_train.layers]
name = "Layers"
description = "Number of hidden layers"
type = "int"
default = 3
advanced = true

[tabs.tomodrgn_vae_train.enc_lya]
name = "Enc-layers-A"
description = "Number of hidden layers for each tilt"
type = "int"
default = 3
advanced = true

[tabs.tomodrgn_vae_train.enc_dima]
name = "Enc-dim-A"
description = "Number of nodes in hidden layers for each tilt"
type = "int"
default = 256
advanced = true

[tabs.tomodrgn_vae_train.out_dima]
name = "Out-dim-A"
description = "Number of nodes in output layer of encA == ntilts * number of nodes input to encB"
type = "int"
default = 128
advanced = true

[tabs.tomodrgn_vae_train.enc_lyb]
name = "Enc-layers-B"
description = "Number of hidden layers encoding merged tilts"
type = "int"
default = 3
advanced = true

[tabs.tomodrgn_vae_train.enc_dimb]
name = "Enc-dim-B"
description = "Number of nodes in hidden layers encoding merged tilts"
type = "int"
default = 256
advanced = true

[tabs.tomodrgn_vae_train.pool]
name = "Pooling-function"
description = "Function used to pool features along ntilts dimension after encA"
type = "enum"
enum = { concatenate="concatenate", max="max", mean="mean", median="median", set_encoder="set_encoder" }
default = "concatenate"
advanced = true

[tabs.tomodrgn_vae_train.enc_mask]
name = "Encoder mask"
description = "Circular mask of image for encoder (default: D/2; -1 for no mask)"
type = "float"
advanced = true

[tabs.tomodrgn_vae_train.num_seeds]
name = "Num-seeds"
description = "Transformer number of seeds for PMA"
type = "int"
default = 1
advanced = true

[tabs.tomodrgn_vae_train.num_heads]
name = "Num-heads"
description = "number of heads for multi head attention blocks"
type = "int"
default = 4
advanced = true

[tabs.tomodrgn_vae_train.layer_norm]
name = "Layer-norm"
description = "whether to apply layer normalization in the set transformer block"
type = "bool"
default = false
advanced = true

[tabs.tomodrgn_vae_train.dec_hl]
name = "Decoder layers"
description = "Number of decoder hidden layers"
type = "int"
default = 3
advanced = true

[tabs.tomodrgn_vae_train.dec_dim]
name = "Decoder nodes"
description = "Number of nodes in decoder hidden layers"
type = "int"
default = 256
advanced = true

[tabs.tomodrgn_vae_train.l_ext]
name = "L-extent"
description = "Coordinate lattice size (if not using positional encoding)"
type = "float"
default = 0.5
advanced = true

[tabs.tomodrgn_vae_train.pe_type]
name = "Position encoding type"
description = "Type of positional encoding type"
type = "enum"
enum = {geom_ft="geom_ft", geom_full="geom_full", geom_lowf="geom_lowf", geom_nohighf="geom_nohighf", linear_lowf="linear_lowf", gaussian="gaussian", none="none"}
default = "gaussian"
advanced = true

[tabs.tomodrgn_vae_train.feat_sigma]
name = "Gaussian features"
description = "Scale for random Gaussian features"
type = "float"
default = 0.5
condition = { arg="pe_type", value="gaussian" }
advanced = true

[tabs.tomodrgn_vae_train.pe_dim]
name = "Positional frequencies"
description = "Num frequencies in positional encoding (default: image D/2)"
type = "float"
advanced = true

[tabs.tomodrgn_vae_train.activation]
name = "Activation"
description = "Activation"
type = "enum"
enum = {relu="relu", leaky_relu="leaky_relu"}
default = "relu"
advanced = true

[tabs.tomodrgn_vae_train.num_workers]
name = "Number of workers"
description = "Number of workers to use when batching particles for training. Has moderate impact on epoch time"
type = "int"
default = 0
advanced = true

[tabs.tomodrgn_vae_train.prefetch_factor]
name = "Prefetch-factor"
description = "Number of particles to prefetch per worker for training. Has moderate impact on epoch time"
type = "int"
default = 2
advanced = true

[tabs.tomodrgn_vae_train.pst_wkrs]
name = "Persistent-workers"
description = "Whether to persist workers after dataset has been fully consumed. Has minimal impact on run time"
type = "bool"
default = false
advanced = true

[tabs.tomodrgn_vae_train.pin_mem]
name = "Pin-memory"
description = "Whether to use pinned memory for dataloader. Has large impact on epoch time. Recommended"
type = "bool"
default = false
advanced = true

[tabs.tomodrgn_vae_train.zdim]
name = "Z dim"
description = "Dimension of latent variable"
type = "int"
default = 128

[tabs.tomodrgn_vae_train.weight]
name = "Initial training model"
description = "Initialize training from a checkpoint"
type = "path"
path = { type="files" }
default = "latest"
required = false

[tabs.tomodrgn_vae_train.checkpoint]
name = "Checkpoint interval"
description = "Checkpointing interval in N_EPOCHS"
type = "int"
default = 1
advanced = true
hidden = true

[tabs.tomodrgn_vae_train.log_interval]
name = "Log interval"
description = "Logging interval in N_IMGS"
type = "int"
default = 1000
advanced = true

[tabs.tomodrgn_vae_train.seed]
name = "Random seed"
description = "Random seed for training"
type = "int"
advanced = true

[tabs.tomodrgn_vae_train.data_ind]
name = "Filter index"
description = "Filter particle stack by these indices, (pkl format)"
type = "path"
path = { type="files" }
required = false
advanced = true

[tabs.tomodrgn_vae_train.data_invert]
name = "Invert data sign"
description = "Invert data sign or not"
type = "bool"
default = true
advanced = true

[tabs.tomodrgn_vae_train.data_dir]
name = "Input data directory"
description = "Path prefix to particle stack if loading relative paths from a .star or .cs file"
type = "path"
path = { type="folders" }
required = false
advanced = true

[tabs.tomodrgn_vae_train.use_ptl]
name = "Sample particles"
description = "Keep the first N particles in the sorted star file. Default -1 means to use all"
type = "int"
default = -1
advanced = true

[tabs.tomodrgn_vae_train.sequential_order]
name = "Sequential order"
description = "Supply particle images of one particle to encoder in starfile order"
type = "bool"
default = true
advanced = true

[tabs.tomodrgn_vae_train.epochs]
name = "Number of epochs"
description = "Number of training epochs"
type = "int"
default = 20

[tabs.tomodrgn_vae_train.batch]
name = "Batch size"
description = "Minibatch size"
type = "int"
default = 1

[tabs.tomodrgn_vae_train.wd]
name = "Weight decay"
description = "Weight decay in Adam optimizer"
type = "int"
default = 0
advanced = true

[tabs.tomodrgn_vae_train.lr]
name = "Learning rate"
description = "Learning rate in Adam optimizer"
type = "float"
default = 0.0001
advanced = true

[tabs.tomodrgn_vae_train.beta]
name = "Beta schedule"
description = "Choice of beta schedule or a constant for KLD weight (default: 1/zdim)"
type = "float"
advanced = true

[tabs.tomodrgn_vae_train.beta_control]
name = "Beta control"
description = "KL-Controlled VAE gamma. Beta is KL target"
type = "float"
advanced = true

[tabs.tomodrgn_vae_train.data_norm]
name = "Data normalization"
description = "Data normalization as shift, 1/scale (default: mean, std of dataset)"
type = "str"
default = "none"
advanced = true

[tabs.tomodrgn_vae_train.amp]
name = "Use mixed precision"
description = "Use mixed-precision training"
type = "bool"
default = false
advanced = true

# convergence_vae

[tabs.tomodrgn_vae_convergence]
_name = "tomoDRGN (convergence-vae)"
_description = "tomoDRGN (convergence-vae)"

[tabs.tomodrgn_vae_convergence.epoch_index]
name = "Epoch index"
description = "Latest epoch number N to analyze convergence (0-based indexing, corresponding to z.N.pkl, weights.N.pkl)"
type = "str"
default = "latest"

[tabs.tomodrgn_vae_convergence.epoch_interval]
name = "Epoch interval"
description = "Interval of epochs between calculating most convergence heuristics"
type = "int"
default = 5
advanced = true

[tabs.tomodrgn_vae_convergence.force_umapcpu]
name = "Force-umap-cpu"
description = "Override default UMAP GPU-bound implementation via cuML to use umap-learn library instead"
type = "bool"
default = false
advanced = true

[tabs.tomodrgn_vae_convergence.subset]
name = "Subset"
description = "Max number of particles to be used for UMAP calculations. 'None' means use all ptcls"
type = "int"
default = 50000
advanced = true

[tabs.tomodrgn_vae_convergence.randomseed]
name = "Random-seed"
description = "Manually specify the seed used for selection of subset particles (default: None)"
type = "int"
default = 0
advanced = true

[tabs.tomodrgn_vae_convergence.randomstate]
name = "Random-state"
description = "Random state seed used by UMAP for reproducibility at slight cost of performance"
type = "str"
default = "42"
advanced = true

[tabs.tomodrgn_vae_convergence.skip_umap]
name = "Skip UMAP"
description = "Requires that UMAP be precomputed for downstream calcs. Useful for tweaking volume generation settings"
type = "bool"
default = false
advanced = true

[tabs.tomodrgn_vae_convergence.nbins]
name = "N-bins"
description = "The number of bins along UMAP1 and UMAP2"
type = "int"
default = 30
advanced = true

[tabs.tomodrgn_vae_convergence.smooth]
name = "Smooth"
description = "Smooth the 2D histogram before identifying local maxima"
type = "bool"
default = true
advanced = true

[tabs.tomodrgn_vae_convergence.smooth_width]
name = "Smooth width"
description = "Width of gaussian kernel for smoothing 2D histogram expressed as multiple of one bin's width"
type = "float"
default = 1.0
advanced = true
condition = {arg="smooth", value="true"}

[tabs.tomodrgn_vae_convergence.pruned_maxima]
name = "Pruned-maxima"
description = "Prune poorly-separated maxima until this many maxima remain"
type = "int"
default = 12
advanced = true

[tabs.tomodrgn_vae_convergence.radius]
name = "Radius"
description = "Distance at which two maxima are considered poorly-separated and are candidates for pruning (Euclidean distance in bin-space)"
type = "float"
default = 5.0
advanced = true

[tabs.tomodrgn_vae_convergence.skip_vgen]
name = "Skip-volgen"
description = "Skip volume generation. Requires that volumes already exist for downstream CC + FSC calcs"
type = "bool"
default = false
advanced = true

[tabs.tomodrgn_vae_convergence.downsample]
name = "Downsample output"
description = "Downsample volumes to this box size (pixels)"
type = "int"
advanced = true
condition = {arg="skip_vgen", value="false"}

[tabs.tomodrgn_vae_convergence.lowpass]
name = "Lowpass (A)"
description = "Lowpass filter reconstructed volume. Defaults to FSC=0.143 correlation between half-maps"
type = "float"
default = 0
advanced = true
condition = {arg="skip_vgen", value="false"}

[tabs.tomodrgn_vae_convergence.flip]
name = "Flip handedness"
description = "Flip handedness of output volumes"
type = "bool"
default = false
advanced = true
condition = {arg="skip_vgen", value="false"}

[tabs.tomodrgn_vae_convergence.invert]
name = "Invert contrast"
description = "Invert contrast of output volumes"
type = "bool"
default = false
advanced = true
condition = {arg="skip_vgen", value="false"}

[tabs.tomodrgn_vae_convergence.final_maxima]
name = "Number of volumes to generate"
description = "Select this many local maxima, sorted by highest bin count after pruning, for which to generate volumes"
type = "int"
default = 10
advanced = true
condition = {arg="skip_vgen", value="false"}

[tabs.tomodrgn_vae_convergence.gt]
name = "Ground-truth"
description = "Relative path containing wildcards to ground_truth_vols*.mrc for map-map CC calcs"
type = "str"
default = "None"
advanced = true

[tabs.tomodrgn_vae_convergence.thresh]
name = "Mask threshold"
description = "Float, isosurface at which to threshold mask; default 0 uses 50th percentile"
type = "float"
default = 0
advanced = true

[tabs.tomodrgn_vae_convergence.dist]
name = "Mask soft edge"
description = "Number of voxels over which to apply a soft cosine falling edge from dilated mask boundary"
type = "int"
default = 10
advanced = true

[tabs.tomodrgn_vae_convergence.dilate]
name = "Mask dilate"
description = "Number of voxels to dilate thresholded isosurface outwards from mask boundary"
type = "int"
default = 3
advanced = true

# analyze

[tabs.tomodrgn_analyze]
_name = "tomoDRGN (analyze)"
_description = "tomoDRGN analysis"

[tabs.tomodrgn_analyze.epoch]
name = "Analysis epochs"
description = "Epoch number N to analyze (0-based indexing, corresponding to z.N.pkl, weights.N.pkl)"
type = "int"
default = -1

[tabs.tomodrgn_analyze.skipv]
name = "Skip volume generation"
description = "Skip generation of volumes"
type = "bool"
default = false
advanced = true

[tabs.tomodrgn_analyze.pc]
name = "Principal components"
description = "Number of principal component traversals to generate"
type = "int"
default = 2

[tabs.tomodrgn_analyze.pc_ondata]
name = "PC-ondata"
description = "Find closest on-data latent point to each PC percentile"
type = "bool"
default = false
advanced = true

[tabs.tomodrgn_analyze.ksample]
name = "K-means samples"
description = "Number of k-means samples to generate"
type = "int"
default = 100

[tabs.tomodrgn_analyze.skipumap]
name = "Skip UMAP"
description = "Skip running UMAP"
type = "bool"
default = false
advanced = true

[tabs.tomodrgn_analyze.flip]
name = "Flip handedness"
description = "Flip handedness of output volumes"
type = "bool"
default = false
advanced = true

[tabs.tomodrgn_analyze.invert]
name = "Invert contrast"
description = "Invert contrast of output volumes"
type = "bool"
default = false
advanced = true

[tabs.tomodrgn_analyze.downsample]
name = "Downsample output"
description = "Downsample volumes to this box size (pixels)"
type = "int"
advanced = true

[tabs.tomodrgn_analyze.lowpass]
name = "Lowpass (A)"
description = "Lowpass filter reconstructed volume. Defaults to FSC=0.143 correlation between half-maps"
type = "float"
default = 0
advanced = true

# eval_vol

[tabs.tomodrgn_eval_vol]
_name = "tomoDRGN (eval_vol)"
_description = "tomoDRGN eval_vol"

[tabs.tomodrgn_eval_vol.use_local_scratch]
name = "Save volumes to local scratch"
description = "Volumes will only be saved temporarily to local scratch"
type = "bool"
default = true

[tabs.tomodrgn_eval_vol.batch]
name = "Batch size"
description = "Minibatch size for analysis"
type = "int"
default = 1

[tabs.tomodrgn_eval_vol.lowpass]
name = "Lowpass (A)"
description = "Lowpass filter reconstructed volume. Defaults to FSC=0.143 correlation between half-maps"
type = "float"
default = 0

[tabs.tomodrgn_eval_vol.flip]
name = "Flip handedness"
description = "Flip handedness of output volumes"
type = "bool"
default = false

[tabs.tomodrgn_eval_vol.invert]
name = "Invert contrast"
description = "Invert contrast of output volumes"
type = "bool"
default = false

[tabs.tomodrgn_eval_vol.downsample]
name = "Downsample output"
description = "Downsample volumes to this box size (pixels)"
type = "int"

[tabs.tomodrgn_eval_vol.amp]
name = "Use mixed precision"
description = "Use mixed-precision training"
type = "bool"
default = true

# analyze_volumes

[tabs.tomodrgn_analyze_volumes]
_name = "tomoDRGN (analyze_volumes)"
_description = "tomoDRGN analyze_volumes"

[tabs.tomodrgn_analyze_volumes.num_pcs]
name = "Number of PCs"
description = "Keep this many PCs when saving PCA and running UMAP"
type = "int"
default = 128

[tabs.tomodrgn_analyze_volumes.ksample]
name = "K-means samples"
description = "Number of k-means samples to generate"
type = "int"
default = 100

[tabs.tomodrgn_analyze_volumes.mask]
name = "Mask type for volumes"
description = "Type of real space mask to generate for each volume when calculating voxel-PCA"
type = "enum"
enum = { none="none", soft="soft", tight="tight", sphere="sphere", file="file" }
default = "soft"

[tabs.tomodrgn_analyze_volumes.mask_path]
name = "Shape mask (*.mrc)"
description = "Read shape mask from mrc file"
type = "path"
path = { type="files" }
input = { type="initialModel" }
condition = { arg="mask", value="file" }

[tabs.tomodrgn_analyze_volumes.thresh]
name = "Mask threshold (percentile)"
description = "Isosurface percentile at which to threshold volume"
type = "float"
default = 0.99
condition = {arg="mask", value=["soft","tight"]}

[tabs.tomodrgn_analyze_volumes.dilate]
name = "Mask dilation (voxels)"
description = "Number of voxels to dilate thresholded isosurface outwards from mask boundary (0=1/30th of box size)"
type = "int"
default = 0
condition = {arg="mask", value="soft"}

[tabs.tomodrgn_analyze_volumes.dist]
name = "Cosine falloff edge (voxels)"
description = "Number of voxels over which to apply a soft cosine falling edge from dilated mask boundary (0=1/30th of box size)"
type = "int"
default = 0
condition = {arg="mask", value="soft"}

# isolate particle subsets

[tabs.tomodrgn_filter_star]
_name = "tomoDRGN (filter_star)"
_description = "tomoDRGN filter_star"

[tabs.tomodrgn_filter_star.method]
name = "Filtering method"
description = "Method to filter particles"
type = "enum"
enum = { classids="list of class IDs", indices="indices file (*.pkl)" }
default = "classids"

[tabs.tomodrgn_filter_star.classes]
name = "Class IDs to keep"
description = "Comma separated list of selected classes"
type = "str"
default = ""
condition = {arg="method", value="classids"}

[tabs.tomodrgn_filter_star.pklfile]
name = "File name (*.pkl)"
description = "Pickle file with indices to keep"
type = "path"
path = { type="files" }
condition = {arg="method", value="indices" }

[tabs.tomodrgn_filter_star.check_reconstruction]
name = "Generate reconstruction after filtering"
description = "Calculate reconstruction using only clean particles"
type = "bool"
default = false

[tabs.tomodrgn_filter_star.discard]
name = "Permanently remove particles"
description = "Permanently remove particles (WARNING: this cannot be undone!)"
type = "bool"
default = false

# TODO: backproject-voxel, train-nn

[tabs.tomodrgn_rec]
_name = "Homogeneous reconstruction"
_description = "Homogeneous reconstruction using tomoDRGN"

[tabs.tomodrgn_rec.mode]
name = "Operation"
description = "tomoDRGN command to run"
type = "enum"
enum = {backproject_voxel="backproject-voxel (homogeneous reconstruction)", train_nn="train-nn (homogeneous reconstruction with decoder-only network)"}
default = "backproject_voxel"

[tabs.tomodrgn_rec.use_first_nptcls]
name = "Use first N particles"
description = "Number of particles to use for reconstruction. Default: -1 (use all particles)"
type = "int"
default = -1
condition = {arg="mode", value="backproject_voxel"}
hidden = [ "tomo_drgn_eval" ]

[tabs.tomodrgn_rec.sort_ptcl_imgs]
name = "Sort star file images"
description = "Sort on a per-particle basis by the specified criteria"
type = "enum"
enum = {unsorted="unsorted", dose_ascending="dose_ascending", random="random"}
default = "unsorted"
condition = {arg="mode", value="backproject_voxel"}
hidden = [ "tomo_drgn_eval" ]

[tabs.tomodrgn_rec.lowpass]
name = "Lowpass (A)"
description = "Lowpass filter reconstructed volume. Defaults to FSC=0.143 correlation between half-maps"
type = "float"
default = 0
condition = {arg="mode", value="backproject_voxel"}

[tabs.tomodrgn_rec.flip]
name = "Flip handedness"
description = "Flip handedness of output volume"
type = "bool"
default = false
condition = {arg="mode", value="backproject_voxel"}
hidden = [ "tomo_drgn_train" ]

# convergence_nn
[tabs.tomodrgn_rec.ref]
name = "Reference volume"
description = "Volume against which to calculate FSC"
type = "path"
path = { type="files" }
input = { type="initialModel" }
condition = {arg="mode", value="convergence_nn"}
hidden = [ "tomo_drgn_eval" ]

[tabs.tomodrgn_rec.max_epoch]
name = "Max epoch"
description = "Maximum epoch for which to calculate FSCs (default: None)"
type = "int"
default = 0
condition = {arg="mode", value="convergence_nn"}

[tabs.tomodrgn_rec.dc]
name = "Include-DC"
description = "Include FSC calculation for DC component, default False because DC component default excluded during training"
type = "bool"
default = false
condition = {arg="mode", value="convergence_nn"}

[tabs.tomodrgn_rec.fscmask]
name = "FSC-mask"
description = "Type of mask applied to volumes before calculating FSC"
type = "enum"
enum = { none="none", sphere="sphere", tight="tight", soft="soft" }
default = "soft"
condition = {arg="mode", value="convergence_nn"}

# Sub-Volume Averaging

[tabs.sva]
_name = "Sub-tomogram averaging"
_description = "Settings for sub-tomogram averaging using 3DAVG"

[tabs.sva.mode]
name = ""
description = ""
type = "enum"
enum = { 0="", 1="", 2="", 3="" }
default = "0"

[tabs.sva.iter]
name = ""
description = ""
type = "int"
default = 1

[tabs.sva.mask]
name = ""
description = ""
type = "str"
default = "25,25,25"

[tabs.sva.tol_shifts]
name = ""
description = ""
type = "float"
default = 10.0

[tabs.sva.tol_angle]
name = ""
description = ""
type = "int"
default = 10

[tabs.sva.zcorr]
name = ""
description = ""
type = "int"
default = 10

[tabs.sva.highpass]
name = ""
description = ""
type = "str"
default = "0.05,0.01"

[tabs.sva.lowpass]
name = ""
description = ""
type = "str"
default = "0.25,0.05"

[tabs.sva.cpu]
name = ""
description = ""
type = "int"
default = 320

[tabs.sva.filter_map]
name = ""
description = ""
type = "str"

[tabs.sva.plot]
name = ""
description = ""
type = "bool"
default = false

# Post-processing Parameters (relion_postprocess)

# +++ RELION: command line arguments (with defaults for optional ones between parantheses) +++

[tabs.sharpen]
_name = "Post-processing"
_description = "Parameters for map sharpening"

[tabs.sharpen.input_map]
name = "First half map (*_half1.mrc)"
description = "Input half map"
type = "path"
path = { type="files" }
input = { type="halfMap" }
required = true

# Input mask file name [mask.mrc]                    :

[tabs.sharpen.masking_method]
name = "Masking method"
description = "Method used for masking"
type = "enum"
enum = { auto="auto", external="from file" }
default = "auto"

[tabs.sharpen.mask]
name = "Mask file (*.mrc)"
description = "Apply mask from mrc file"
type = "path"
path = { type="files" }
input = { type="initialModel" }
condition = { arg="masking_method", value="external" }

# Auto mask 
[tabs.sharpen.automask_lp]
name = "Lowpass filter (A)"
description = "Lowpass filter for auto-masking purposes"
type = "float"
default = 14.0
condition = { arg="masking_method", value="auto" }

[tabs.sharpen.masking_threshold_method]
name = "Thresholding strategy"
description = "Strategy used for thresholding"
type = "enum"
enum = { intensity="intensity", volume="volume", sigma="std" }
default = "intensity"
condition = { arg="masking_method", value="auto" }

[tabs.sharpen.automask_threshold]
name = "Threshold value"
description = "Absolute threshold to generate the initial binary mask"
type = "float"
default = 0.0
condition = { arg="masking_threshold_method", value="intensity" }

[tabs.sharpen.automask_fraction]
name = "Volume fraction"
description = "Use fraction of voxels with highest density to determine threshold for masking"
type = "float"
default = 0.0
condition = { arg="masking_threshold_method", value="volume" }

[tabs.sharpen.automask_sigma]
name = "STDs above mean"
description = "Number of standard deviations above the mean density to determine threshold for masking"
type = "float"
default = 1.0
condition = { arg="masking_threshold_method", value="sigma" }

# filter final maps
[tabs.sharpen.gaussian]
name = "Apply Gaussian filter"
description = "Apply gaussian filter to final map"
type = "bool"
default = false

[tabs.sharpen.lowpass]
name = "Lowpass cutoff (A)"
description = "Lowpass frequency cutoff"
type = "str"
default = "auto"
condition = { arg="gaussian", value="true" }

[tabs.sharpen.highpass]
name = "Highpass cutoff (A)"
description = "Highpass frequency cutoff (-1.0 = Nyquist)"
type = "float"
default = -1.0
condition = { arg="gaussian", value="true" }

# fsc filter
[tabs.sharpen.skip_fsc_weighting]
name = "Skip FSC weighting"
description = "Do not apply FSC weighting"
type = "bool"
default = false

[tabs.sharpen.apply_fsc2]
name = "Apply FSC square filter"
description = "Apply the square of the FSC curve as a filter"
type = "bool"
default = false

[tabs.sharpen.bfactor_method]
name = "B-factor method"
description = "Method used for B-factor sharpening"
type = "enum"
enum = { auto="auto", adhoc="adhoc" }
default = "auto"

# bfactor
[tabs.sharpen.auto_bfac_low]
name = "Low resolution limit (A)"
description = "Estimate B-factor using information above this resolution"
type = "float"
default = 10.0
condition = { arg="bfactor_method", value="auto" }

# bfactor
[tabs.sharpen.auto_bfac_high]
name = "High resolution limit (A)"
description = "Estimate B-factor using information below this resolution (0.0 = Nyquist)"
type = "float"
default = 0.0
condition = { arg="bfactor_method", value="auto" }

[tabs.sharpen.adhoc_bfac]
name = "Adhoc value (A^2)"
description = "Apply ad-hoc B-factor (positive=smoothing, negative=sharpening)"
type = "float"
default = 0.0
condition = { arg="bfactor_method", value="adhoc" }

[tabs.sharpen.randomize_method]
name = "Phase randomization method"
description = "Method used for phase randomization"
type = "enum"
enum = { fsc="fsc", resolution="resolution" }
default = "resolution"

[tabs.sharpen.randomize_below_fsc]
name = "FSC threshold"
description = "Randomize phases beyond the point where the FSC drops below this value"
type = "float"
default = 1
condition = { arg="randomize_method", value="fsc" }

[tabs.sharpen.randomize_beyond]
name = "Resolution limit (A)"
description = "Randomize phases beyond this resolution"
type = "float"
default = 10.0
condition = { arg="randomize_method", value="resolution" }

[tabs.sharpen.flip_x]
name = "Invert handedness along x-axis"
description = "Invert handedness of input volume along the x-axis"
type = "bool"
default = false

[tabs.sharpen.flip_y]
name = "Invert handedness along y-axis"
description = "Invert handedness of input volume along the y-axis"
type = "bool"
default = false

[tabs.sharpen.flip_z]
name = "Invert handedness along z-axis"
description = "Invert handedness of input volume along the z-axis"
type = "bool"
default = false

[tabs.sharpen.mtf]
name = "MTF file"
description = "File containing the detector MTF"
type = "path"
path = { type="files" }
hidden = true

[tabs.sharpen.plot_rhref]
name = "Plot refinement resolution"
description = "Resolution limit in Angstroms used during refinement, to be displayed on the FSC plots"
type = "bool"
default = false
hidden = true

# Input reconstruction statistics
# [statistics_r01.txt]                               :

[tabs.sharpen_cistem]
_name = "Post-processing using cistem"
_description = "Parameters for map sharpening"

[tabs.sharpen_cistem.input_map]
name = "Input half1 map"
description = "Input map (half1 mrc file)"
type = "path"
path = { type="files" }
input = { type="initialModel" }
required = true

[tabs.sharpen_cistem.statistics]
name = "Input reconstruction statistics"
description = "The table listing FSC, Part_FSC, Part_SSNR and Rec_SSNR"
type = "path"
path = { type="files" }

# Use statistics [Yes]                               :

[tabs.sharpen_cistem.use_statistics]
name = "Use statistics"
description = "Whether statistics should be used"
type = "bool"
default = false

# Inner mask radius (A) [0.0]                        :

[tabs.sharpen_cistem.inner_mask_radius]
name = "Inner mask radius (A)"
description = "Inner radius of mask to be applied to the input map"
type = "float"
default = 0.0

# Outer mask radius (A) [100.0]                      :

[tabs.sharpen_cistem.outer_mask_radius]
name = "Outer mask radius (A)"
description = "Outer radius of mask to be applied to the input map"
type = "float"
default  = 100.0

# Low-res B-Factor (A^2) [0.0]                       :

[tabs.sharpen_cistem.low_res_bfactor]
name = "Low resolution B-factor"
description = "B-factor to be applied to the non-flattened part of the amplitude spectrum (A^2)"
type = "float"
default = 0.0

# High-res B-Factor (A^2) [0.0]                      :

[tabs.sharpen_cistem.high_res_bfactor]
name = "High resolution B-factor"
description = "B-factor to be applied to the flattened part of the amplitude spectrum (A^2)"
type = "float"
default = 0.0

# Low resolution limit for spectral flattening (A)[8.0]:

[tabs.sharpen_cistem.low_res_flattening]
name = "Low-resolution limit (A)"
description = "Resolution of low-pass filter applied to final output maps"
type = "float"
default = 8.0

# High resolution limit (A) [3.0]                    :

[tabs.sharpen_cistem.high_res_limit]
name = "High-resolution limit (A)"
description = "Resolution of low-pass filter applied to final output maps"
type = "float"
default = 3.0

# Filter edge width (A) [20.0]                       :

[tabs.sharpen_cistem.filter_edge_width]
name = "Filter edge width (A)"
description = "Cosine edge used with the low-pass filter"
type = "float"
default = 20.0

# Part_SSNR scale factor [1.0]                       :

[tabs.sharpen_cistem.part_ssnr_scale]
name = "Part_SSNR scale factor"
description = "Scale the Part_SSNR curve to account for disordered regions in the map"
type = "float"
default = 1.0

# Use 3D mask [No]                                   :

[tabs.sharpen_cistem.use_mask]
name = "Use 3D mask"
description = "Should the 3D mask be used to mask the input map before sharpening?"
type = "bool"
default = false

# Invert handedness [No]                             :

[tabs.sharpen_cistem.invert_handedness]
name = "Invert handedness"
description = "Should the map handedness be inverted?"
type = "bool"
default = false

# Post-processing Parameters (relion_postprocess)

# +++ RELION: command line arguments (with defaults for optional ones between parantheses) +++

[tabs.sharpen_relion]
_name = "Post-processing"
_description = "Parameters for map sharpening"

# ====== General options =====
#                                 --i : Input name of half1, e.g. run_half1_class001_unfil.mrc
#                             --i2 () : Input name of half2, (default replaces half1 from --i with half2)
#                   --o (postprocess) : Output rootname
#                       --angpix (-1) : Pixel size in Angstroms
#                 --half_maps (false) : Write post-processed half maps for validation
#                  --mtf_angpix (-1.) : Pixel size in the original micrographs/movies (in Angstroms)
#                    --molweight (-1) : Molecular weight (in kDa) of ordered protein mass

[tabs.sharpen_relion.first_half]
name = "Half-map 1"
description = "First half-map (mrc file)"
type = "path"
path = { type="files" }
required = true

[tabs.sharpen_relion.second_half]
name = "Half-map 2"
description = "Second half-map (mrc file)"
type = "path"
path = { type="files" }
required = true

# ====== Masking options =====
#                 --auto_mask (false) : Perform automated masking, based on a density threshold
#          --inimask_threshold (0.02) : Density at which to threshold the map for the initial seed mask
#               --extend_inimask (3.) : Number of pixels to extend the initial seed mask
#              --width_mask_edge (6.) : Width for the raised cosine soft mask edge (in pixels)
#                           --mask () : Filename of a user-provided mask (1=protein, 0=solvent, all values in range [0,1])
#                --force_mask (false) : Use the mask even when the masked resolution is worse than the unmasked resolution

[tabs.sharpen_relion.auto_mask]
name = "Calculate mask from map"
description = "Relion auto-mask"
type = "bool"
default = false

[tabs.sharpen_relion.inimask_threshold]
name = "inimask_threshold"
description = "Perform automated masking, based on a density threshold"
type = "float"
default = 0.02

[tabs.sharpen_relion.extend_inimask]
name = "extend_inimask"
description = "Number of pixels to extend the initial seed mask"
type = "int"
default = 3

[tabs.sharpen_relion.width_mask_edge]
name = "width_mask_edge"
description = "Width for the raised cosine soft mask edge (pixels)"
type = "int"
default = 6

[tabs.sharpen_relion.mask]
name = "mask"
description = "Filename of a user-provided mask (1=protein, 0=solvent, all values in range [0,1])"
type = "path"
path = { type="files" }

[tabs.sharpen_relion.force_mask]
name = "force_mask"
description = "Use the mask even when the masked resolution is worse than the unmasked resolution"
type = "bool"
default = false

# ====== Sharpening options =====
#                            --mtf () : User-provided STAR-file with the MTF-curve of the detector
#                 --auto_bfac (false) : Perform automated B-factor determination (Rosenthal and Henderson, 2003)
#                --autob_lowres (10.) : Lowest resolution (in A) to include in fitting of the B-factor
#                --autob_highres (0.) : Highest resolution (in A) to include in fitting of the B-factor
#                   --adhoc_bfac (0.) : User-provided B-factor (in A^2) for map sharpening, e.g. -400

[tabs.sharpen_relion.mtf]
name = "MTF curve"
description = "User-provided STAR-file with the MTF-curve of the detector"
type = "path"
path = { type="files" }

[tabs.sharpen_relion.auto_bfac]
name = "auto_bfac"
description = "Perform automated B-factor determination (Rosenthal and Henderson, 2003)"
type = "bool"
default = false

[tabs.sharpen_relion.autob_lowres]
name = "autob_lowres (A)"
description = "Lowest resolution to include in fitting of the B-factor"
type = "float"
default = 10

[tabs.sharpen_relion.autob_highres]
name = "autob_highres (A)"
description = "Highest resolution to include in fitting of the B-factor"
type = "float"
default = 0

[tabs.sharpen_relion.adhoc_bfac]
name = "adhoc_bfac"
description = "User-provided B-factor (A^2) for map sharpening, e.g. -400"
type = "float"

# ====== Filtering options =====
#        --skip_fsc_weighting (false) : Do not use FSC-weighting (Rosenthal and Henderson, 2003) in the sharpening process
#                      --low_pass (0) : Resolution (in Angstroms) at which to low-pass filter the final map (0: disable, negative: resolution at FSC=0.143)

[tabs.sharpen_relion.skip_fsc_weighting]
name = "skip_fsc_weighting"
description = "Do not use FSC-weighting (Rosenthal and Henderson, 2003) in the sharpening process"
type = "bool"
default = false

[tabs.sharpen_relion.low_pass]
name = "low_pass (A)"
description = "Resolution at which to low-pass filter the final map (0: disable, negative: resolution at FSC=0.143)"
type = "float"
default = 0

# ====== Local-resolution options =====
#                    --locres (false) : Perform local resolution estimation
#             --locres_sampling (25.) : Sampling rate (in Angstroms) with which to sample the local-resolution map
#               --locres_maskrad (-1) : Radius (in A) of spherical mask for local-resolution map (default = 0.5*sampling)
#              --locres_edgwidth (-1) : Width of soft edge (in A) on masks for local-resolution map (default = sampling)
#         --locres_randomize_at (25.) : Randomize phases from this resolution (in A)
#               --locres_minres (50.) : Lowest local resolution allowed (in A)

[tabs.sharpen_relion.locres]
name = "locres"
description = "Perform local resolution estimation"
type = "bool"
default = false

[tabs.sharpen_relion.locres_sampling]
name = "locres_sampling (A)"
description = "Sampling rate with which to sample the local-resolution map"
type = "float"
default = 25

[tabs.sharpen_relion.locres_maskrad]
name = "locres_maskrad (A)"
description = "Radius of spherical mask for local-resolution map (default = 0.5*sampling)"
type = "float"
default = -1

[tabs.sharpen_relion.locres_edgwidth]
name = "locres_edgewidth (A)"
description = "Width of soft edge on masks for local-resolution map (default = sampling)"
type = "float"
default = -1

[tabs.sharpen_relion.locres_randomize_at]
name = "locres_randomize_at (A)"
description = "Randomize phases from this resolution"
type = "float"
default = 25

[tabs.sharpen_relion.locres_minres]
name = "locres_minres (A)"
description = "Lowest local resolution allowed"
type = "float"
default = 50

# ====== Expert options =====
#                 --ampl_corr (false) : Perform amplitude correlation and DPR, also re-normalize amplitudes for non-uniform angular distributions
#            --randomize_at_fsc (0.8) : Randomize phases from the resolution where FSC drops below this value
#               --randomize_at_A (-1) : Randomize phases from this resolution (in A) onwards (if positive)
#             --filter_edge_width (2) : Width of the raised cosine on the low-pass filter edge (in resolution shells)
#                          --verb (1) : Verbosity
#                   --random_seed (0) : Seed for random number generator (negative value for truly random)
#                           --version : Print RELION version and exit

[tabs.sharpen_relion.ampl_corr]
name = "ampl_corr"
description = "Perform amplitude correlation and DPR, also re-normalize amplitudes for non-uniform angular distributions"
type = "bool"
default = false

[tabs.sharpen_relion.randomize_at_fsc]
name = "randomize_at_fsc"
description = "Randomize phases from the resolution where FSC drops below this value"
type = "float"
default = 0.8

[tabs.sharpen_relion.randomize_at_A]
name = "randomize_at_A (A)"
description = "Randomize phases from this resolution onwards (if positive)"
type = "float"
default = -1

[tabs.sharpen_relion.filter_edge_width]
name = "filter_edge_width"
description = "Width of the raised cosine on the low-pass filter edge (resolution shells)"
type = "int"
default = 2

[tabs.sharpen_relion.random_seed]
name = "random_seed"
description = "Seed for random number generator (negative value for truly random)"
type = "float"
default = 0

####################
# Mask parameters
####################

[tabs.mask]
_name = "Masking"
_description = "Parameters for generating shape mask"

[tabs.mask.model]
name = "Input map (*.mrc)"
description = "Map used to generate shape mask"
type = "path"
path = { type="files" }
input = { type="initialModel" }
required = true

[tabs.mask.threshold]
name = "Threshold for binarization"
description = "Binarization threshold to create shape mask"
type = "float"
required = true

[tabs.mask.normalized]
name = "Use normalized threshold"
description = "Threshold value is in range [0,1] (in terms of min and max density values)"
type = "bool"
default = true

[tabs.mask.lowpass]
name = "Low-pass cutoff (A)"
description = "Apply low-pass filter before creating shape mask"
type = "float"
default = 10.0

[tabs.mask.edge_width]
name = "Width of cosine edge (pixels)"
description = "Width of the smooth edge to add to the mask"
type = "int"
default = 4

[tabs.mask.outside_weight]
name = "Density weight outside mask"
description = "Weight applied to area outside mask (0=no contribution, 1=no masking)"
type = "float"
default = 0.0

#####################
# Cleaning parameters
#####################

[tabs.clean]
_name = "Particle filtering"
_description = "Parameters for cleaning/filtering particles"

[tabs.clean.parfile]
name = "Input parameter file (*.bz2)"
description = "Parfile used to compute average scores per particle"
type = "path"
path = { type="files" }
input = { type="parfile" }
required = true
copyToNewBlock = false

[tabs.clean.spr_auto]
name = "Automatic score threshold"
description = "Automatically determine score threshold based on bimodal distribution of scores"
type = "bool"
default = false
required = false
hidden = [ "tomo_initial_refine", "tomo_reference_refine", "tomo_coarse_refine", "tomo_new_coarse_refine", "tomo_new_coarse_classification"]
copyToNewBlock = false

[tabs.clean.threshold]
name = "Score threshold"
description = "Remove particles with scores lower than this threshold"
type = "float"
default = 0.0
copyToNewBlock = false
condition = { arg="spr_auto", value="false" }

[tabs.clean.dist]
name = "Min distance between particles (unbinned pixels/voxels)"
description = "Distance cutoff to remove neighboring particles"
type = "float"
default = 0.0
hidden = ["spr_fine_refine", "spr_coarse_refine"]
copyToNewBlock = false

[tabs.clean.mintilt]
name = "Lowest tilt-angle (degrees)"
description = "Only keep projections with tilt-angles above this limit"
type = "float"
default = -90.0
hidden = ["spr_map_clean", "spr_coarse_refine"]
copyToNewBlock = false

[tabs.clean.maxtilt]
name = "Highest tilt-angle (degrees)"
description = "Only keep projections with tilt-angles below this limit"
type = "float"
default = 90.0
hidden = ["spr_map_clean", "spr_coarse_refine"]
copyToNewBlock = false

[tabs.clean.min_num_projections]
name = "Min number of projections per particle"
description = "Remove particles that do not have enough valid projections"
type = "int"
default = 1
hidden = ["spr_map_clean", "spr_coarse_refine"]
copyToNewBlock = false

[tabs.clean.class_selection]
name = "Classes to keep"
description = "Comma separated list of classes to keep"
type = "str"
default = ""
required = false
copyToNewBlock = false

[tabs.clean.min_occ]
name = "Min occupancy"
description = "Keep particles with occupancies above this value (0-100)"
type = "float"
default = 50.0
hidden = ["spr_map_clean", "spr_coarse_refine"]
copyToNewBlock = false

[tabs.clean.class_merge_alignment]
name = "Use best alignments during merging"
description = "When merging multiple classes, use alignment parameters from class with largest occupancy"
type = "bool"
default = false
required = false
copyToNewBlock = false

[tabs.clean.check_reconstruction]
name = "Generate reconstruction after filtering"
description = "Calculate reconstruction using only clean particles"
type = "bool"
default = false
copyToNewBlock = false

[tabs.clean.discard]
name = "Permanently remove particles"
description = "Permanently remove particles (WARNING: this cannot be undone!)"
type = "bool"
default = false
copyToNewBlock = false

[tabs.clean.export_clean]
name = "Export clean particle coordinates"
description = "Save clean particle coordinates to frealign/selected_particles/"
type = "bool"
default = false
copyToNewBlock = false
condition = { arg="discard", value="true" }

###################
# Daemon parameters
###################

[tabs.stream]
_name = "Session settings"
_description = "Parameters to control the processing daemon"

[tabs.stream.session_name]
name = "Session name"
description="Name of session"
type = "str"
required = false
hidden = true

[tabs.stream.session_group]
name = "Group name"
description="Name of group"
type = "str"
required = false
hidden = true

[tabs.stream.session_timeout]
name = "Session timeout (days)"
description="How long should the session run for"
type = "int"
default = 5
hidden = true

[tabs.stream.scope_profile]
name = "Scope profile"
description="Name of scope profile to use from configuration file"
type = "str"
default = "None"
hidden = true

[tabs.stream.camera_profile]
name = "Camera profile"
description="Name of camera profile to use from configuration file"
type = "str"
default = "None"
hidden = true

[tabs.stream.file]
name = "File name to process"
description="Name of file to process"
type = "str"
default = "None"
hidden = true

[tabs.stream.transfer_all]
name = "Transfer additional files"
description="Also transfer additional files to the session folder"
type = "bool"
default = false

[tabs.stream.transfer_fileset]
name = "Additional files to transfer"
 description = "Comma separated list of additional files to transfer (e.g., .rawtlt,.mdoc)"
type = "str"
default = ""
required = false
condition = { arg="transfer_all", value="true" }

[tabs.stream.num_tilts]
name = "Number of tilts"
description="Total number of tilts in series"
type = "int"
default = 1
required = false
hidden = ["stream_spr"]

[tabs.stream.tilt_angles]
name = "Tilt-angles"
description="Comma separated list of tilt-angles"
type = "str"
default = ""
hidden = ["stream_spr"]

[tabs.stream.tilt_order]
name = "Tilt-order"
description="Comma separated list of acquistion order (base-0)"
type = "str"
default = ""
hidden = ["stream_spr"]

[tabs.stream.transfer_local]
name = "Skip pre-processing (data transfer only)"
description="Run data transfer only (do not start the pre-processing daemon)"
type = "bool"
default = false

[tabs.stream.transfer_target]
name = "Target directory"
description="Directory where all the output will be saved"
type = "path"
path = { type="folders" }
required = false
hidden = true

[tabs.stream.transfer_remote]
name = "Clean after transfer"
description="Remove files after successful transfer (including all redundant files)"
type = "bool"
default = false
hidden = true

[tabs.stream.transfer_operation]
name = "Raw data transfer"
description="Whether to move, copy or link the raw data from the original destination to the session folder"
type = "enum"
enum = { move="move", copy="copy", link="link" }
default = "link"

[tabs.stream.transfer_restart]
name = "Restart transfer"
description="Clear history of transferred files"
type = "bool"
default = false

[tabs.stream.compress]
name = "Movie data compression"
description="Select format to compress movie data"
type = "enum"
enum = { none="none", tif="tif", tbz="tbz" }
default = "none"

[tabs.stream.transfer_age]
name = "Minimum file age (minutes)"
description="Only transfer files that are older than given age"
type = "int"
default = 2

[tabs.stream.process_format]
name = "Output format"
description="Image file format to save frame averages (mrc,tif)"
type = "enum"
enum = { mrc="mrc", tif="tif" }
default = "tif"
hidden = true

#####################
# Import parameters #
#####################

[tabs.import]
_name = "Import parameters"
_description = "Parameters for importing star files"

[tabs.import.mode]
name = "Metadata source type"
description = "Single Particle Analysis or Tomography metadata to be converted (SPA_PAR, SPA_STAR, TOMO_PAR, TOMO_STAR)"
type = "str"
default = "SPA_STAR"
hidden = true

[tabs.import.enable]
name = "Convert par to star"
description ="Do the conversion from PYP to RELION"
type = "bool"
default = false
hidden = true

[tabs.import.read_star]
name = "Get metadata from star"
description = "Read metadata from RELION star to PYP"
type = "bool"
default = false
hidden = true

[tabs.import.relion_path]
name = "Relion project path"
description = "Path to the Relion project"
type = "path"
path = { type="folders" }
required = false

[tabs.import.tomo_star]
name = "Tomograms file (*.star)"
description = "Star file from Relion Tomograms job (e.g., tomograms.star)"
type = "path"
path = { type="files" }
input = { type="starfile" }
hidden = [ "spr_import_star" ]
required = false

[tabs.import.refine_star]
name = "3D refinement file (*.star)"
description = "Star file from Relion Refine3D job (e.g., run_it012_data.star)"
type = "path"
path = { type="files" }
input = { type="starfile" }
required = false

[tabs.import.motion_star]
name = "Motion file (*.star)"
description = "Star file from Relion MotionCor job (e.g., corrected_micrographs.star)"
type = "path"
path = { type="files" }
input = { type="starfile" }
required = false
hidden = [ "tomo_import_star" ]

[tabs.import.tomo_star_version]
name = "Relion version"
description = "Version of Relion to import from"
type = "enum"
enum = { version4="4", version5="5" }
default = "version4"
required = false
hidden = [ "spr_import_star" ]

[tabs.import.tomo_motion_star]
name = "Motion file (*.star)"
description = "Star file from Relion MotionCor job (e.g., corrected_tilt_series.star)"
type = "path"
path = { type="files" }
input = { type="starfile" }
condition = { arg="tomo_star_version", value="version5" }
required = false

[tabs.import.tilt_series_star]
name = "Aligned tilt-series file (*.star)"
description = "Star file from Relion AlignTiltSeries job (e.g., AlignTiltSeries/job005/aligned_tilt_series.star)"
type = "path"
path = { type="files" }
input = { type="starfile" }
hidden = [ "spr_import_star" ]
condition = { arg="tomo_star_version", value="version5" }
required = false

##################
# Slurm parameters
##################

[tabs.slurm]
_name = "Resources"
_description = "Parameters to control jobs submission using the SLURM scheduler"

[tabs.slurm.verbose]
name = "Verbose mode"
description = "Provide more information when running jobs"
type = "bool"
default = false

[tabs.slurm.tasks]
name = "Split, Threads"
description = "Number of threads used for processing each micrograph/tilt-series"
type = "int"
default = 1
hidden = [ "spr_import_raw", "tomo_import_raw", "spr_tomo_map_mask", "tomo_mask", "spr_tomo_post_process" ]

[tabs.slurm.memory_per_task]
name = "Split, Memory per thread (GB)"
description = "Amount of memory per thread to request for Split job"
type = "int"
default = 4
hidden = [ "spr_import_raw", "tomo_import_raw", "spr_tomo_map_mask", "tomo_mask", "spr_tomo_post_process" ]
advanced = true

[tabs.slurm.memory]
name = "Split, Memory (GB)"
description = "Amount of memory for Split job"
type = "int"
default = 4
hidden = true

[tabs.slurm.zombie]
name = "Split, Timeout for zombie jobs (minutes)"
description = "Delete scratch folders from Split jobs that have been idle for this long"
type = "int"
default = 600
advanced = true

[tabs.slurm.bundle_size]
name = "Split, Bundle size"
description = "Number of micrographs/tilt-series to process sequentially in a Split job"
type = "int"
default = 1
hidden = [ "map_post_process", "spr_import_raw", "tomo_import_raw", "spr_tomo_map_mask", "tomo_mask", "spr_tomo_post_process", "tomo_particles_train", "tomo_milo_train", "tomo_denoise_train", "tomo_drgn_vae", "tomo_drgn_analyze", "spr_drgn" ]
advanced = true

[tabs.slurm.max_cpus]
name = "Split, Total threads"
description = "Limit overall number of threads that can run simultaneously (0=follow slurm limits)"
type = "int"
default = 0
hidden = [ "map_post_process", "stream_spr", "stream_tomo", "spr_import_raw", "tomo_import_raw", "spr_tomo_map_mask", "tomo_mask", "spr_tomo_post_process" ]
advanced = true

[tabs.slurm.max_memory]
name = "Split, Total memory (GB)"
description = "Limit the total amount of memory that can be used simultaneously (0=follow slurm limits)"
type = "int"
default = 0
hidden = [ "map_post_process", "stream_spr", "stream_tomo", "spr_import_raw", "tomo_import_raw", "spr_tomo_map_mask", "tomo_mask", "spr_tomo_post_process" ]
advanced = true

[tabs.slurm.gres]
name = "Split, Gres"
description = "List of generic resource scheduling options (e.g., shrd=64,gpu:H100:1)"
type = "str"
default = ""
hidden = [ "spr_import_raw", "tomo_import_raw", "spr_tomo_map_mask", "tomo_mask", "spr_tomo_post_process" ]
advanced = true

[tabs.slurm.account]
name = "Split, Slurm account"
description = "Charge resources used by this job to specified account"
type = "str"
default = ""
hidden = true

[tabs.slurm.walltime]
name = "Split, Walltime (dd-hh:mm:ss)"
description = "Max running time for Split job"
type = "str"
default = "1-00:00:00"
hidden = [ "spr_import_raw", "tomo_import_raw", "spr_tomo_map_mask", "tomo_mask", "spr_tomo_post_process" ]
advanced = true

[tabs.slurm.queue]
name = "Split, CPU partition"
description = "SLURM partition to submit CPU jobs"
type = "str"
input = { type="slurmQueue", group="cpu" }
hidden = true

[tabs.slurm.queue_gpu]
name = "Split, GPU partition"
description = "SLURM partition to submit GPU jobs"
type = "str"
input = { type="slurmQueue", group="gpu" }
hidden = true

[tabs.slurm.merge_tasks]
name = "Merge, Threads"
description = "Number of threads used for Merge job"
type = "int"
default = 6
hidden = ["stream_spa", "stream_tomo", "map_post_process", "stream_spr", "tomo_spr", "spr_import_raw", "tomo_import_raw", "spr_tomo_map_mask", "tomo_mask", "spr_tomo_post_process", "tomo_particles_train", "tomo_milo_train", "tomo_denoise_train", "tomo_drgn_vae", "tomo_drgn_analyze", "spr_drgn"]

[tabs.slurm.merge_memory_per_task]
name = "Merge, Memory per thread (GB)"
description = "Amount of memory per thread for Merge job"
type = "int"
default = 4
hidden = ["stream_spa", "stream_tomo", "map_post_process", "stream_spr", "tomo_spr", "spr_import_raw", "tomo_import_raw", "spr_tomo_map_mask", "tomo_mask", "spr_tomo_post_process", "tomo_particles_train", "tomo_milo_train", "tomo_denoise_train", "tomo_drgn_vae", "tomo_drgn_analyze", "spr_drgn"]
advanced = true

[tabs.slurm.merge_memory]
name = "Merge, Memory (GB)"
description = "Amount of memory for Merge job"
type = "int"
default = 4
hidden = true

[tabs.slurm.merge_gres]
name = "Merge, Gres"
description = "List of generic resource scheduling options (e.g., lscratch:500,shrd=64)"
type = "str"
default = ""
hidden = ["stream_spa", "stream_tomo", "map_post_process", "stream_spr", "tomo_spr", "spr_import_raw", "tomo_import_raw", "spr_tomo_map_mask", "tomo_mask", "spr_tomo_post_process", "tomo_particles_train", "tomo_milo_train", "tomo_denoise_train", "tomo_drgn_vae", "tomo_drgn_analyze", "spr_drgn"]
advanced = true

[tabs.slurm.merge_account]
name = "Merge, Slurm account"
description = "Charge resources used by Merge job to specified account"
type = "str"
default = ""
hidden = true

[tabs.slurm.merge_walltime]
name = "Merge, Walltime (dd-hh:mm:ss)"
description = "Max running time for Merge job"
type = "str"
default = "1-00:00:00"
hidden = ["stream_spa", "stream_tomo", "map_post_process", "stream_spr", "tomo_spr", "spr_import_raw", "tomo_import_raw", "spr_tomo_map_mask", "tomo_mask", "spr_tomo_post_process", "tomo_particles_train", "tomo_milo_train", "tomo_denoise_train", "tomo_drgn_vae", "tomo_drgn_analyze", "spr_drgn"]
advanced = true

[tabs.slurm.merge_queue]
name = "Merge, CPU partition"
description = "SLURM partition to submit Merge job"
type = "str"
input = { type="slurmQueue", group="cpu" }
# partiton settings need to be set in config.toml somehow, how could a user know what the partiton names are?
hidden = true

[tabs.slurm.merge_only]
name = "Merge, Resume"
description = "Run the Merge job before the Split job to resume failed runs"
type = "bool"
default = false
advanced = true

[tabs.slurm.merge_retries]
name = "Merge, Number of retries"
description = "Number of times to retry launching failed Split jobs"
type = "int"
default = 1
advanced = true
hidden = ["stream_spa", "stream_tomo", "map_post_process", "stream_spr", "tomo_spr", "spr_import_raw", "tomo_import_raw", "spr_tomo_map_mask", "tomo_mask", "spr_tomo_post_process", "tomo_particles_train", "tomo_milo_train", "tomo_denoise_train", "tomo_drgn_vae", "tomo_drgn_analyze", "spr_drgn"]

[tabs.slurm.daemon_tasks]
name = "Pre-processing, Threads"
description = "Number of CPUs used for Pre-processing job"
type = "int"
default = 1
hidden = ["spr_import_raw", "spr_import", "spr_import_star", "spr_pre_process", "spr_pure_preprocess", "spr_picking", "spr_coarse_refine", "spr_fine_refine", "spr_flexible_refine", "map_post_process", "tomo_import_raw", "tomo_import", "tomo_import_star", "tomo_pre_process", "tomo_initial_refine", "tomo_initial_reconstruct", "tomo_reference_refine", "tomo_coarse_refine", "tomo_new_coarse_refine", "tomo_new_coarse_classification", "tomo_flexible_refine", "tomo_flexible_refine_after", "tomo_post_process", "spr_map_clean", "tomo_map_clean", "spr_tomo_map_mask", "tomo_mask", "spr_tomo_post_process", "tomo_pure_preprocess", "tomo_segment_close", "tomo_segment_open", "tomo_picking", "tomo_particles_train", "tomo_particles_eval", "tomo_par_close", "tomo_par_open", "tomo_milo_train", "tomo_milo_eval", "tomo_denoise_train", "tomo_denoise_eval", "tomo_par_train", "tomo_par_eval", "tomo_drgn_vae", "tomo_drgn_analyze", "spr_drgn" ]
advanced = true

[tabs.slurm.daemon_memory_per_task]
name = "Pre-processing, Memory per thread (GB)"
description = "Amount of memory per thread for Pre-processing job"
type = "int"
default = 4
hidden = ["spr_import_raw", "spr_import", "spr_import_star", "spr_pre_process", "spr_pure_preprocess", "spr_picking", "spr_coarse_refine", "spr_fine_refine", "spr_flexible_refine", "map_post_process", "tomo_import_raw", "tomo_import", "tomo_import_pure", "tomo_import_star", "tomo_pre_process", "tomo_initial_refine", "tomo_initial_reconstruct", "tomo_reference_refine", "tomo_coarse_refine", "tomo_new_coarse_refine", "tomo_new_coarse_classification", "tomo_flexible_refine", "tomo_flexible_refine_after", "spr_map_clean", "tomo_map_clean", "spr_tomo_map_mask", "tomo_mask", "spr_tomo_post_process", "tomo_pure_preprocess", "tomo_segment_close", "tomo_segment_open", "tomo_picking", "tomo_particles_train", "tomo_particles_eval", "tomo_par_close", "tomo_par_open", "tomo_milo_train", "tomo_milo_eval", "tomo_denoise_train", "tomo_denoise_eval", "tomo_par_train", "tomo_par_eval", "tomo_drgn_vae", "tomo_drgn_analyze", "spr_drgn" ]
advanced = true

[tabs.slurm.daemon_memory]
name = "Pre-processing, Memory (GB)"
description = "Amount of memory for Pre-processing job"
type = "int"
default = 4
hidden = true

[tabs.slurm.daemon_gres]
name = "Pre-processing, Gres"
description = "List of generic resource scheduling options (e.g., lscratch:500,shrd=64,gpu:H100:1)"
type = "str"
default = ""
hidden = ["spr_import_raw", "spr_import", "spr_import_star", "spr_pre_process", "spr_pure_preprocess", "spr_picking", "spr_coarse_refine", "spr_fine_refine", "spr_flexible_refine", "map_post_process", "tomo_import_raw", "tomo_import", "tomo_import_pure", "tomo_import_star", "tomo_pre_process", "tomo_initial_refine", "tomo_initial_reconstruct", "tomo_reference_refine", "tomo_coarse_refine", "tomo_new_coarse_refine", "tomo_new_coarse_classification", "tomo_flexible_refine", "tomo_flexible_refine_after", "spr_map_clean", "tomo_map_clean", "spr_tomo_map_mask", "tomo_mask", "spr_tomo_post_process", "tomo_pure_preprocess", "tomo_segment_close", "tomo_segment_open", "tomo_picking", "tomo_particles_train", "tomo_particles_eval", "tomo_par_close", "tomo_par_open", "tomo_milo_train", "tomo_milo_eval", "tomo_denoise_train", "tomo_denoise_eval", "tomo_par_train", "tomo_par_eval", "tomo_drgn_vae", "tomo_drgn_analyze", "spr_drgn" ]
advanced = true

[tabs.slurm.daemon_account]
name = "Pre-processing, Slurm account"
description = "Charge resources used for Pre-processing job to specified account"
type = "str"
default = ""
hidden = true

[tabs.slurm.daemon_walltime]
name = "Pre-processing, Walltime (dd-hh:mm:ss)"
description = "Max running time for Pre-processing job"
type = "str"
default = "5-00:00:00"
hidden = ["spr_import_raw", "spr_import", "spr_import_star", "spr_pre_process", "spr_pure_preprocess", "spr_picking", "spr_coarse_refine", "spr_fine_refine", "spr_flexible_refine", "map_post_process", "tomo_import_raw", "tomo_import", "tomo_import_pure", "tomo_import_star", "tomo_pre_process", "tomo_initial_refine", "tomo_initial_reconstruct", "tomo_reference_refine", "tomo_coarse_refine", "tomo_new_coarse_refine", "tomo_new_coarse_classification", "tomo_flexible_refine", "tomo_flexible_refine_after", "spr_map_clean", "tomo_map_clean", "spr_tomo_map_mask", "tomo_mask", "spr_tomo_post_process", "tomo_pure_preprocess", "tomo_segment_close", "tomo_segment_open", "tomo_picking", "tomo_particles_train", "tomo_particles_eval", "tomo_par_close", "tomo_par_open", "tomo_milo_train", "tomo_milo_eval", "tomo_denoise_train", "tomo_denoise_eval", "tomo_par_train", "tomo_par_eval", "tomo_drgn_vae", "tomo_drgn_analyze", "spr_drgn" ]
advanced = true

[tabs.slurm.daemon_queue]
name = "Pre-processing, CPU partition"
description = "SLURM partition to use for Pre-processing job"
type = "str"
input = { type="slurmQueue", group="cpu" }
# partiton settings need to be set in config.toml somehow, how could a user know what the partiton names are?
hidden = true

[tabs.slurm.class2d_tasks]
name = "2D classification, Threads"
description = "Number of CPUs used for 2D classification job"
type = "int"
default = 1
hidden = ["spr_import_raw", "spr_import", "spr_import_star", "spr_pre_process", "spr_pure_preprocess", "spr_picking", "spr_coarse_refine", "spr_fine_refine", "spr_flexible_refine", "map_post_process", "tomo_import_raw", "tomo_import", "tomo_import_pure", "tomo_import_star", "tomo_pre_process", "tomo_initial_refine", "tomo_initial_reconstruct", "tomo_reference_refine", "tomo_coarse_refine", "tomo_new_coarse_refine", "tomo_new_coarse_classification", "tomo_flexible_refine", "tomo_flexible_refine_after", "spr_map_clean", "tomo_map_clean", "stream_tomo", "spr_tomo_map_mask", "tomo_mask", "spr_tomo_post_process", "tomo_pure_preprocess", "tomo_segment_close", "tomo_segment_open", "tomo_picking", "tomo_particles_train", "tomo_particles_eval", "tomo_par_close", "tomo_par_open", "tomo_milo_train", "tomo_milo_eval", "tomo_denoise_train", "tomo_denoise_eval", "tomo_par_train", "tomo_par_eval", "tomo_drgn_vae", "tomo_drgn_analyze", "spr_drgn" ]

[tabs.slurm.class2d_memory_per_task]
name = "2D classification, Memory per thread (GB)"
description = "Amount of memory per thread for 2D classification job"
type = "int"
default = 4
hidden = ["spr_import_raw", "spr_import", "spr_import_star", "spr_pre_process", "spr_pure_preprocess", "spr_picking", "spr_coarse_refine", "spr_fine_refine", "spr_flexible_refine", "map_post_process", "tomo_import_raw", "tomo_import", "tomo_import_pure", "tomo_import_star", "tomo_pre_process", "tomo_initial_refine", "tomo_initial_reconstruct", "tomo_reference_refine", "tomo_coarse_refine", "tomo_new_coarse_refine", "tomo_new_coarse_classification", "tomo_flexible_refine", "tomo_flexible_refine_after", "spr_map_clean", "tomo_map_clean", "stream_tomo", "spr_tomo_map_mask", "tomo_mask", "spr_tomo_post_process", "tomo_pure_preprocess", "tomo_segment_close", "tomo_segment_open", "tomo_picking", "tomo_particles_train", "tomo_particles_eval", "tomo_par_close", "tomo_par_open", "tomo_milo_train", "tomo_milo_eval", "tomo_denoise_train", "tomo_denoise_eval", "tomo_par_train", "tomo_par_eval", "tomo_drgn_vae", "tomo_drgn_analyze", "spr_drgn" ]
advanced = true

[tabs.slurm.class2d_memory]
name = "2D classification, Memory (GB)"
description = "Amount of memory for 2D classification job"
type = "int"
default = 4
hidden = true

[tabs.slurm.class2d_gres]
name = "2D classification, Gres"
description = "List of generic resource scheduling options (e.g., lscratch:500,shrd=64)"
type = "str"
default = ""
hidden = ["spr_import_raw", "spr_import", "spr_import_star", "spr_pre_process", "spr_pure_preprocess", "spr_picking", "spr_coarse_refine", "spr_fine_refine", "spr_flexible_refine", "map_post_process", "tomo_import_raw", "tomo_import", "tomo_import_pure", "tomo_import_star", "tomo_pre_process", "tomo_coarse_refine", "tomo_reference_refine", "tomo_new_coarse_refine", "tomo_new_coarse_classification", "tomo_flexible_refine", "tomo_flexible_refine_after", "spr_map_clean", "tomo_map_clean", "stream_tomo", "spr_tomo_map_mask", "tomo_mask", "spr_tomo_post_process", "tomo_pure_preprocess", "tomo_segment_close", "tomo_segment_open", "tomo_picking", "tomo_particles_train", "tomo_particles_eval", "tomo_par_close", "tomo_par_open", "tomo_milo_train", "tomo_milo_eval", "tomo_denoise_train", "tomo_denoise_eval", "tomo_par_train", "tomo_par_eval", "tomo_drgn_vae", "tomo_drgn_analyze", "spr_drgn" ]
advanced = true

[tabs.slurm.class2d_account]
name = "2D classification, Slurm account"
description = "Charge resources used for 2D classification job to specified account"
type = "str"
default = ""
hidden = true

[tabs.slurm.class2d_walltime]
name = "2D classification, Walltime (dd-hh:mm:ss)"
description = "Max running time for 2D classification job"
type = "str"
default = "5-00:00:00"
hidden = ["spr_import_raw", "spr_import", "spr_import_star", "spr_pre_process", "spr_pure_preprocess", "spr_picking", "spr_coarse_refine", "spr_fine_refine", "spr_flexible_refine", "map_post_process", "tomo_import_raw", "tomo_import", "tomo_import_pure", "tomo_import_star", "tomo_pre_process", "tomo_initial_refine", "tomo_initial_reconstruct", "tomo_reference_refine", "tomo_coarse_refine", "tomo_new_coarse_refine", "tomo_new_coarse_classification", "tomo_flexible_refine", "tomo_flexible_refine_after", "spr_map_clean", "tomo_map_clean", "stream_tomo", "spr_tomo_map_mask", "tomo_mask", "spr_tomo_post_process", "tomo_pure_preprocess", "tomo_segment_close", "tomo_segment_open", "tomo_picking", "tomo_particles_train", "tomo_particles_eval", "tomo_par_close", "tomo_par_open", "tomo_milo_train", "tomo_milo_eval", "tomo_denoise_train", "tomo_denoise_eval", "tomo_par_train", "tomo_par_eval", "tomo_drgn_vae", "tomo_drgn_analyze", "spr_drgn" ]
advanced = true

[tabs.slurm.class2d_queue]
name = "2D classification, Partition"
description = "SLURM partition to use for 2D classification job"
type = "str"
input = { type="slurmQueue", group="cpu" }
# partiton settings need to be set in config.toml somehow, how could a user know what the partiton names are?
hidden = true

[tabs.slurm.profile]
name = "Save profiling information"
description = "Store diagram as pdf file"
type = "bool"
default = false
hidden = true