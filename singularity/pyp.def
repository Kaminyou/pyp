Bootstrap: docker
From: conda/miniconda3-centos7
IncludeCmd: no

%help
	TODO

%files

	bin/* /opt/pyp/bin/
	config/ /opt/pyp
	src/ /opt/pyp
	LICENSE  /opt/pyp
	nextpyp.toml /opt/pyp
 	pyproject.toml /opt/pyp
	README.rst /opt/pyp
	tests/ /opt/pyp
	external/ /opt/pyp
	../AreTomo2/ /opt/pyp/external
	../MotionCor3/ /opt/pyp/external

%environment

	# this needs to be set here because it's the first thing pyp does, even before initializing env vars
	export PYP_DIR=/opt/pyp

	# somehow, after all that installation trouble, conda *STILL* doesn't manage to make the packages available to python
	# probably because we don't have any way to "activate" the conda environment inside the container
	# so we'll have to do it manually... sigh
	export LD_LIBRARY_PATH=/usr/local/envs/pyp/lib:$LD_LIBRARY_PATH
	export PATH=$PYP_DIR/bin:/usr/local/envs/pyp/bin:$PATH
	export PYTHONPATH=/opt/pyp/src
	export IMOD_DIR=/opt/IMOD
	export PATH=$PATH:$IMOD_DIR/bin
	export PATH=$PATH:/opt/potrace-1.16.linux-x86_64

%post
	# remove .git directory to save space
	rm -rf /opt/pyp/.git
	# install packages required by ETTK
	yum -y update
	yum install -y which openssh gcc-4.8.5 gcc-c++-4.8.5 libXt-devel freeglut-devel git make vim nano bzip2 bzip2-libs bzip2-devel numactl-devel libjpeg ImageMagick wget epel-release graphviz fftw_devel libtiff-devel
	yum groupinstall -y "Development Tools"
	yum clean all

	# install pbzip2 from source
        NAME=pbzip2-1.1.13
        TARFILE=${NAME}.tar.gz
        wget https://launchpad.net/pbzip2/1.1/1.1.13/+download/$TARFILE
        tar xvfz $TARFILE
        cd $NAME
        make
        make install
        make clean
	cd -
        rm -rf $NAME
	rm $TARFILE
	
	# NOTE: the shell here is apparently /bin/sh = dash

	# make in/out folders we can mount to
	mkdir /var/batch
	mkdir /var/data
	mkdir /var/users
	mkdir /var/out
	mkdir /var/scratch

	# load external packages
	cd /opt/pyp/external
	git clone https://github.com/nextpyp/spr_pick.git --depth 1
	rm -rf spr_pick/.git
	git clone https://github.com/nextpyp/cet_pick.git --depth 1
	rm -rf cet_pick/.git
	git clone https://github.com/nextpyp/postprocessing.git --depth 1
	rm -rf postprocessing/.git
	cd -

	# Install CUDA-11.4
	CUDA_HOME=/usr/local/cuda-11.4
	CUDA_RPM=cuda-repo-rhel7-11-4-local-11.4.0_470.42.01-1.x86_64.rpm
	wget https://developer.download.nvidia.com/compute/cuda/11.4.0/local_installers/${CUDA_RPM}
	rpm -i ${CUDA_RPM}
	rm -rf ${CUDA_RPM}
	yum clean all
	yum -y install nvidia-driver-latest-dkms cuda
	yum -y install cuda-drivers

	cd /opt/pyp/external/AreTomo2
	# git clone https://github.com/czimaginginstitute/AreTomo2.git --depth 1
	# cd AreTomo2
	make exe -f makefile11 CUDAHOME=${CUDA_HOME} -j 4
	cd -
	# git clone https://github.com/czimaginginstitute/MotionCor3.git --depth 1
	# cd MotionCor3
	cd /opt/pyp/external/MotionCor3
	# git clone https://github.com/czimaginginstitute/AreTomo2.git
	make exe -f makefile11 CUDAHOME=${CUDA_HOME} -j 4
	cd -

	# install IMOD
	wget --no-check-certificate https://bio3d.colorado.edu/imod/AMD64-RHEL5/imod_4.11.24_RHEL7-64_CUDA8.0.sh
	sh imod_4.11.24_RHEL7-64_CUDA8.0.sh -yes -skip -name IMOD -dir /opt
	rm -rf imod_4.11.24_RHEL7-64_CUDA8.0.sh

	# Conda is apparently a terrible package manager and
	# totally fails to install 2 packages (two!!) in less than 30 minutes! (didn't try waiting longer...)
	# Might be because conda is SUPER DUPER picky about its environment.
	# Looks like we need to run the conda commands inside a special bash environment using 'conda run'.
	# Thanks to this blog post for finally helping me figure this out:
	# https://pythonspeed.com/articles/activate-conda-dockerfile/

	# write the conda script
cat << EOF > /root/conda.sh

	# just for posterity ...
	conda --version

	# install the python packages we need

	conda install pymongo pillow toml seaborn requests pytest scikit-learn scikit-image matplotlib pandas
	conda install -c conda-forge conda-pack jsonrpcclient=3.3.6 overrides colorlog opencv click
	conda install -c conda-forge colored-traceback
	# conda install -c pspuhler matlab_engine
	conda install topaz -c tbepler
	conda update libstdcxx-ng
	conda clean --all
	
	conda-pack -n pyp -o /tmp/env.tar && \
		mkdir /venv && cd /venv && tar xf /tmp/env.tar && \
		rm /tmp/env.tar
	/venv/bin/conda-unpack
	
EOF
	# need to create a new environment for conda to actually install anything without failing, see:
	# https://github.com/conda/conda/issues/9367#issuecomment-558863143
	# alas, we can't actually "activate" this environment, because conda fails saying the envrionment is unsupported
	/usr/local/bin/conda update conda
	/usr/local/bin/conda create --name pyp python=3.8

	# run the conda script in the pyp environment
	# tragically conda buffers stdout and stderr, which is basically terrible
	# so try to redirect them somewhere we'll see them sooner
	# like the stdout of *this* script: /proc/$$/fd/1
	chmod +x /root/conda.sh
	/usr/local/bin/conda run -n pyp /bin/bash -c "/root/conda.sh > /proc/$$/fd/1 2>&1"
	export PATH=/usr/local/envs/pyp/bin:$PATH

	pip install torch==2.0.1 torchvision==0.15.2 tensorboard h5py imagesize tqdm
	pip install torchio==0.18.92 healpy==1.14.0 phoenix==0.9.1 dataset==1.6.2 Pillow==10.0.1 pyarrow==11.0.0 scikit_network==0.28.2
	pip install mrcfile pytorch_metric_learning progress faiss-gpu
	pip install nibabel
	pip install numba
	pip install gputil
	pip install dipy
	pip install bm4d
	pip install filelock
	pip cache purge

%startscript

%apprun binds
