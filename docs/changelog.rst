=========
Changelog
=========

v0.7.0
------

.. nextpyp:: Released 5/5/2025
   :collapsible: open
   
   :fa:`star` **New features**
   
   - New blocks to run :doc:`molecular pattern mining and particle localization<guide/milopyp>` (MiLoPYP) as described in `Huang et al., 2024 <https://www.nature.com/articles/s41592-024-02403-6>`_. Easily run MiLoPYP on a set of tomograms generated by a pre-processing block, and visualize class labels along with UMAP embeddings directly on the website. Candidate particle locations identified by MiLoPYP can be easily passed to downstream 3D refinement by adding a refinement block.

   - New block architecture with dedicated training and evaluation blocks facilitates the execution of neural network-based workflows. This modular design enhances the flexibility of machine learning workflows and supports real-time visualization of loss functions to monitor convergence, and streaming of results from denoising, particle picking, and heterogeneity analysis operations.

   - A new, dedicated suite of blocks for tomography particle picking offers a more intuitive and independent workflow, separate from other pre-processing steps. These blocks support multiple particle picking strategies, including size-based selection, template matching, geometry-based methods, manual picking, and importing coordinates from external tools.
  
   - Simpler block architecture facilitates all refinement and classification tasks. Together, the new blocks support a wide range of reconstruction and refinement strategies, including reference-based refinement, ab-initio refinement, tilt-geometry refinement, beam-induced motion correction, CTF refinement, and heterogeneity analysis. The older block architecture is still available for legacy projects.

   - 3D particle picking using template search is supported through integration with `pytom-match-pick <https://sbc-utrecht.github.io/pytom-match-pick/>`_, a GPU-accelerated template matching tool. The workflow features built-in support for seamless transferring of particle orientations obtained from 3D template matching into downstream refinement blocks.

   - Size-based particle picking as described in `Jin et al., 2024 <https://doi.org/10.1016/j.yjsbx.2024.100104>`_. Enables fast 3D particle detection using only an approximate particle radius. Results can be visualized directly in the web interface, with automatic masking to exclude regions near high-contrast artifacts or ice contamination.

   - 3D segmentation of tomograms using `MemBrain-Seg <https://github.com/teamtomo/membrain-seg>`_ (evaluation only). Conveniently segment thousands of tomograms using a pre-trained model, and viualize the segmentation results directly in the web interface. TODO.

   - Tomogram denosing is supported via integration with `cryoCARE <https://github.com/juglab/cryoCARE_pip>`_ for both training and evaluation. Seamless integration with cryoCARE routines automatically generates half-tomograms, streamlining the training and evaluation of denoising models. Both the loss function and resulting denoised tomograms can be easily visualized within the web interface.

   - Tomogram denosing with `IsoNet <https://github.com/IsoNet-cryoET/IsoNet>`_ is supported for both training and evaluation, with real-time monitoring of loss function and outputs directly in the web interface. Denoised outputs can be seamlessly fed into downstream blocks such as particle picking or segmentation, enabling smooth integration of IsoNet into existing workflows.

   - New blocks to run continuous heterogeneity analysis using `tomoDRGN <https://github.com/bpowell122/tomodrgn>`_. Access the entire tomoDRGN workflow through four modular blocks that can be linked after any 3D refinement job. Training metrics and other outputs are streamed to the web interface in real-time, with direct visualization of UMAP and PCA embeddings, cluster centroids, and coresponding 3D volumes.

   - Beta: A new ab-initio refinement strategy based on constrained single-particle tomography enables de novo structure determination. A random 10% of particles is used to generate an initial volume, followed by iterative alignment of random subsets. Convergence can be improved using an optional shape mask, and multi-class ab-initio refinement is available for dealing with heterogeneous datasets.

   - Beam-tilt refinement and correction for single-particle and tomography pipelines. The of cisTEM's functionality for beam-tilt refinement and correction is now available in nextPYP. This feature allows users to refine the beam-tilt parameters during 3D refinement, improving the resolution of the final reconstruction.

   - Standalone mode is now also supported in the :doc:`command line interface (CLI)<cli/installation>` pipeline. Users can now use the CLI in a desktop or local computer without access to a cluster or web server. 

   - nextPYP users can now be mapped to corresponding Operating System (OS) users, allowing job processes to run under the connected OS user instead of a shared service account. As a result, any files created by a job will be owned by the individual OS user. This ensures that user jobs adhere to system-level resource policies, such as storage quotas or SLURM-based resource limits. File access and sharing between users are now governed by the underlying filesystem permissions rather than nextPYP settings.

   - The new system of :doc:`SLURM cluster templates<reference/templates>` offers greater flexibility for submitting jobs to a cluster. Designed to accommodate the wide range of cluster environments and scheduler configurations, this template system allows you to tailor job submission to the specific requirements of your setup.

   - Import tilt-series alignments from external programs in IMOD format using \*.xf and \*.tlt files. A new pre-processing block in nextPYP enables you to bring in existing alignments for continued processingâ€”such as denoising, particle picking, and 3D refinement. This added flexibility is especially useful for challenging datasets that are difficult to align automatically.

   - Export 3D particle coordinates in IMOD format to use in external programs (sva/\*.spk files). Extract a clean set of particles from any refinement or classification block, and then export the coordinates in IMOD format to use in other programs.

   - A new option is available to export particle stacks for use in external programs. While nextPYP workflows don't save particle stacks to optimize storage, this feature allows users to export them for compatibility with other software.

   - Refinement metadata is now stored in cisTEM's new binary format, offering up to 2x faster refinement and classification. This format is the default for all refinement blocks, resulting in smaller files that are quicker to read and write. The previous text-based format remains available for legacy projects.

   - Automatic density-based masking is now available during 3D refinement. An adaptive shape mask can be applied to the reference map at each iteration, enhancing the quality of the final reconstruction.

   - Add option to save `*.mrc` files in 16-bit precision has been added, offering up to 50% storage savings (enabled by default). With this setting, tomograms and frame averages are saved in 16-bit precision, significantly reducing storage requirements, particularly for large datasets.
 
   - From the **Jobs** menu, you can now select individual blocks to run with a single click using the "Only" option. This feature makes it easy to quickly choose a specific block to run, especially in projects with many blocks, without the need to manually select or deselect jobs.

   - Support for importing Relion 5 tomography projects has been added. In addition to Relion 4, you can now import existing Relion 5 projects into nextPYP, enabling you to leverage the new features and capabilities of nextPYP while continuing to work with other software packages.

   - A new documentation theme has been introduced, featuring expanded tutorials, user guides, and setup instructions. The updated installation guide offers detailed steps for setting up nextPYP in various environments, including clusters and desktop workstations. Additionally, the documentation covers all the latest features and provides comprehensive information for running cryo-EM/ET workflows and getting help from the ``nextPYP`` team.

   :fa:`plus-square` **Improvements**

   - More efficient and robust handling of large single-particle and tomography datasets. Various performance improvements have been made to enhance the efficiency and robustness of nextPYP when working with large datasets. These improvements include optimizations in data handling, processing speed, and memory management.

   - Enhanced control over tilt-series alignment and reconstruction when using IMOD. Additional parameters are now exposed, giving users greater flexibility to tailor alignment and reconstruction settings to their specific datasets and needs.

   - The ``Show advanced options`` checkbox now has a global scope, ensuring a consistent experience across all dialog forms. Once enabled, the setting is remembered throughout the interface for improved convenience. 

   - Reshaping image options have been moved from the **Reconstruction** tab to the **Tilt-series alignment** tab. This reorganization streamlines the workflow and places the reshaping settings in a more intuitive location.

   - Allow users to specify how many times should nextPYP try to relaunch failed SLURM jobs. When attached to a slurm cluster, nextPYP will automatically retry failed jobs up to the specified number of times. This feature helps ensure that jobs are completed successfully, even in the event of temporary issues.

   - Improved handling of micrographs/tilt-series that have few or no particles after filtering.

   - Report IMOD's fiducial model residual error during tilt-series alignment. Residual error is a measure of how well the fiducial markers are aligned, and reporting this value can help users assess the quality of the alignment.

   - Improved handling of tilt-series acquired with rectangular-shaped detectors. The data is now automatically rotated to ensure correct orientation and efficient processing throughout the workflow.

   :fa:`bug` **Bug fixes**
   
   - Fixed a bug in the navigation bar of refinement blocks that occurred when multiple classes were used.

   - Fixed a bug related to applying IMOD anisotropic diffusion denoising during the refinement process.

   - Fixed a bug that prevented launch task parameters from being applied when starting sessions.

   - Fixed a bug that caused incorrect binning to be applied during manual virion picking.

   - Fixed a bug that prevented tomogram dimensions and binning from updating correctly.

   - Fixed a bug that prevented tomograms from being recalculated in AreTomo when reconstruction parameters were modified.

   - Various bug fixes and performance improvements.

v0.6.5
------
.. nextpyp:: Released 4/6/2024
   :collapsible: open

   :fa:`plus-square` **Improvements**

   - Update format of logger messages to more clearly show the nextPYP version and resources assigned to each job.

   - Use same tilt-axis angle convention for aligning tilt-series using IMOD and AreTomo2.

   :fa:`bug` **Bug fixes**

   - Prevent error during tilt-series alignment with AreTomo2 when number of patches = 1.

   - Fix bug in command line interface that ocurred when launching constrained refinement.

   - Fix bug that was causing the server startup routines to be called during the CLI processing of the configuration file.

   - Fix bug that ocurred when retrieving metadata from mdoc files.

   - Fix bug when trying to retrieve tilt-series metadata from failed runs.

   - Fix conflicts with library paths when running external executables.

v0.6.4
------
.. nextpyp:: Released 3/24/2024
   :collapsible: open

   :fa:`plus-square` **Improvements**

   - Implement mechanism to isolate logs from failed jobs in the Logs tab.

   - Add support for project names with special characters.

   - Remove many commonly used parameters from the advanced category.

   - Add progress bars during export of metadata to .star format.

   - Allow export of particle coordinates from streaming sessions.

   - Check that .order files have the same number of entries as images in the tilt-series.

   :fa:`bug` **Bug fixes**

   - Fix bugs when reading metadata from \*.mdoc files.

   - Prevent dragging of multiple connections from block outputs in project view.

   - Fix bug when managing GPU resources in standalone mode.

   - Fix bug when using grouping of frames during movie processing.

   - Fix bug in single-particle pipeline during hot pixel removal.

   - Fix bug in Table view that caused content to overlap when resizing columns.

   - Always export metadata in .star format to current project directory (user specified location is no longer supported).

v0.6.3
------
.. nextpyp:: Released 3/01/2024
   :collapsible: open

   :fa:`plus-square` **Improvements**

   - Allow import of clean particles obtained after 3D classification into pre-processing block.

   - Stop saving unnecessary metadata files during constrained refinement.

   - Implement particle list picker that was missing from some import blocks.

   - Implement parameter groups in UI to better handle conditional parameters.

   - Add links to download tomograms and metadata for ArtiaX plugin.

   - Provide more granular information when determining handedness of tilt-series.

   - Allow users to control the timeout for deleting the scratch folder of zombie jobs.

   - Add new parameter to control size of patches during patch-tracking to prevent tiltxcorr errors.

   - Upgrade program versions to MotionCor3 1.1.1 and AreTomo2 1.1.2.

   - Allow use of environment variables when specifying the local scratch directory.

   :fa:`bug` **Bug fixes**

   - Hide the export tab from particle filtering blocks for tomography projects.

   - Fix bug that ocurred when skipping frame alignment during movie processing.

   - Fix bug in function used to export sessions to .star format.

   - Fix bug in tomography sessions that ocurred when using size-based particle picking.

   - Fix bug when exporting metadata in star format that saved the files to the incorrect folder.

   - Fix bug when setting number of patches when running AreTomo2.

   - Fix inconsistencies in the determination of parameter changes between consecutive runs.

   - Stop trying to launch external programs for sub-tomogram averaging after particle extraction.

   - Fix issue with missing metadata entries during tilt-series re-processing.

   - Correctly discard particles that are too close to gold fiducials.

   - Fix issue with management of virion selection thresholds that affected geometric particle picking.

   - Fix bug when creating montages that ocurred when particle radius was equal to half the box size.

   - Fix bug when re-running pre-processing after virion selection.

   - Fix bug with links used to download maps for older iterations.

v0.6.2
-------
.. nextpyp:: Released 2/01/2024
   :collapsible: open

   :fa:`plus-square` **Improvements**

   - Expose additional parameters for frame alignment when using MotionCor3.

   - Remove unnecessary tabs from tomography refinement blocks.

   - Display slurm job launch information in the logs window.

   - Allow users to specify resources for the launch task on the Sessions side.

   :fa:`bug` **Bug fixes**

   - Fix bugs in parameter definitions when running movie frame alignment.

   - Fix bugs in the management of slurm's GRES options when submitting jobs to the scheduler.

   - Fix bug with movie drifts being deleted from the database when tilt-series were re-processed.

v0.6.1
------
.. nextpyp:: Released 1/30/2024
   :collapsible: open

   :fa:`star` **New features**

   - Produce metadata for 3D visualization using `ArtiaX <https://github.com/FrangakisLab/ArtiaX>`_ for all refinement blocks. See the :doc:`user guide<guide/chimerax_artiax>` for details.

   - Enable dose weighting and magnification correction options during frame alignment and averaging.

   - Allow specification of SLURM account for all job types to improve portability.

   :fa:`plus-square` **Improvements**

   - Expose full set of options when using MotionCor3 for frame alignment.

   - Allow specification of GPU resources using Gres option to allow selection of specific types of graphics cards, e.g., gpu:A100:1.

   - Add support for multiple date formats when reading metadata from .mdoc files.

   - Add support for .gain reference files and automatically resize corresponding .eer movies in data import blocks.

   :fa:`bug` **Bug fixes**

   - Fix issue when handling \*.tif files that have a \*.tiff extension.

   - Fix issue with multiprocessing library when using NFS mounts as local scratch.

   - Fix bug in single-particle sessions when using unbinned images for 2D classification.

   - Fix bug when picking particles using neural network-based approach on non-square tomograms.

   - Fix bug that prevented GPU jobs from running because the jobs were sent to the CPU queue.

v0.6.0
------
.. nextpyp:: Released 1/21/2024
   :collapsible: open

   :fa:`star` **New features**

   - Allow use of `MotionCor3 <https://github.com/czimaginginstitute/MotionCor3>`_ for movie frame alignment (GPU required).

   - Allow use of `AreTomo2 <https://github.com/czimaginginstitute/AreTomo2>`_ for tilt-series alignment and reconstruction (GPU required).

   - Allow use of `Topaz <https://github.com/tbepler/topaz>`_ for 2D particle picking and 3D denoising (GPU recommended).

   - Produce .bild files after each refinement iteration for 3D visualization in Chimera/ChimeraX.

   - Automatic determination of CTF handedness during pre-processing of tilt-series.

   :fa:`plus-square` **Improvements**

   - Allow mix-and-match of IMOD and AreTomo2 for tilt-series alignment and tomogram reconstruction.

   - Automatically submit jobs to a GPU partition when running tasks that require GPU acceleration.

   - Display version number and amount of allocated memory at the beginning of every job.

   - Change default memory allocation for launch task to 4GB and add Resources tab to all data import blocks.

   - Simplify Resources tab by hiding unnecessary parameters depending on the block type.

   - Implement GPU resource management policies for slurm and standalone modes.

   - Show per-particle score distribution for all tomography refinement blocks and improve plot layout.

   - Allow use of slurm's GRES (generic resource scheduling) when submitting jobs to a cluster.

   :fa:`bug` **Bug fixes**

   - Fix OOM error when running constrained refinement using a single thread.

   - Fix error in particle filtering blocks when no particles are left in a given micrograph/tilt-series.

   - Fix issue in tomography sessions when .mdoc files are not used to import metadata.

   - Fix bug when exporting sub-tomograms for use in external programs.

   - Update systemd script to improve robustness during program restart.

   - Fix issues with cancellation of jobs in standalone mode.

   - Fix discrepancy with gain reference rotation/flips between data import and pre-processing blocks.

v0.5.3
------
.. nextpyp:: Released 11/25/2023
   :collapsible: open

   :fa:`star` **New features**

   - Implement interactive measuring tool for micrographs and tomograms.

   - Allow multiple sessions when user login mode is enabled.

   :fa:`plus-square` **Improvements**

   - Sort classes in increasing order in Class View panel.

   :fa:`bug` **Bug fixes**

   - Fix issues when limiting total number of tasks in slurm scheduler.

v0.5.2
------
.. nextpyp:: Released 11/18/2023
   :collapsible: open

   :fa:`star` **New features**

   - Add support for PACEtomo tilt-series in streaming Sessions.

   :fa:`plus-square` **Improvements**

   - Parallelize reconstruction step during 3D classification for faster speeds.

   - Add new options to flip maps in post-processing block.

   - Simplify installation instructions and setup process.

   :fa:`bug` **Bug fixes**

   - Fix issue with location of executables for neural network-based particle picking.

   - Fix issue with re-calculation of binned tomograms when reconstruction parameters change.

   - Fix issue with re-calculation of particle coordinates when no particles were found.

   - Correctly display particle size in tomography pre-processing block statistics.

v0.5.1
------
.. nextpyp:: Released 11/04/2023
   :collapsible: open

   :fa:`star` **New features**

   - Import frame tilt-series data using mdoc files produced by PACEtomo.

   :fa:`plus-square` **Improvements**

   - Allow typing iteration number in navigation bar for refinement blocks.

   - Show refinement/bundle IDs in ``Per-particle Score`` and ``Exposure Weights`` tabs for refinement blocks.

   :fa:`bug` **Bug fixes**

   - Fix issue with display of tomograms with arbitrary thickness.

   - Fix broken CLI commands and update CLI tutorials.

v0.5.0
------
.. nextpyp:: Released 10/26/2023
   :collapsible: open

   - This was the first release of nextPYP.